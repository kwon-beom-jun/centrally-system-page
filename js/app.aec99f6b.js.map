{"version":3,"file":"js/app.aec99f6b.js","mappings":"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","sources":["webpack://centrally-web/./src/store/auth.js","webpack://centrally-web/./src/views/auth/OAuthCallback.vue","webpack://centrally-web/./src/views/auth/OAuthCallback.vue?7df0","webpack://centrally-web/./src/router/auth.js","webpack://centrally-web/./src/components/common/table/DefaultTable.vue","webpack://centrally-web/./src/components/common/table/DefaultTable.vue?e0ad","webpack://centrally-web/./src/views/receipt/AnnualReceiptSummary.vue","webpack://centrally-web/./src/views/receipt/AnnualReceiptSummary.vue?b13b","webpack://centrally-web/./src/components/common/button/DefaultButton.vue","webpack://centrally-web/./src/components/common/button/DefaultButton.vue?bef1","webpack://centrally-web/./src/components/common/pagination/DefaultPagination.vue","webpack://centrally-web/./src/components/common/pagination/DefaultPagination.vue?be32","webpack://centrally-web/./src/components/common/textfield/DefaultTextfield.vue","webpack://centrally-web/./src/components/common/textfield/DefaultTextfield.vue?db89","webpack://centrally-web/./src/views/receipt/ReceiptRequestOverview.vue","webpack://centrally-web/./src/views/receipt/ReceiptRequestOverview.vue?527f","webpack://centrally-web/./src/views/receipt/ReceiptSidebar.vue","webpack://centrally-web/./src/views/receipt/ReceiptSidebar.vue?9c04","webpack://centrally-web/./src/utils/preview-modal.js","webpack://centrally-web/./src/views/receipt/PersonalReceiptHistory.vue","webpack://centrally-web/./src/views/receipt/PersonalReceiptHistory.vue?857a","webpack://centrally-web/./src/components/common/modal/AlertModal.vue","webpack://centrally-web/./src/components/common/modal/AlertModal.vue?f8ec","webpack://centrally-web/./src/views/receipt/ReceiptClosure.vue","webpack://centrally-web/./src/views/receipt/ReceiptClosure.vue?cdef","webpack://centrally-web/./src/views/receipt/ReceiptClosureOverview.vue","webpack://centrally-web/./src/views/receipt/ReceiptClosureOverview.vue?3b8c","webpack://centrally-web/./src/views/receipt/ReceiptSearch.vue","webpack://centrally-web/./src/views/receipt/ReceiptSearch.vue?8a7c","webpack://centrally-web/./src/views/receipt/ReceiptSearchDetail.vue","webpack://centrally-web/./src/views/receipt/ReceiptSearchDetail.vue?2107","webpack://centrally-web/./src/views/receipt/ReceiptPersonalRequestDetails.vue","webpack://centrally-web/./src/views/receipt/ReceiptPersonalRequestDetails.vue?ea42","webpack://centrally-web/./src/components/receipt/ReceiptSubmissionCreateModal.vue","webpack://centrally-web/./src/components/receipt/ReceiptSubmissionCreateModal.vue?9b1c","webpack://centrally-web/./src/views/receipt/ReceiptSubmission.vue","webpack://centrally-web/./src/views/receipt/ReceiptSubmission.vue?3b5e","webpack://centrally-web/./src/router/receipt.js","webpack://centrally-web/./src/components/hrm/NoticeIntegratedCreateModifyModal.vue","webpack://centrally-web/./src/components/hrm/NoticeIntegratedCreateModifyModal.vue?e3c7","webpack://centrally-web/./src/api/hrm/NoticeIntegratedApi.js","webpack://centrally-web/./src/views/hrm/NoticeIntegrated.vue","webpack://centrally-web/./src/views/hrm/NoticeIntegrated.vue?fbdd","webpack://centrally-web/./src/components/common/kakao/address/KakaoAddressModal.vue","webpack://centrally-web/./src/components/common/kakao/address/KakaoAddressModal.vue?8e72","webpack://centrally-web/./src/views/hrm/UserInformation.vue","webpack://centrally-web/./src/views/hrm/UserInformation.vue?d0bf","webpack://centrally-web/./src/components/hrm/UserManagementModifyModal.vue","webpack://centrally-web/./src/components/hrm/UserManagementModifyModal.vue?5e04","webpack://centrally-web/./src/components/common/select/DefaultSelect.vue","webpack://centrally-web/./src/components/common/select/DefaultSelect.vue?b073","webpack://centrally-web/./src/views/hrm/UserManagement.vue","webpack://centrally-web/./src/views/hrm/UserManagement.vue?c5e7","webpack://centrally-web/./src/components/common/modal/EditModal.vue","webpack://centrally-web/./src/components/common/modal/EditModal.vue?e7ea","webpack://centrally-web/./src/views/hrm/DeptTeamManager.vue","webpack://centrally-web/./src/views/hrm/DeptTeamManager.vue?8103","webpack://centrally-web/./src/views/hrm/PerformanceHistory.vue","webpack://centrally-web/./src/views/hrm/PerformanceHistory.vue?5b92","webpack://centrally-web/./src/components/hrm/PerformanceManagementCreateModal.vue","webpack://centrally-web/./src/components/hrm/PerformanceManagementCreateModal.vue?6b6d","webpack://centrally-web/./src/components/hrm/PerformanceManagementDeleteModifyModal.vue","webpack://centrally-web/./src/components/hrm/PerformanceManagementDeleteModifyModal.vue?8799","webpack://centrally-web/./src/views/hrm/PerformanceManagement.vue","webpack://centrally-web/./src/views/hrm/PerformanceManagement.vue?c0fa","webpack://centrally-web/./src/views/hrm/UserPermissions.vue","webpack://centrally-web/./src/views/hrm/UserPermissions.vue?8df7","webpack://centrally-web/./src/router/hrm.js","webpack://centrally-web/./src/components/common/label/DefaultLabel.vue","webpack://centrally-web/./src/components/common/label/DefaultLabel.vue?c85d","webpack://centrally-web/./src/components/common/DefaultFormRow.vue","webpack://centrally-web/./src/components/common/DefaultFormRow.vue?4934","webpack://centrally-web/./src/api/system/ActivityLogApi.js","webpack://centrally-web/./src/views/system/ActivityLog.vue","webpack://centrally-web/./src/views/system/ActivityLog.vue?b82b","webpack://centrally-web/./src/views/system/RoleManagement.vue","webpack://centrally-web/./src/views/system/RoleManagement.vue?88e7","webpack://centrally-web/./src/router/system.js","webpack://centrally-web/./src/views/MainPage.vue","webpack://centrally-web/./src/views/MainPage.vue?5494","webpack://centrally-web/./src/views/UserLogin.vue","webpack://centrally-web/./src/views/UserLogin.vue?f291","webpack://centrally-web/./src/views/UserJoin.vue","webpack://centrally-web/./src/views/UserJoin.vue?3326","webpack://centrally-web/./src/router/index.js","webpack://centrally-web/./src/api/apiConfig.js","webpack://centrally-web/./src/api/auth/LoginApi.js","webpack://centrally-web/./src/components/HeaderLayout.vue","webpack://centrally-web/./src/components/HeaderLayout.vue?5ae0","webpack://centrally-web/./src/components/FooterLayout.vue","webpack://centrally-web/./src/components/FooterLayout.vue?9179","webpack://centrally-web/./src/components/NavigationLayout.vue","webpack://centrally-web/./src/components/NavigationLayout.vue?1d54","webpack://centrally-web/./src/App.vue","webpack://centrally-web/./src/App.vue?7ccd","webpack://centrally-web/./src/plugins/vuetify.js","webpack://centrally-web/./src/main.js","webpack://centrally-web/./src/store/loading.js","webpack://centrally-web/webpack/bootstrap","webpack://centrally-web/webpack/runtime/chunk loaded","webpack://centrally-web/webpack/runtime/define property getters","webpack://centrally-web/webpack/runtime/global","webpack://centrally-web/webpack/runtime/hasOwnProperty shorthand","webpack://centrally-web/webpack/runtime/make namespace object","webpack://centrally-web/webpack/runtime/jsonp chunk loading","webpack://centrally-web/webpack/startup"],"sourcesContent":["import { defineStore } from 'pinia';\n\nexport const useAuthStore = defineStore('auth', {\n  // 상태 (state)\n  state: () => ({\n    isAuthenticated: false,\n    user: null,\n    userEmail: null,\n    userProfileImgUrl: null,\n    roles: [],  // 추가: 사용자의 모든 권한 목록\n  }),\n\n  // 게터 (getters)\n  getters: {\n    isLoggedIn: (state) => state.isAuthenticated,\n    getUser: (state) => state.user,\n    getUserEmail: (state) => state.userEmail,\n    getUserProfileImgUrl: (state) => state.userProfileImgUrl,\n    getRoles: (state) => state.roles,\n  },\n\n  // 액션 (actions)\n  actions: {\n    // (A) 로그인 시 사용자 정보 세팅\n    login(userData) {\n      // userData = { username: '...', roles: ['ROLE_EMPLOYEE', 'ROLE_MANAGER'] } 등\n      this.user = userData.username;\n      this.userEmail = userData.userEmail;\n      this.userProfileImgUrl = userData.userProfileImgUrl;\n      this.roles = userData.roles || [];\n      this.isAuthenticated = true;\n    },\n\n    // (B) 로그아웃 시 상태 초기화\n    logout() {\n      this.user = null;\n      this.userEmail = null;\n      this.userProfileImgUrl = null;\n      this.roles = [];\n      this.isAuthenticated = false;\n    }\n  },\n  // pinia-plugin-persistedstate 설정\n  //  - Pinia 상태는 기본적으로 메모리에만 존재하므로,\n  //    새로고침(또는 탭/브라우저 종료 후 재접속)하면 모든 상태가 초기화되므로\n  //    스토어 상태를 브라우저 저장소(LocalStorage)에 저장\n  persist: true,\n});","<template>\r\n  <div />\r\n</template>\r\n\r\n<script setup>\r\nimport { onBeforeMount } from 'vue'\r\nimport { useRouter, useRoute } from 'vue-router'\r\nimport { useAuthStore } from '@/store/auth'\r\nimport LoginApi from '@/api/auth/LoginApi'\r\n\r\nconst router = useRouter();\r\nconst route = useRoute();\r\nconst authStore = useAuthStore();\r\n\r\n// 페이지 뜨기전 로딩\r\nonBeforeMount(async () => {\r\n  \r\n  // 쿼리 파라미터(error) 확인\r\n  // 기존 기본 로그인이 Auth 서버 시큐리티에 저장되어있어서 중복로그인으로 판정 재로그인 해야함\r\n  // 일반 로그인은 RestAPI로 아이디, 비번을 보내줘서 시큐리티에 넣어주기에 문제없음\r\n  const errorParam = route.query.error;\r\n  if (errorParam) {\r\n    // 만약 error=alreadyLoggedIn 이면 사용자에게 메시지\r\n    if (errorParam === 'alreadyLoggedIn') {\r\n      alert('중복 로그인이 되어서 문제가 발생하였습니다.\\n다시 재로그인 부탁드립니다.');\r\n    } else {\r\n      alert(`소셜 로그인 실패: ${errorParam}`);\r\n    }\r\n\r\n    // 피니아 로그인 정보 제거\r\n    authStore.logout()\r\n    // 로그인 페이지로 이동\r\n    router.push('/login')\r\n    return // 아래 로직은 더 이상 진행 X\r\n  }\r\n\r\n  try {\r\n    // (1) 소셜 로그인 성공 후, 서버에서 JWT 쿠키가 이미 발급되었을 것\r\n    // (2) /me 호출하여 사용자 정보 가져오기\r\n    const response = await LoginApi.getMe();\r\n\r\n    console.log(response.data);\r\n\r\n    authStore.login({\r\n      username: response.data.username,\r\n      userEmail: response.data.userEmail,\r\n      userProfileImgUrl: response.data.userProfileImgUrl,\r\n      roles: response.data.roles,\r\n    });\r\n    // (3) 메인 페이지로 이동\r\n    router.push('/');\r\n  } catch (e) {\r\n    console.error('소셜 로그인 콜백 오류:', e);\r\n    alert('소셜 로그인에 실패했습니다.');\r\n    // 로그인 페이지로 이동\r\n    router.push('/login');\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n","import script from \"./OAuthCallback.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./OAuthCallback.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","import OAuthCallback from '@/views/auth/OAuthCallback.vue';\r\n\r\n/**\r\n * 로그인 확인 필요 없을 시 : meta에 requiresAuth=false 추가\r\n * menu는 백엔드에서 이력관리에서 사용\r\n */\r\nconst authRoutes = [\r\n  {\r\n    // OAuth 로그인 후 콜백 페이지\r\n    path: 'oauth-call-back',\r\n    name: 'OAuthCallback',\r\n    component: OAuthCallback,\r\n    meta: { \r\n      requiresAuth: false,\r\n      menu: 'OAuth 로그인 콜백'\r\n    },\r\n  },\r\n];\r\n\r\nexport default authRoutes;\r\n","<!--\r\n  ※ DefaultTable 컴포넌트 예시 및 프롭스 설명 ※\r\n\r\n  예시 사용법:\r\n  <DefaultTable\r\n    :columns=\"[\r\n      { key: 'name', label: '이름', width: 120 },\r\n      { key: 'email', label: '이메일', width: 200 },\r\n      { key: 'department', label: '부서', width: 150 },\r\n      { key: 'team', label: '팀', width: 150 }\r\n    ]\"\r\n    :data=\"userData\"\r\n    :footerData=\"footerData\"\r\n    :showTable=\"true\"\r\n    :noColumns=\"false\"\r\n    :rowClick=\"handleRowClick\"\r\n    :openSidebar=\"openSidebar\"\r\n    :bodyFontSize=\"'0.875rem'\"\r\n    :calculateAmountPerPerson=\"(item) => item.amount\"\r\n  />\r\n\r\n  프롭스 설명:\r\n  - columns: 테이블의 컬럼 정보 배열.\r\n      각 컬럼 객체는 다음과 같은 속성을 가질 수 있음:\r\n        - key: 데이터의 키 값.\r\n        - label: 헤더에 표시할 텍스트.\r\n        - width: 픽셀 단위의 고정 폭 (선택). 지정하지 않을 경우 기본값 150px 사용.\r\n        - customClass: 특정 데이터에 적용할 클래스 지정 함수 (선택).\r\n        - customValue: 데이터 표시를 커스터마이징하기 위한 함수 (선택).\r\n\r\n  - data: 테이블에 표시할 데이터 배열. 각 객체는 columns의 key에 해당하는 값을 포함해야 함.\r\n  - footerData: 테이블 하단에 표시할 푸터 데이터 배열 (옵션).\r\n  - openSidebar: 행 클릭 시 사이드바를 열기 위한 함수 (옵션).\r\n  - showTable: 테이블을 표시할지 여부 (true이면 표시).\r\n  - rowClick: 테이블 행 클릭 시 실행할 콜백 함수 (옵션).\r\n  - noColumns: 컬럼 헤더 표시 여부 (false이면 헤더를 표시).\r\n  - bodyFontSize: 테이블 본문 폰트 사이즈 (CSS 단위, 기본값 '0.875rem').\r\n  - calculateAmountPerPerson: 데이터 항목별 인원당 금액 계산 함수 (옵션, 기본값은 item.amount).\r\n-->\r\n<template>\r\n  <div class=\"table-container\">\r\n    <table v-if=\"showTable\" class=\"table\" :style=\"{ '--table-body-font-size': bodyFontSize }\">\r\n      <thead v-if=\"!noColumns\">\r\n        <tr>\r\n          <th v-for=\"column in columns\" :key=\"column.key\">\r\n            {{ column.label }}\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr\r\n          v-for=\"(item, rowIndex) in data\"\r\n          :key=\"rowIndex\"\r\n          @click=\"handleRowClick(item)\"\r\n        >\r\n          <td\r\n            v-for=\"column in columns\"\r\n            :key=\"column.key\"\r\n            :class=\"[ column.customClass ? column.customClass(item[column.key]) : '', 'ellipsis' ]\"\r\n            :style=\"columnStyles(column)\"\r\n          >\r\n            {{ column.customValue ? column.customValue(item) : item[column.key] }}\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n      <tfoot>\r\n        <tr>\r\n          <td v-for=\"(footerItem, index) in footerData\" :key=\"index\">\r\n            {{ footerItem }}\r\n          </td>\r\n        </tr>\r\n      </tfoot>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps } from 'vue';\r\n\r\nconst props = defineProps({\r\n  // 테이블의 컬럼 정보 배열\r\n  columns: {\r\n    type: Array,\r\n    required: false\r\n  },\r\n  // 테이블에 표시할 데이터 배열.\r\n  // 각 객체는 컬럼 key에 대응하는 값을 포함함.\r\n  data: {\r\n    type: Array,\r\n    required: true\r\n  },\r\n  // 테이블 하단 표시 푸터 데이터\r\n  footerData: {\r\n    type: Array,\r\n    required: false,\r\n    default: () => []\r\n  },\r\n  // 행 클릭 시 사이드바를 열기 위한 함수 (옵션)\r\n  openSidebar: {\r\n    type: Function,\r\n    required: false\r\n  },\r\n  // 테이블을 표시할지 여부를 결정하는 값.\r\n  // true면 테이블을 표시함.\r\n  showTable: {\r\n    type: Boolean,\r\n    required: false,\r\n    default: true\r\n  },\r\n  // 테이블 행 클릭 시 실행할 콜백 함수 (옵션)\r\n  rowClick: {\r\n    type: Function,\r\n    required: false,\r\n    default: null\r\n  },\r\n  // 컬럼 헤더 표시 여부.\r\n  // false이면 컬럼 헤더를 표시함.\r\n  noColumns: {\r\n    type: Boolean,\r\n    required: false,\r\n    default: false\r\n  },\r\n  // 바디 폰트 사이즈\r\n  bodyFontSize: {\r\n    type: String,\r\n    required: false,\r\n    default: '0.875rem'\r\n  },\r\n  // 데이터 항목별 인원당 금액을 계산하는 함수 (옵션)\r\n  calculateAmountPerPerson: {\r\n    type: Function,\r\n    required: false,\r\n    default: (item) => item.amount\r\n  },\r\n});\r\n\r\nconst columnStyles = (column) => {\r\n  const style = {};\r\n  // 컬럼의 width가 지정되어 있으면 해당 폭을 사용하고, 없으면 기본값 150px 사용\r\n  const fixedWidth = column.width || 150;\r\n  style.width = fixedWidth + 'px';\r\n  style.minWidth = fixedWidth + 'px';\r\n  style.maxWidth = fixedWidth + 'px';\r\n  \r\n  return style;\r\n};\r\n\r\nconst handleRowClick = (item) => {\r\n  if (props.openSidebar) {\r\n    props.openSidebar(item);\r\n  }\r\n  if (props.rowClick) {\r\n    props.rowClick(item);\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.table-container {\r\n  width: 100%;\r\n  overflow-x: auto;\r\n}\r\n\r\n.table {\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n}\r\n\r\n/* th, td 기본 패딩 및 수평 경계선 */\r\n.table th,\r\n.table td {\r\n  padding: 8px;\r\n  /* border-top: 1px solid #ccc; */\r\n  /* border-bottom: 1px solid #ccc; */\r\n}\r\n\r\n/* 첫 번째 셀에는 왼쪽 경계선 제거, 나머지 셀에는 왼쪽 경계선 (얇은 회색) 적용 */\r\n.table th:not(:first-child),\r\n.table td:not(:first-child) {\r\n  border-left: 1px solid #e0e0e0;\r\n}\r\n\r\n/* th는 상하 경계선을 굵게 처리 (2px solid) */\r\n.table th {\r\n  border-top: 1px solid #a5a5a5;\r\n  border-bottom: 1px solid #a5a5a5;\r\n}\r\n\r\n/* 항상 ellipsis 적용 (텍스트가 넘치면 ... 표시) */\r\n.ellipsis {\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n/* 테이블 본문 폰트 사이즈 */\r\ntbody {\r\n  font-size: var(--table-body-font-size, 1rem);\r\n}\r\n\r\n/* 기본 텍스트 색상 (예시) */\r\n.table-container table tbody td {\r\n  color: rgb(27, 27, 27) !important;\r\n}\r\n\r\n/* 여러가지 커스텀 텍스트 색상 예시 */\r\n.text-red {\r\n  color: red;\r\n  font-weight: bold;\r\n}\r\n.text-black {\r\n  color: black;\r\n}\r\n.text-blue {\r\n  color: blue;\r\n}\r\n.text-green {\r\n  color: green;\r\n}\r\n\r\n/* 행 Hover 시 배경색 */\r\ntbody tr:hover td {\r\n  background-color: #e7f1ff !important;\r\n}\r\n\r\n@media (max-width: 1200px) {\r\n  .table {\r\n    font-size: 0.75rem !important;\r\n  }\r\n  .table-container table tbody td {\r\n    font-size: 0.75rem;\r\n  }\r\n  .table th,\r\n  .table td {\r\n    padding: 6px;\r\n  }\r\n}\r\n\r\n@media (max-width: 700px) {\r\n  .table {\r\n    font-size: 0.5rem !important;\r\n  }\r\n  .table-container table tbody td {\r\n    font-size: 0.5rem;\r\n  }\r\n  .table th,\r\n  .table td {\r\n    padding: 5px;\r\n  }\r\n}\r\n</style>\r\n","import script from \"./DefaultTable.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DefaultTable.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DefaultTable.vue?vue&type=style&index=0&id=d87a6978&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-d87a6978\"]])\n\nexport default __exports__","<template>\n  <div>\n    <!-- 메인 콘텐츠 영역 -->\n    <div class=\"content\">\n      <h2 class=\"content-title\">영수증 년도별 요약</h2>\n      <p class=\"content-sub-title\">년도별 영수증 현황 요약 페이지</p>\n\n      <div class=\"d-flex justify-content-between align-items-center mb-3\">\n        <div class=\"d-flex align-items-center\">\n          <select class=\"form-control w-auto\" v-model=\"selectedYear\" @change=\"fetchData\">\n            <option>2024</option>\n            <option>2023</option>\n            <option>2022</option>\n          </select>\n          <label class=\"me-2\">&nbsp; 년도</label>\n        </div>\n      </div>\n\n      <!-- DefaultTable 컴포넌트 사용 -->\n      <DefaultTable\n        :columns=\"columns\"\n        :data=\"data\"\n        :footerData=\"footerData\"\n        :showTable=\"!isMobile\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue';\nimport DefaultTable from '@/components/common/table/DefaultTable.vue';  // 테이블 컴포넌트 import\n\n// 상태 정의\nconst selectedYear = ref('2024');\nconst data = ref([]);\nconst totalRequested = ref(0);\nconst totalApproved = ref(0);\nconst totalRejected = ref(0);\nconst totalPending = ref(0);\nconst isMobile = ref(false);  // 모바일 여부에 따른 테이블 렌더링\n\n// 테이블의 컬럼 정의\nconst columns = ref([\n  { key: 'month', label: '월', width: 50 },\n  { key: 'requested', label: '총', width: 100 },\n  { key: 'approved', label: '승인', width: 100 },\n  { key: 'rejected', label: '반려', width: 100 },\n  { key: 'pending', label: '대기', width: 100 }\n]);\n\n// 더미 데이터\nconst dummyData = [\n  { month: '1월', requested: 1000000, approved: 800000, rejected: 100000, pending: 100000 },\n  { month: '2월', requested: 1200000, approved: 900000, rejected: 200000, pending: 100000  },\n  { month: '3월', requested: 800000, approved: 500000, rejected: 100000, pending: 200000  },\n  { month: '4월', requested: 1500000, approved: 1300000, rejected: 100000, pending: 100000   },\n  { month: '5월', requested: 1200000, approved: 1100000, rejected: 100000, pending: 200000   },\n  // 추가 데이터...\n];\n\n// 데이터 가져오기 함수\nconst fetchData = () => {\n  // 더미 데이터로 시뮬레이션\n  data.value = dummyData.filter(() => {\n    // 모든 연도를 표시하므로 필터링 필요 없음\n    return true;\n  });\n\n  // 총 합계 계산\n  totalRequested.value = data.value.reduce((sum, item) => sum + item.requested, 0);\n  totalApproved.value = data.value.reduce((sum, item) => sum + item.approved, 0);\n  totalRejected.value = data.value.reduce((sum, item) => sum + item.rejected, 0);\n  totalPending.value = data.value.reduce((sum, item) => sum + item.pending, 0);\n\n  // 푸터 데이터 계산\n  footerData.value = [\n    '총 합계',\n    totalRequested.value.toLocaleString() + '원',\n    totalApproved.value.toLocaleString() + '원',\n    totalRejected.value.toLocaleString() + '원',\n    totalPending.value.toLocaleString() + '원'\n  ];\n};\n\n// 푸터 데이터 (빈 배열로 초기화)\nconst footerData = ref([]);\n\n// 컴포넌트가 마운트되면 데이터 가져오기\nonMounted(fetchData);\n</script>\n\n<style scoped>\n.content {\n  margin-bottom: 50px;\n}\n</style>\n","import script from \"./AnnualReceiptSummary.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AnnualReceiptSummary.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AnnualReceiptSummary.vue?vue&type=style&index=0&id=c35ca450&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c35ca450\"]])\n\nexport default __exports__","<template>\r\n  <div :class=\"alignmentClass\">\r\n    <button\r\n      :type=\"type\"\r\n      :class=\"['btn', buttonClass, customClass]\"\r\n      @click=\"handleClick\"\r\n    >\r\n      <slot />\r\n    </button>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps, defineEmits, computed } from 'vue';\r\n\r\nconst props = defineProps({\r\n  type: {\r\n    type: String,\r\n    default: 'button', // 기본값은 button\r\n    validator: (value) => ['button', 'submit', 'reset'].includes(value),\r\n  },\r\n  size: {\r\n    type: String,\r\n    default: 'medium',\r\n    validator: (value) => ['xsmall', 'small', 'medium', 'large'].includes(value),\r\n  },\r\n  customClass: {\r\n    type: String,\r\n    default: '',\r\n  },\r\n  align: {\r\n    type: String,\r\n    default: 'center',\r\n    validator: (value) => ['left', 'center', 'right'].includes(value),\r\n  },\r\n  color: {\r\n    type: String,\r\n    default: 'default', // 기본 색상\r\n    validator: (value) => ['default', 'blue', 'red', 'green', 'yellow', 'gray'].includes(value),\r\n  },\r\n});\r\n\r\nconst emits = defineEmits(['click']);\r\n\r\nconst handleClick = (event) => {\r\n  emits('click', event);\r\n};\r\n\r\nconst buttonClass = computed(() => {\r\n  let sizeClass = '';\r\n  switch (props.size) {\r\n    case 'xsmall':\r\n      sizeClass = 'btn-xs'; \r\n      break;\r\n    case 'small':\r\n      sizeClass = 'btn-sm';\r\n      break;\r\n    case 'large':\r\n      sizeClass = 'btn-lg';\r\n      break;\r\n    case 'medium':\r\n    default:\r\n      sizeClass = '';\r\n      break;\r\n  }\r\n  const colorClass = `btn-${props.color}`;\r\n  return `${sizeClass} ${colorClass}`;\r\n});\r\n\r\nconst alignmentClass = computed(() => {\r\n  switch (props.align) {\r\n    case 'left':\r\n      return 'text-start';\r\n    case 'right':\r\n      return 'text-end';\r\n    default:\r\n      return 'text-center';\r\n  }\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.btn {\r\n  --bs-btn-color: #fff;\r\n  --bs-btn-bg: #375a7f; /* 기본 색상 */\r\n  --bs-btn-border-color: #375a7f;\r\n  --bs-btn-hover-color: #fff;\r\n  --bs-btn-hover-bg: #5a7694;\r\n  --bs-btn-hover-border-color: #5a7694;\r\n  --bs-btn-focus-shadow-rgb: 60, 153, 110;\r\n  --bs-btn-active-color: #fff;\r\n  --bs-btn-active-bg: #5a7694;\r\n  --bs-btn-active-border-color: #5a7694;\r\n  --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);\r\n  --bs-btn-disabled-color: #fff;\r\n  --bs-btn-disabled-bg: #5a7694;\r\n  --bs-btn-disabled-border-color: #5a7694;\r\n  /* margin-bottom: 16px; */\r\n}\r\n\r\n/* 색상별 커스텀 */\r\n.btn-default {\r\n  --bs-btn-bg: #375a7f;\r\n  --bs-btn-border-color: #375a7f;\r\n  --bs-btn-hover-bg: #5a7694;\r\n  --bs-btn-hover-border-color: #5a7694;\r\n}\r\n\r\n.btn-blue {\r\n  --bs-btn-bg: #007bff;\r\n  --bs-btn-border-color: #007bff;\r\n  --bs-btn-hover-bg: #0056b3;\r\n  --bs-btn-hover-border-color: #0056b3;\r\n}\r\n\r\n.btn-red {\r\n  --bs-btn-bg: #dc3545;\r\n  --bs-btn-border-color: #dc3545;\r\n  --bs-btn-hover-bg: #bd2130;\r\n  --bs-btn-hover-border-color: #bd2130;\r\n}\r\n\r\n.btn-green {\r\n  --bs-btn-bg: #28a745;\r\n  --bs-btn-border-color: #28a745;\r\n  --bs-btn-hover-bg: #218838;\r\n  --bs-btn-hover-border-color: #218838;\r\n}\r\n\r\n.btn-yellow {\r\n  --bs-btn-bg: #ffc107;\r\n  --bs-btn-border-color: #ffc107;\r\n  --bs-btn-hover-bg: #e0a800;\r\n  --bs-btn-hover-border-color: #e0a800;\r\n}\r\n\r\n.btn-gray {\r\n  --bs-btn-bg: #7c7c7c;\r\n  --bs-btn-border-color: #7c7c7c;\r\n  --bs-btn-hover-bg: #7c7c7c;\r\n  --bs-btn-hover-border-color: #7c7c7c;\r\n}\r\n\r\n.btn-xs {\r\n  padding: 0.2rem 0.45rem;\r\n  font-size: 0.7rem;\r\n  line-height: 1.2;\r\n  height: 2rem;\r\n}\r\n\r\n.btn-sm {\r\n  padding: 0.3rem 0.6rem;\r\n  font-size: 0.8rem;\r\n}\r\n\r\n.btn-lg {\r\n  padding: 0.4rem 0.95rem;\r\n  font-size: 1rem;\r\n}\r\n\r\n.text-start {\r\n  text-align: left !important;\r\n}\r\n\r\n.text-end {\r\n  text-align: right !important;\r\n}\r\n\r\n.text-center {\r\n  text-align: center !important;\r\n}\r\n\r\n@media (max-width: 1200px) {\r\n  .btn {\r\n    padding: 0.3rem 0.6rem !important;\r\n    font-size: 0.75rem !important;\r\n  /* margin-bottom: 7px; */\r\n  }\r\n\r\n  .btn-xs {\r\n    padding: 0.15rem 0.3rem !important;\r\n    font-size: 0.6rem !important;\r\n    height: 2rem !important;\r\n  }\r\n\r\n  .btn-sm {\r\n    padding: 0.2rem 0.4rem !important;\r\n    font-size: 0.6rem !important;\r\n  }\r\n\r\n  .btn-lg {\r\n    padding: 0.4rem 0.7rem !important;\r\n    font-size: 0.8rem !important;\r\n  }\r\n}\r\n\r\n</style>\r\n","import script from \"./DefaultButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DefaultButton.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DefaultButton.vue?vue&type=style&index=0&id=18f7ccd4&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-18f7ccd4\"]])\n\nexport default __exports__","<template>\r\n  <nav class=\"d-flex justify-content-center\">\r\n    <ul class=\"pagination\">\r\n      <!-- 이전 버튼 -->\r\n      <li \r\n        class=\"page-item\" \r\n        :class=\"{ disabled: currentPage === 1 }\"\r\n        @click.prevent=\"goToPage(currentPage - 1)\"\r\n      >\r\n        <a class=\"page-link\" href=\"#\"><!-- &lt; -->이전</a>\r\n      </li>\r\n\r\n      <!-- 페이지 번호들 (예: 1~totalPages)-->\r\n      <!-- 일반적으로는 1~N 전체를 출력하거나, 또는 5개씩 잘라서 보여주는 로직을 추가할 수도 있습니다. -->\r\n      <li \r\n        v-for=\"page in pageRange\" \r\n        :key=\"page\" \r\n        class=\"page-item\" \r\n        :class=\"{ active: currentPage === page }\"\r\n        @click.prevent=\"goToPage(page)\"\r\n      >\r\n        <a class=\"page-link\" href=\"#\">{{ page }}</a>\r\n      </li>\r\n\r\n      <!-- 다음 버튼 -->\r\n      <li\r\n        class=\"page-item\"\r\n        :class=\"{ disabled: currentPage === totalPages }\"\r\n        @click.prevent=\"goToPage(currentPage + 1)\"\r\n      >\r\n        <a class=\"page-link\" href=\"#\"><!-- &gt; -->다음</a>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed } from 'vue';\r\n\r\n/**\r\n * props 설명:\r\n * 1) currentPage: 현재 페이지\r\n * 2) totalPages: 전체 페이지 수\r\n * 3) visiblePageCount: 한 번에 보여줄 페이지 번호 수 (선택 사항)\r\n */\r\nconst props = defineProps({\r\n  currentPage: {\r\n    type: Number,\r\n    default: 1\r\n  },\r\n  totalPages: {\r\n    type: Number,\r\n    default: 1\r\n  },\r\n  // 한 화면에서 보여줄 페이지 버튼 수(선택적으로 사용)\r\n  visiblePageCount: {\r\n    type: Number,\r\n    default: 5 \r\n  }\r\n});\r\n\r\n// 부모에게 이벤트로 페이지 변경을 알려주기 위한 함수\r\nconst emit = defineEmits(['pageChange']);\r\n\r\n/**\r\n * goToPage(page): 해당 페이지로 이동을 요청\r\n * - 페이지 번호가 유효한 범위(1 ~ totalPages)인지 체크 후 \r\n *   `pageChange` 이벤트를 emit하여 부모에게 알린다.\r\n */\r\nfunction goToPage(page) {\r\n  if (page < 1 || page > props.totalPages) return;\r\n  emit('pageChange', page);\r\n}\r\n\r\n/**\r\n * pageRange: 실제로 UI에 표시될 페이지 번호 범위 계산\r\n * 예) visiblePageCount=5 라면, 현재 페이지를 중심으로 앞뒤로 몇 개 보여줄 것인지 계산\r\n */\r\nconst pageRange = computed(() => {\r\n  const half = Math.floor(props.visiblePageCount / 2);\r\n  let start = props.currentPage - half;\r\n  let end = props.currentPage + half;\r\n\r\n  // visiblePageCount가 짝수일 경우 보정\r\n  if (props.visiblePageCount % 2 === 0) {\r\n    end -= 1;\r\n  }\r\n\r\n  // 범위 제한\r\n  if (start < 1) {\r\n    start = 1;\r\n    end = props.visiblePageCount;\r\n  }\r\n  if (end > props.totalPages) {\r\n    end = props.totalPages;\r\n    start = Math.max(1, end - props.visiblePageCount + 1);\r\n  }\r\n\r\n  const range = [];\r\n  for (let i = start; i <= end; i++) {\r\n    range.push(i);\r\n  }\r\n  return range;\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.page-item.disabled .page-link {\r\n  cursor: not-allowed;\r\n  opacity: 0.6;\r\n}\r\n</style>\r\n","import script from \"./DefaultPagination.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DefaultPagination.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DefaultPagination.vue?vue&type=style&index=0&id=2cc7454f&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2cc7454f\"]])\n\nexport default __exports__","<template>\n  <div class=\"default-textfield\">\n    <!--\n      :type, :id, :name, :placeholder\n        → 부모 컴포넌트에서 전달된 값을 그대로 바인딩하여 input의 기본 속성을 설정\n\n      v-model=\"internalValue\"\n        → 양방향 데이터 바인딩으로, 사용자가 입력한 값이 internalValue에 저장되며, 부모의 modelValue와 동기화\n\n      v-bind=\"type === 'radio' ? { value: value } : {}\"\n        → input의 타입이 \"radio\"일 경우에만 value prop을 추가하여, 라디오 버튼의 값을 지정\n\n      :class=\"...\"\n        → input 타입이 \"radio\"가 아닐 때는 'form-control', 사이즈에 따른 클래스(sizeClass), \n          그리고 유효성 검사에 따른 'is-invalid' 클래스를 적용\n        → 타입이 \"radio\"이면 빈 문자열을 적용해 기본 브라우저 스타일(라디오 버튼 스타일)을 유지\n\n      @blur, @change\n        → blur 이벤트에서 touched를 true로 설정하고, change 이벤트는 부모로 emit하여 외부에서 이벤트를 처리할 수 있도록 함\n\n      :disabled, :required\n        → 각각 비활성화(disabled) 및 필수 입력(required) 여부를 부모에서 제어할 수 있도록 바인딩\n    -->\n    <input\n      :type=\"type\"\n      :id=\"id\"\n      :name=\"name\"\n      :placeholder=\"placeholder\"\n      v-model=\"internalValue\"\n      v-bind=\"type === 'radio' ? { value: value } : {}\"\n      :class=\"type !== 'radio' ? ['form-control', sizeClass, { 'is-invalid': touched && !isValid }] : ''\"\n      @blur=\"touched = true\"\n      @change=\"$emit('change', $event)\"\n      :disabled=\"disabled\"\n      :required=\"required\"\n    />\n    <!-- 에러 메시지 영역: reserveErrorSpace 프롭에 따라 공간 확보 여부 결정 -->\n    <template v-if=\"reserveErrorSpace\">\n      <!-- 에러 메시지 영역을 항상 렌더링하여 공간을 확보 -->\n      <div class=\"error-message reserved\">\n        <span v-if=\"touched && !isValid\">{{ errorMessage }}</span>\n      </div>\n    </template>\n    <template v-else>\n      <!-- 에러 메시지가 있을 때만 렌더링 -->\n      <div v-if=\"touched && !isValid\" class=\"error-message\">\n        {{ errorMessage }}\n      </div>\n    </template>\n  </div>\n</template>\n\n<script setup>\nimport { computed, defineProps, defineEmits, ref } from 'vue';\n\nconst props = defineProps({\n  // v-model로 사용할 값\n  // 문자열이나 Date 타입을 받을 수 있으며, 기본값은 빈 문자열\n  modelValue: {\n    type: [String, Date],\n    default: ''\n  },\n  // input 요소의 타입을 지정\n  // 예를 들어, \"text\", \"date\", \"month\", \"radio\" 등 다양한 타입을 사용할 수 있음\n  // 기본값은 \"text\"\n  type: {\n    type: String,\n    default: 'text'\n  },\n  // input 요소의 id를 지정\n  // 주로 label의 for 속성과 연계되어 접근성과 DOM 식별에 사용\n  id: {\n    type: String,\n    default: ''\n  },\n  // input 요소의 placeholder(자리 표시자) 텍스트\n  // 사용자가 아무런 입력을 하지 않았을 때 안내 문구로 표시됨됨\n  placeholder: {\n    type: String,\n    default: ''\n  },\n  // input 요소의 넓이를 제어하는 프롭\n  // 'small', 'medium', 'large', 'full' 중 하나의 값을 가지며,\n  // 각각 미리 정의된 CSS 클래스(예: small-input, medium-input 등)를 적용\n  size: {\n    type: String,\n    default: 'medium',\n    validator: value => ['xsamll', 'small', 'medium', 'large', 'full'].includes(value)\n  },\n  /**\n   * validationType 프롭:\n   * 입력값의 검증 유형을 지정\n   * 사용 가능한 값은 다음과 같음음\n   * - ''         : 검증 없음\n   * - 'english'  : 영어만 입력 가능\n   * - 'number'   : 숫자만 입력 가능\n   * - 'korean'   : 한글만 입력 가능\n   * - 'email'    : 이메일 형식 검증 (예: user@example.com)\n   */\n  validationType: {\n    type: String,\n    default: '',\n    validator: value => ['', 'english', 'number', 'korean', 'email'].includes(value)\n  },\n  // validationType에 따른 검증 실패 시 표시할 에러 메시지\n  // 기본 메시지는 \"입력 형식이 올바르지 않습니다.\"로 설정\n  errorMessage: {\n    type: String,\n    default: '입력 형식이 올바르지 않습니다.'\n  },\n  /**\n   * reserveErrorSpace 프롭:\n   * true이면, 에러 메시지 영역이 항상 렌더링되어 빈 공간이라도 차지\n   * false이면, 에러가 실제로 있을 때만 에러 메시지 영역이 렌더링됨\n   * 이를 통해 레이아웃이 변경되지 않도록 미리 공간을 확보할 수 있음\n   */\n  reserveErrorSpace: {\n    type: Boolean,\n    default: false\n  },\n  // disabled 프롭:\n  // true일 경우, 해당 입력 필드를 비활성화하여 사용자가 값을 변경할 수 없게 함\n  disabled: {\n    type: Boolean,\n    default: false\n  },\n  // required 프롭:\n  // true일 경우, HTML5의 required 속성이 적용되어 필수 입력 필드로 동작\n  required: {\n    type: Boolean,\n    default: false\n  },\n  // name 프롭:\n  // 주로 라디오 버튼과 같이 여러 요소가 그룹으로 묶여야 할 때 사용\n  // 같은 그룹에 속하는 라디오 버튼들은 동일한 name 값을 가져야 함\n  name: {\n    type: String,\n    default: ''\n  },\n  // value 프롭:\n  // 라디오 버튼 등에서 사용되는 값으로, 해당 요소의 고유 값을 나타냄\n  // [String, Number, Boolean] 타입을 지원\n  value: {\n    type: [String, Number, Boolean],\n    required: false\n  }\n});\n\n\nconst emits = defineEmits(['update:modelValue', 'change']);\n\n// v-model 양방향 바인딩을 위한 computed\nconst internalValue = computed({\n  get() {\n    return props.modelValue;\n  },\n  set(newValue) {\n    emits('update:modelValue', newValue);\n  }\n});\n\n// size 프롭에 따른 클래스 계산\nconst sizeClass = computed(() => {\n  switch (props.size) {\n    case 'xsmall':\n      return 'xsmall-input';\n    case 'small':\n      return 'small-input';\n    case 'large':\n      return 'large-input';\n    case 'full':\n      return 'full-input';\n    case 'medium':\n    default:\n      return 'medium-input';\n  }\n});\n\n// validationType에 따른 정규식 패턴\nconst pattern = computed(() => {\n  switch (props.validationType) {\n    case 'english':\n      return /^[A-Za-z]*$/;\n    case 'number':\n      return /^[0-9]*$/;\n    case 'korean':\n      return /^[ㄱ-ㅎ가-힣]*$/;\n    case 'email':\n      return /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/;\n    default:\n      return null;\n  }\n});\n\n// 입력값의 유효성 여부 판단 (검증 대상이 없으면 true)\nconst isValid = computed(() => {\n  if (!pattern.value) return true;\n  return pattern.value.test(internalValue.value);\n});\n\n// 필드 터치 여부 (blur 이벤트에서 true로 변경)\nconst touched = ref(false);\n</script>\n\n<style scoped>\n.xsmall-input {\n  width: 130px;\n  height: 2rem;\n  font-size: 0.8rem; \n}\n\n.small-input {\n  width: 160px;\n  font-size: 0.8rem;\n}\n\n.medium-input {\n  width: 300px;\n}\n\n.large-input {\n  width: 500px;\n}\n\n.full-input {\n  width: 100%;\n}\n\n.xsmall-input::placeholder {\n  font-size: 0.85rem;\n}\n\n.small-input::placeholder {\n  font-size: 0.9rem;\n}\n\n.medium-input::placeholder {\n  font-size: 1rem;\n}\n\n.large-input::placeholder {\n  font-size: 1.05rem;\n}\n\n.full-input::placeholder {\n  font-size: 1rem;\n}\n\n/* 유효하지 않은 경우 빨간 테두리 적용 */\n.is-invalid {\n  border-color: red;\n}\n\n/* 에러 메시지 영역: reserveErrorSpace가 true일 때 적용 */\n.error-message.reserved {\n  min-height: 1.2rem; /* 항상 일정한 공간 확보 (원하는 높이로 조정 가능) */\n  margin-top: 5px;\n  color: red;\n  font-size: 0.85rem;\n}\n\n/* reserveErrorSpace가 false인 경우 기본 error-message 스타일 */\n.error-message {\n  margin-top: 5px;\n  color: red;\n  font-size: 0.85rem;\n}\n\n@media (max-width: 1200px) {\n\n  .default-textfield input[type=\"month\"],\n  .default-textfield input[type=\"date\"] {\n    min-width: 110px;\n  }\n\n  /* 사이즈에 따른 input 넓이 설정 */\n  .xsmall-input { \n    width: 80px;\n  }\n\n  .small-input {\n    width: 130px;\n  }\n\n  .medium-input {\n    width: 220px;\n  }\n\n  .large-input {\n    width: 280px;\n  }\n\n  .xsmall-input::placeholder {\n    font-size: 0.75rem;\n  }\n\n  .small-input::placeholder {\n    font-size: 0.8rem;\n  }\n\n  .medium-input::placeholder {\n    font-size: 0.9rem;\n  }\n\n  .large-input::placeholder {\n    font-size: 0.95rem;\n  }\n\n  .full-input::placeholder {\n    font-size: 1rem;\n  }\n}\n\n@media (max-width: 500px) {\n\n  .default-textfield input[type=\"month\"],\n  .default-textfield input[type=\"date\"] {\n    min-width: 90px;\n  }\n\n  /* 사이즈에 따른 input 넓이 설정 */\n  .xsmall-input {\n    width: 60px;\n  }\n\n  .small-input {\n    width: 98px;\n  }\n\n  .medium-input {\n    width: 150px;\n  }\n\n  .large-input {\n    width: 180px;\n  }\n\n  .default-textfield input[type=\"month\"] {\n    font-size: 0.6rem !important; /* 글자 크기 줄이기 */\n  }\n\n  .default-textfield input[type=\"date\"] {\n    font-size: 0.6rem !important; /* 글자 크기 줄이기 */\n  }\n\n  .xsmall-input::placeholder {\n    font-size: 0.55rem;\n  }\n\n  .small-input::placeholder {\n    font-size: 0.65rem;\n  }\n\n  .medium-input::placeholder {\n    font-size: 0.7rem;\n  }\n\n  .large-input::placeholder {\n    font-size: 0.75rem;\n  }\n\n  .full-input::placeholder {\n    font-size: 0.8rem;\n  }\n}\n</style>\n  ","import script from \"./DefaultTextfield.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DefaultTextfield.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DefaultTextfield.vue?vue&type=style&index=0&id=467883bd&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-467883bd\"]])\n\nexport default __exports__","<template>\n  <div>\n    <!-- 메인 콘텐츠 영역 -->\n    <div class=\"content\">\n      <h2 class=\"content-title\">영수증 신청내역 현황</h2>\n      <!-- 검색된 날짜 범위 표시 -->\n      <div class=\"content-sub-title\" v-if=\"data.length\">\n        <p>날짜: [{{ startDate }} ~ {{ endDate }}]</p>\n      </div>\n\n      <div class=\"search-controls\">\n        <!-- 시작, 종료일 그룹 -->\n        <div class=\"d-flex align-items-center end-date-group mt-2 start-end-date-group\">\n          <label for=\"startDate\" class=\"mr-2\">시작 :</label>\n          <DefaultTextfield\n            type=\"month\"\n            id=\"startDate\"\n            v-model=\"startDate\"\n            size=\"small\"\n          />\n          <label for=\"endDate\" class=\"mr-2\">종료 :</label>\n          <DefaultTextfield\n            type=\"month\"\n            id=\"endDate\"\n            v-model=\"endDate\"\n            size=\"small\"\n          />\n        </div>\n        <!-- 이름 검색 그룹 -->\n        <div class=\"d-flex align-items-center name-group mt-2\">\n          <label for=\"nameSearch\" class=\"mr-2\">이름 :</label>\n          <!-- 예시... \n          <DefaultTextfield\n            type=\"text\"\n            v-model=\"korNumInput\"\n            size=\"medium\"\n            validationType=\"korean|number\"\n            placeholder=\"한글과 숫자만 입력하세요\"\n            errorMessage=\"한글과 숫자만 입력 가능합니다.\"\n            :reserveErrorSpace=\"true\"\n          />\n          -->\n          <DefaultTextfield\n            type=\"text\"\n            id=\"nameSearch\"\n            v-model=\"nameSearch\"\n            size=\"small\"\n            placeholder=\"이름 입력\"\n          />\n          <DefaultButton @click=\"search\">\n            조회\n          </DefaultButton>\n        </div>\n      </div>\n\n      <!-- DefaultTable 컴포넌트 (큰 화면) -->\n      <DefaultTable\n        :columns=\"columns\"\n        :data=\"data\"\n        :showTable=\"viewMode\"\n      />\n\n      <!-- 카드 형식 보기 (작은 화면) -->\n      <div class=\"card\" v-for=\"(item, index) in data\" :key=\"index\">\n        <div class=\"card-header\">\n          <div class=\"d-flex justify-content-between align-items-center mb-2\">\n            <p class=\"card-title\">{{ item.name }}</p>\n            <p class=\"card-title\">{{ item.email }}</p>\n          </div>\n        </div>\n        <div class=\"card-body\">\n          <p class=\"card-text\">\n            <Strong>부서: </Strong>{{ item.department }}\n          </p>\n          <p class=\"card-text\">\n            <Strong>팀: </Strong>{{ item.team }}\n          </p>\n          <p class=\"card-text\">\n            <Strong>건수: </Strong>{{ item.count }}\n          </p>\n          <p class=\"card-text\">\n            <Strong>신청금액: </Strong>{{ item.requested.toLocaleString() }}원\n          </p>\n        </div>\n      </div>\n      \n      <!-- 페이지네이션 (공통 컴포넌트) -->\n      <DefaultPagination\n        :currentPage=\"currentPage\"\n        :totalPages=\"totalPages\"\n        :visiblePageCount=\"visiblePageCount\"\n        @pageChange=\"onPageChange\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue';\nimport DefaultTable from '@/components/common/table/DefaultTable.vue';\nimport DefaultButton from '@/components/common/button/DefaultButton.vue';\nimport DefaultPagination from '@/components/common/pagination/DefaultPagination.vue';\nimport DefaultTextfield from '@/components/common/textfield/DefaultTextfield.vue';\n\n// import axios from 'axios'; // 실제 백엔드 호출 시 사용\n\n// ================ 상태 정의 ================\nconst startDate = ref('');\nconst endDate = ref('');\nconst nameSearch = ref('');\n\n// 실제 서버에서 받아온 데이터\nconst data = ref([]);\n\n// 테이블 / 카드 전환\n// (true면 테이블, false면 카드)\nconst viewMode = ref(true);\n\n// 페이지네이션\nconst currentPage = ref(1);\nconst totalPages = ref(1);\nconst visiblePageCount = ref(5);  // 페이지네이션에서 보여줄 최대 페이지 버튼 수\n\n// 컬럼 정의\nconst columns = ref([\n  { key: 'name', label: '이름', width: 60 },\n  { key: 'department', label: '부서', width: 100 },\n  { key: 'team', label: '직책', width: 100 },\n  { key: 'email', label: '메일', width: 150 },\n  { key: 'count', label: '건수', width: 50 },\n  { key: 'requested', label: '신청금액', width: 100 },\n]);\n\n/**\n * 서버에서 데이터 가져오기\n * 실제로는 axios 등을 사용하여 파라미터(startDate, endDate, nameSearch, currentPage 등)를 전송 후,\n * 응답에서 data, totalPages 등을 받아 세팅하시면 됩니다.\n */\n// async function fetchDataFromServer(page = 1) {\nasync function fetchDataFromServer() {\n  try {\n    // const response = await axios.get('/api/searchReceipts', {\n    //   params: {\n    //     startDate: startDate.value,\n    //     endDate: endDate.value,\n    //     name: nameSearch.value,\n    //     page: page,\n    //   },\n    // });\n    // data.value = response.data.items;\n    // totalPages.value = response.data.totalPages;\n\n    // 여기서는 mockData로 예시 구현\n    const mockData = [\n      {\n        name: '홍길동',\n        department: 'SI사업본부',\n        team: '프레임워크',\n        email: 'hong@example.com',\n        count: 3,\n        requested: 1000000,\n      },\n      {\n        name: '김철수',\n        department: 'SI사업본부',\n        team: '프레임워크',\n        email: 'kim@example.com',\n        count: 5,\n        requested: 1200000,\n      },\n      {\n        name: '이영희',\n        department: 'SI사업본부',\n        team: '프레임워크',\n        email: 'lee@example.com',\n        count: 2,\n        requested: 800000,\n      },\n      // 추가 더미 데이터 ...\n    ];\n    \n    data.value = mockData;\n    totalPages.value = 2; // 예시로 총 2페이지 있다고 가정\n  } catch (error) {\n    console.error(error);\n  }\n}\n\n/**\n * 검색 버튼 클릭 시 실행\n * - 검색 파라미터를 포함하여 페이지 1번으로 재조회\n */\nfunction search() {\n  currentPage.value = 1;\n  fetchDataFromServer(currentPage.value);\n}\n\n/**\n * 페이지 변경 시 (DefaultPagination에서 방출)\n * - 새 페이지를 받아서 currentPage를 갱신\n * - 백엔드 재조회\n */\nfunction onPageChange(newPage) {\n  currentPage.value = newPage;\n  fetchDataFromServer(currentPage.value);\n}\n\n/**\n * 화면 크기에 따라 테이블 / 카드 전환\n */\nfunction updateViewMode() {\n  if (window.innerWidth <= 1200) {\n    viewMode.value = false; // 모바일 → 카드\n  } else {\n    viewMode.value = true;  // PC → 테이블\n  }\n}\n\nonMounted(() => {\n  // 컴포넌트 초기 로드시 첫 페이지 조회\n  fetchDataFromServer(currentPage.value);\n\n  // 화면 너비에 따라 viewMode 결정\n  updateViewMode();\n  window.addEventListener('resize', updateViewMode);\n});\n</script>\n\n<style scoped>\n#dataTable tbody tr:hover td {\n  background-color: #e7f1ff !important;\n}\n\n/* 상태별 색상 설정 */\n.status-complete {\n  color: blue; /* 완료 상태는 파란색 */\n}\n.status-in-progress {\n  color: red; /* 진행중 상태는 빨간색 */\n}\n.align-items-center {\n  margin-bottom: 0px !important;\n}\n.start-end-date-group label {\n  margin-left: 10px !important;\n}\n.bnt-search {\n  margin: 0 !important;\n}\n\n@media (min-width: 1201px) {\n  .search-controls {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: flex-end;\n    margin-bottom: 20px;\n  }\n  .search-controls > div {\n    margin-right: 1rem;\n  }\n  #nameSearch {\n    font-size: 1rem;\n  }\n  .card {\n    display: none; /* 카드 숨기기 */\n  }\n  .table {\n    display: table; /* 테이블 표시 */\n  }\n}\n\n@media (min-width: 1920px) {\n  .navbar-text {\n    font-size: 1.5rem; /* 더 큰 텍스트 크기 */\n  }\n}\n\n@media (max-width: 1200px) {\n  .btn-primary {\n    font-size: 0.75rem; /* 모바일 버튼 글자 크기 줄이기 */\n    padding: 0.3rem 0.6rem; /* 모바일 버튼 패딩 줄이기 */\n    margin-bottom: 10px;\n  }\n  .search-controls {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n  }\n  .search-controls > div {\n    width: 100%;\n    display: flex;\n    justify-content: flex-end;\n  }\n  /* 이름 그룹을 위쪽에 배치 */\n  /* ---------------------------------- */\n  .name-group {\n    order: -1;\n    margin: 0 !important;\n  }\n  .start-end-date-group {\n    order: 1;\n    margin-bottom: 10px !important;\n  }\n  /* ---------------------------------- */\n  .table {\n    display: none; /* 테이블 숨기기 */\n  }\n  .bnt-print {\n    margin-bottom: 40px;\n  }\n  .start-end-date-group input {\n    width: 110px !important;\n  }\n}\n</style>\n","import script from \"./ReceiptRequestOverview.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ReceiptRequestOverview.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ReceiptRequestOverview.vue?vue&type=style&index=0&id=e305c630&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e305c630\"]])\n\nexport default __exports__","<template>\n  <div>\n    <!-- 사이드바 -->\n    <div v-if=\"visible\" class=\"sidebar\">\n      <button class=\"close-btn\" @click=\"closeSidebar\">&times;</button>\n      <h5><strong>영수증 상세 정보</strong></h5>\n      <hr />\n      <p v-if=\"item.date\"><strong>발행일 : </strong> {{ item.date }}</p>\n      <p v-if=\"item.type\"><strong>구분 : </strong> {{ item.type }}</p>\n      <p v-if=\"item.reason\"><strong>사유 : </strong> {{ item.reason }}</p>\n      <p v-if=\"item.amount\"><strong>금액 : </strong> {{ item.amount }}</p>\n      <p v-if=\"item.amount && item.people.length > 0\"><strong>금액/인원수 : </strong> {{ calculateAmountPerPerson(item) }}</p>\n      <p v-if=\"item.receiptName\">\n        <strong>영수증 사진 : </strong>\n        <!-- <a @click.prevent=\"openPreviewModal\" style=\"cursor: pointer; color: blue;\">{{ item.receiptName }}</a> -->\n        <a @click.prevent=\"$emit('preview-image', item.receipt)\" style=\"cursor: pointer; color: blue;\">{{ item.receiptName }}</a>\n      </p>\n      <p v-if=\"item.status\" :class=\"getStatusClass(item.status)\"><strong class=\"status-text\">결제 상황 : </strong>{{ item.status }}</p>\n      <p v-if=\"item.rejectionReason\"><strong>반려 사유 : </strong> {{ item.rejectionReason }}</p>\n      <hr/>\n      <p v-if=\"item.people && item.people.length\"><strong>인원수 : </strong> {{ item.people.length }}</p>\n      <ul v-if=\"item.people && item.people.length\" class=\"people-list\">\n        <li class=\"people-list-item\" v-for=\"(person, index) in item.people\" :key=\"index\">{{ person.department }} | {{ person.team }} | {{ person.name }} {{ person.position }}</li>\n      </ul>\n    </div>\n\n    <!-- 이미지 미리보기 모달 -->\n    <div v-if=\"isPreviewVisible\" class=\"modal\" @click=\"closePreviewModalOnOutsideClick\">\n      <div class=\"modal-content\" @click.stop>\n        <img :src=\"item.receipt\" class=\"modal-image\" />\n        <span class=\"close\" @click=\"closePreviewModal\">&times;</span>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, defineProps, defineEmits } from 'vue';\n\ndefineProps({\n  item: Object,\n  visible: Boolean,\n});\n\nconst emit = defineEmits(['close', 'preview-image']);\n// const emit = defineEmits(['close']);\nconst isPreviewVisible = ref(false);\n\n// 금액/인원수 계산\nconst calculateAmountPerPerson = (item) => {\n  const amount = parseInt(item.amount.replace(/[^0-9]/g, ''), 10); // 금액에서 숫자만 추출\n  const peopleCount = item.people.length;\n  return peopleCount > 0 ? Math.floor(amount / peopleCount).toLocaleString() + ' 원' : 'N/A';\n};\n\nconst getStatusClass = (status) => {\n  if (status === '신청중') return 'status-pending';\n  if (status === '승인') return 'status-approved';\n  if (status === '반려') return 'status-rejected';\n  return '';\n};\n\nconst closeSidebar = () => {\n  emit('close');\n};\n\n// const openPreviewModal = () => {\n//   isPreviewVisible.value = true;\n// };\n\nconst closePreviewModal = () => {\n  isPreviewVisible.value = false;\n};\n\nconst closePreviewModalOnOutsideClick = (event) => {\n  // 클릭된 요소가 모달 외부일 때만 모달을 닫습니다.\n  if (event.target.classList.contains('modal')) {\n    isPreviewVisible.value = false;\n  }\n};\n</script>\n\n<style scoped>\n.sidebar {\n  position: fixed;\n  right: 0;\n  top: 61px; /* 위에서 61px 띄우기 */\n  bottom: 42px; /* 아래에서 42px 띄우기 */\n  width: 300px;\n  background-color: #f9f9f9;\n  border-left: 1px solid #ddd;\n  padding: 20px;\n  transition: all 0.3s ease;\n  box-shadow: -2px 0 5px rgba(0, 0, 0, 0.1);\n  z-index: 1000;\n  overflow-y: auto; /* 사이드바 전체 스크롤 가능 */\n}\n\n.close-btn {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  cursor: pointer;\n  background: none;\n  border: none;\n}\n\n.modal {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.7);\n  z-index: 2000;\n}\n\n.modal-content {\n  position: relative;\n  width: 80%;\n  max-width: 500px;\n  background-color: transparent; /* 테두리 제거 */\n  padding: 0;\n  text-align: center;\n}\n\n.modal-image {\n  width: 100%;\n  height: auto;\n}\n\n.close {\n  position: absolute;\n  top: -50px; /* 이미지 밖으로 X버튼 이동 */\n  right: -30px; /* 이미지 밖으로 X버튼 이동 */\n  font-size: 40px;\n  cursor: pointer;\n  background: none;\n  border: none;\n  color: white; /* 흰색으로 변경 */\n}\n\n/* 인원수 리스트에 대한 스타일 */\n.people-list {\n  font-size: 0.75rem;\n  max-height: 300px; /* 최대 높이를 설정 */\n  overflow-y: auto; /* 길어지면 스크롤 표시 */\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  background-color: #f9f9f9;\n}\n\n.people-list-item {\n  margin: 7px 0 7px 0;\n}\n\n.status-approved {\n  color: green;\n  font-weight: bold;\n}\n\n.status-pending {\n  color: blue;\n  font-weight: bold;\n}\n\n.status-rejected {\n  color: red;\n  font-weight: bold;\n}\n\n.status-text {\n  color: black;\n}\n\n</style>\n","import script from \"./ReceiptSidebar.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ReceiptSidebar.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ReceiptSidebar.vue?vue&type=style&index=0&id=2502eaba&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-2502eaba\"]])\n\nexport default __exports__","import { ref } from 'vue';\n\nconst isPreviewVisible = ref(false);\nconst previewImage = ref('');\nconst isZoomed = ref(false);\nconst zoomedPosition = ref({ x: 0, y: 0 });\nconst dragStart = ref({ x: 0, y: 0 });\nconst isDragging = ref(false);\nconst zoomOrigin = ref({ x: 0, y: 0 });\nlet animationFrameId = null;\nlet lastTapTime = 0;\n\nconst isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n\nconst openPreviewModal = (imageUrl) => {\n  previewImage.value = imageUrl;\n  isPreviewVisible.value = true;\n  isZoomed.value = false;\n  zoomedPosition.value = { x: 0, y: 0 };\n  zoomOrigin.value = { x: 0, y: 0 };\n};\n\nconst closePreviewModal = () => {\n  isPreviewVisible.value = false;\n  isZoomed.value = false;\n  zoomedPosition.value = { x: 0, y: 0 };\n  zoomOrigin.value = { x: 0, y: 0 };\n};\n\nconst toggleZoom = (event) => {\n  if (isDragging.value) return;\n\n  if (isTouchDevice && event.type === 'touchstart') {\n    const currentTime = new Date().getTime();\n    const timeDifference = currentTime - lastTapTime;\n\n    if (timeDifference < 300 && timeDifference > 0) {\n      handleZoom(event.touches[0].clientX, event.touches[0].clientY, event.target);\n    }\n\n    lastTapTime = currentTime;\n  } else if (!isTouchDevice && event.type === 'dblclick') {\n    handleZoom(event.clientX, event.clientY, event.target);\n  }\n};\n\nconst handleZoom = (clientX, clientY, target) => {\n  if (!isZoomed.value) {\n    isZoomed.value = true;\n    const rect = target.getBoundingClientRect();\n    zoomOrigin.value = {\n      x: clientX - rect.left,\n      y: clientY - rect.top,\n    };\n  } else {\n    isZoomed.value = false;\n    zoomedPosition.value = { x: 0, y: 0 };\n  }\n};\n\nconst startDrag = (event) => {\n  if (!isZoomed.value) return;\n  isDragging.value = true;\n  const clientX = event.touches ? event.touches[0].clientX : event.clientX;\n  const clientY = event.touches ? event.touches[0].clientY : event.clientY;\n  dragStart.value = { x: clientX, y: clientY };\n  window.addEventListener(event.type.includes('touch') ? 'touchmove' : 'mousemove', onDrag);\n  event.preventDefault();\n};\n\nconst onDrag = (event) => {\n  if (!isDragging.value || !isZoomed.value) return;\n\n  const clientX = event.touches ? event.touches[0].clientX : event.clientX;\n  const clientY = event.touches ? event.touches[0].clientY : event.clientY;\n  const deltaX = clientX - dragStart.value.x;\n  const deltaY = clientY - dragStart.value.y;\n\n  const image = document.querySelector('.preview-modal-image');\n  const container = document.querySelector('.preview-modal-content');\n  \n  if (image && container) {\n    const containerRect = container.getBoundingClientRect();\n    const imageRect = image.getBoundingClientRect();\n    \n    // Calculate the max drag limits\n    const maxX = Math.max((imageRect.width * 1.5 - containerRect.width) / 2, 0);\n    const maxY = Math.max((imageRect.height * 1.5 - containerRect.height) / 2, 0);\n\n    let newX = zoomedPosition.value.x + deltaX;\n    let newY = zoomedPosition.value.y + deltaY;\n\n    // Constrain the new position within the limits\n    newX = Math.max(Math.min(newX, maxX), -maxX);\n    newY = Math.max(Math.min(newY, maxY), -maxY);\n\n    if (!animationFrameId) {\n      animationFrameId = requestAnimationFrame(() => {\n        zoomedPosition.value = { x: newX, y: newY };\n        dragStart.value = { x: clientX, y: clientY };\n        animationFrameId = null;\n      });\n    }\n  }\n\n  event.preventDefault();\n};\n\nconst endDrag = (event) => {\n  if (!isZoomed.value) return;\n  isDragging.value = false;\n  window.removeEventListener(event.type.includes('touch') ? 'touchmove' : 'mousemove', onDrag);\n};\n\n// Export as a function to use in components\nexport function usePreviewModal() {\n  return {\n    isPreviewVisible,\n    previewImage,\n    isZoomed,\n    zoomedPosition,\n    zoomOrigin,\n    openPreviewModal,\n    closePreviewModal,\n    toggleZoom,\n    startDrag,\n    onDrag,\n    endDrag,\n  };\n}\n","<template>\r\n  <div>\r\n    <!-- 메인 콘텐츠 영역 -->\r\n    <div class=\"content\" :class=\"{ 'content-expanded': sidebarVisible && !isMobile }\">\r\n      <h2 class=\"content-title\">영수증 신청내역</h2>\r\n      <p class=\"content-sub-title\">월별 영수증 신청 내역 확인 페이지</p>\r\n\r\n      <div class=\"d-flex justify-content-end align-items-center mb-3\">\r\n        <label for=\"monthSearch\" class=\"mr-2\">월 선택 :</label>\r\n        <select class=\"form-control w-auto\" id=\"monthSearch\" v-model=\"selectedMonth\" @change=\"filterByMonth\">\r\n          <option value=\"01\">1월</option>\r\n          <option value=\"02\">2월</option>\r\n          <option value=\"03\">3월</option>\r\n          <option value=\"04\">4월</option>\r\n          <option value=\"05\">5월</option>\r\n          <option value=\"06\">6월</option>\r\n          <option value=\"07\">7월</option>\r\n          <option value=\"08\">8월</option>\r\n          <option value=\"09\">9월</option>\r\n          <option value=\"10\">10월</option>\r\n          <option value=\"11\">11월</option>\r\n          <option value=\"12\">12월</option>\r\n        </select>\r\n      </div>\r\n\r\n      <!-- 테이블 보기 (큰 화면에서만 보임) -->\r\n      <DefaultTable\r\n        :columns=\"columns\"\r\n        :data=\"data\"\r\n        :openSidebar=\"openSidebar\"\r\n        :showTable=\"!isMobile\"\r\n      />\r\n\r\n      <!-- 카드 레이아웃 (작은 화면에서만 보임) -->\r\n      <div class=\"card-layout\" v-if=\"isMobile\">\r\n        <div class=\"card\" v-for=\"(item, index) in data\" :key=\"index\">\r\n          <div class=\"card-header\">\r\n            <p class=\"card-title\">{{ item.date }}</p>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <p class=\"card-text\">\r\n              <strong>인원 : </strong>\r\n              <span @click=\"togglePeopleList(item)\" style=\"cursor: pointer;\">\r\n                {{ item.people.length }}명\r\n              </span>\r\n            </p>\r\n            <div v-if=\"showPeopleList(item)\">\r\n              <div class=\"people-list\">\r\n                <div class=\"people-list-header\">명단</div>\r\n                <p \r\n                  v-for=\"person in item.people\" \r\n                  :key=\"person.name\" \r\n                  class=\"people-list-item\"\r\n                >\r\n                  {{ person.name }} ({{ person.department }} - {{ person.team }})\r\n                </p>\r\n              </div>\r\n              <hr />\r\n            </div>\r\n            <p class=\"card-text\"><strong>구분/사유 : </strong> {{ item.type }} / {{ item.reason }}</p>\r\n            <p class=\"card-text\"><strong>금액 : </strong> {{ item.amount }}</p>\r\n            <p class=\"card-text\"><strong>금액/인원수 : </strong> {{ item.amountPerPerson }}</p>\r\n            <p>\r\n              <strong class=\"card-text\">영수증 사진 : </strong>\r\n              <a class=\"card-text\"\r\n                @click.prevent=\"openPreviewModal(item.receipt)\"\r\n                style=\"cursor: pointer; color: blue;\"\r\n              >\r\n                {{ item.receiptName }}\r\n              </a>\r\n            </p>\r\n            <p class=\"card-text\">\r\n              <strong>반려 사유: </strong> {{ item.rejectionReason || 'X' }}\r\n            </p>\r\n            <p class=\"card-text\">\r\n              <strong>결제 상황: </strong>\r\n              <span :class=\"getStatusClass(item.status)\">{{ item.status }}</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 페이지네이션 (공통 컴포넌트) -->\r\n      <DefaultPagination\r\n        :currentPage=\"currentPage\"\r\n        :totalPages=\"totalPages\"\r\n        :visiblePageCount=\"visiblePageCount\"\r\n        @pageChange=\"onPageChange\"\r\n      />\r\n    </div>\r\n\r\n    <!-- 사이드바 추가 -->\r\n    <div :class=\"['sidebar-wrapper', { 'sidebar-visible': sidebarVisible }]\">\r\n      <ReceiptSidebar \r\n        v-if=\"!isMobile\" \r\n        :item=\"selectedItem\" \r\n        :visible=\"sidebarVisible\" \r\n        @close=\"closeSidebar\"\r\n        @preview-image=\"openPreviewModal\"\r\n      />\r\n    </div>\r\n\r\n    <!-- 이미지 미리보기 모달 -->\r\n    <div v-if=\"isPreviewVisible\" class=\"modal preview-modal\" @click=\"closePreviewModalOnOutsideClick\">\r\n      <div\r\n        class=\"preview-modal-content\"\r\n        @mousedown=\"startDrag\"\r\n        @mousemove=\"onDrag\"\r\n        @mouseup=\"endDrag\"\r\n        @mouseleave=\"endDrag\"\r\n        @touchstart=\"startDrag\"\r\n        @touchmove=\"onDrag\"\r\n        @touchend=\"endDrag\"\r\n      >\r\n        <img\r\n          :src=\"previewImage\"\r\n          :class=\"{ zoomed: isZoomed }\"\r\n          class=\"preview-modal-image\"\r\n          :style=\"{\r\n            transform: isZoomed\r\n              ? `translate(${zoomedPosition.x}px, ${zoomedPosition.y}px) scale(1.5)`\r\n              : 'none',\r\n            transformOrigin: `${zoomOrigin.x}px ${zoomOrigin.y}px`\r\n          }\"\r\n          @dblclick=\"toggleZoom\"\r\n          @touchstart=\"toggleZoom\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport ReceiptSidebar from './ReceiptSidebar.vue';\r\nimport DefaultPagination from '@/components/common/pagination/DefaultPagination.vue';\r\nimport DefaultTable from '@/components/common/table/DefaultTable.vue';\r\nimport { usePreviewModal } from '@/utils/preview-modal';\r\n// import axios from 'axios'; // 실제 서버 연동 시\r\n\r\n// ==============================\r\n// 미리보기 모달 관련 로직\r\n// ==============================\r\nconst {\r\n  isPreviewVisible,\r\n  previewImage,\r\n  isZoomed,\r\n  zoomedPosition,\r\n  zoomOrigin,\r\n  openPreviewModal,\r\n  toggleZoom,\r\n  startDrag,\r\n  onDrag,\r\n  endDrag\r\n} = usePreviewModal();\r\n\r\nfunction closePreviewModalOnOutsideClick(event) {\r\n  if (!event.target.classList.contains('preview-modal-image')) {\r\n    isPreviewVisible.value = false;\r\n  }\r\n}\r\n\r\n// ==============================\r\n// 메인 데이터 / 테이블 관련\r\n// ==============================\r\nconst data = ref([]); // 실제 서버에서 받아온 데이터 저장\r\n\r\n/**\r\n * columns 정의\r\n * - key: 실제 데이터 속성명\r\n * - label: 테이블 헤더 표시 이름\r\n * - customClass: (선택) 셀에 적용할 동적 클래스 로직\r\n */\r\nconst columns = [\r\n  { key: 'date', label: '발생일', width: 100  },\r\n  { key: 'type', label: '구분', width: 50  },\r\n  { key: 'peopleCount', label: '인원수', width: 60  },\r\n  { key: 'reason', label: '사유', width: 200  },\r\n  { key: 'amount', label: '금액', width: 60  },\r\n  { key: 'amountPerPerson', label: '금액/인원수', width: 100  },\r\n  {\r\n    key: 'status',\r\n    label: '결제 상황',\r\n    width: 80,\r\n    customClass: (value) => {\r\n      if (value === '신청중') return 'text-blue';\r\n      if (value === '승인') return 'text-green';\r\n      if (value === '반려') return 'text-red';\r\n      return '';\r\n    },\r\n  },\r\n];\r\n\r\n// ==============================\r\n// 페이지네이션 관련\r\n// ==============================\r\nconst currentPage = ref(1);       // 현재 페이지\r\nconst totalPages = ref(1);        // 서버에서 받아올 총 페이지 수\r\nconst visiblePageCount = ref(5);  // 페이지네이션에서 보여줄 최대 페이지 버튼 수\r\n\r\n/**\r\n * 페이지가 바뀔 때마다 서버에 해당 페이지 데이터 요청\r\n */\r\nfunction onPageChange(newPage) {\r\n  currentPage.value = newPage;\r\n  fetchDataFromServer(newPage);\r\n}\r\n\r\n// 예시: 금액/인원수 계산\r\nfunction calculateAmountPerPerson(item) {\r\n  const amountNum = parseInt(item.amount.replace(/[^0-9]/g, ''), 10);\r\n  const peopleCount = item.people?.length || 0;\r\n  return peopleCount > 0\r\n    ? Math.floor(amountNum / peopleCount).toLocaleString() + '원'\r\n    : 'N/A';\r\n}\r\n\r\n/**\r\n * 서버에서 데이터 가져오는 함수 (백엔드 연동)\r\n * - 실제로는 axios.get(...) 등을 사용하여 \r\n *   백엔드에 { page, selectedMonth } 등 필요 파라미터를 보내고,\r\n *   응답으로 data, totalPages 등을 받아온 뒤 세팅.\r\n */\r\n// async function fetchDataFromServer(page = 1) {\r\nasync function fetchDataFromServer() {\r\n  try {\r\n    // const response = await axios.get('/api/receipts', {\r\n    //   params: { page, month: selectedMonth.value },\r\n    // });\r\n    // data.value = response.data.items;\r\n    // totalPages.value = response.data.totalPages;\r\n\r\n    // --------------------------\r\n    //      예시: mockData\r\n    // --------------------------\r\n    const mockData = [\r\n      {\r\n        date: '2024-08-01',\r\n        type: '식비',\r\n        reason: '야근',\r\n        amount: '100,000원',\r\n        receiptName: '영수증 예시',\r\n        receipt: 'https://kwon-beom-jun.github.io/centrally-system-page/img/receipt_example.jpg',\r\n        status: '반려',\r\n        rejectionReason: '미지원 항목으로 인한 반려',\r\n        people: [\r\n          { department: 'SI사업본부', team: '프레임워크', name: '권범준', position: '책임' },\r\n          { department: 'SI사업본부', team: '프레임워크', name: '홍길동', position: '선임' },\r\n        ],\r\n      },\r\n      {\r\n        date: '2024-08-02',\r\n        type: '식비',\r\n        reason: '야근',\r\n        amount: '110,000원',\r\n        receiptName: '영수증 예시',\r\n        receipt: 'https://kwon-beom-jun.github.io/centrally-system-page/img/receipt_example.jpg',\r\n        status: '신청중',\r\n        rejectionReason: '',\r\n        people: [\r\n          { department: 'SI사업본부', team: '프레임워크', name: '권범준', position: '책임' },\r\n          { department: 'SI사업본부', team: '프레임워크', name: '홍길동', position: '선임' },\r\n          { department: 'SI사업본부', team: '프레임워크', name: '심청이', position: '선임' },\r\n        ],\r\n      },\r\n      // page=2,3일때는 다른 mockData를 준다고 가정할 수도 있음\r\n    ];\r\n\r\n    // 서버 응답처럼 가정\r\n    data.value = mockData.map(item => ({\r\n      ...item,\r\n      peopleCount: item.people.length,\r\n      amountPerPerson: calculateAmountPerPerson(item),\r\n    }));\r\n\r\n    totalPages.value = 3; // 예: 서버에서 받은 총 페이지 수\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\n// ==============================\r\n// 반응형 / 사이드바 로직\r\n// ==============================\r\nconst isMobile = ref(window.innerWidth <= 1200);\r\nfunction updateIsMobile() {\r\n  isMobile.value = window.innerWidth <= 1200;\r\n}\r\nwindow.addEventListener('resize', updateIsMobile);\r\n\r\nconst selectedItem = ref(null);\r\nconst sidebarVisible = ref(false);\r\nfunction openSidebar(item) {\r\n  if (!isMobile.value) {\r\n    selectedItem.value = item;\r\n    sidebarVisible.value = true;\r\n  }\r\n}\r\nfunction closeSidebar() {\r\n  sidebarVisible.value = false;\r\n}\r\n\r\n// ==============================\r\n// 상태값 -> CSS 클래스 변환 (모바일용)\r\n// ==============================\r\nfunction getStatusClass(status) {\r\n  if (status === '신청중') return 'status-pending';\r\n  if (status === '승인') return 'status-approved';\r\n  if (status === '반려') return 'status-rejected';\r\n  return '';\r\n}\r\n\r\n// ==============================\r\n// 모바일 인원 목록 토글\r\n// ==============================\r\nconst visiblePeopleLists = ref({});\r\nfunction togglePeopleList(item) {\r\n  if (visiblePeopleLists.value[item.date]) {\r\n    delete visiblePeopleLists.value[item.date];\r\n  } else {\r\n    visiblePeopleLists.value[item.date] = true;\r\n  }\r\n}\r\nfunction showPeopleList(item) {\r\n  return visiblePeopleLists.value[item.date];\r\n}\r\n\r\n// ==============================\r\n// 월별 필터\r\n// ==============================\r\nconst selectedMonth = ref(getCurrentMonth());\r\nfunction getCurrentMonth() {\r\n  const now = new Date();\r\n  const month = now.getMonth() + 1;\r\n  return month < 10 ? `0${month}` : `${month}`;\r\n}\r\nfunction filterByMonth() {\r\n  // 바뀐 월( selectedMonth.value )을 이용해 \r\n  // fetchDataFromServer(1) 다시 호출하거나, 서버 파라미터로 보내면 됨\r\n  currentPage.value = 1;\r\n  fetchDataFromServer(1);\r\n}\r\n\r\n// 컴포넌트 초기 로드시 1페이지 데이터 호출\r\nonMounted(() => {\r\n  fetchDataFromServer(currentPage.value);\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.content {\r\n  transition: margin-right 0.3s ease;\r\n}\r\n.content-expanded {\r\n  margin-right: 300px;\r\n}\r\n\r\n/* 사이드바 */\r\n.sidebar-wrapper {\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  width: 300px;\r\n  height: 100%;\r\n  transform: translateX(100%);\r\n  transition: transform 0.3s ease;\r\n  z-index: 1000;\r\n}\r\n.sidebar-visible {\r\n  transform: translateX(0);\r\n}\r\n.sidebar {\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #f9f9f9;\r\n  border-left: 1px solid #ddd;\r\n  padding: 20px;\r\n  box-shadow: -2px 0 5px rgba(0, 0, 0, 0.1);\r\n  overflow-y: auto;\r\n}\r\n\r\n/* 상태별 텍스트 스타일 */\r\n.status-approved {\r\n  color: green;\r\n  font-weight: bold;\r\n}\r\n.status-pending {\r\n  color: blue;\r\n  font-weight: bold;\r\n}\r\n.status-rejected {\r\n  color: red;\r\n  font-weight: bold;\r\n}\r\n\r\n/* columns의 customClass에서 사용하는 예시 */\r\n.text-red {\r\n  color: red;\r\n  font-weight: bold;\r\n}\r\n.text-blue {\r\n  color: blue;\r\n  font-weight: bold;\r\n}\r\n.text-green {\r\n  color: green;\r\n  font-weight: bold;\r\n}\r\n\r\n/* 인원 목록 스타일 */\r\n.people-list {\r\n  font-size: 0.7rem;\r\n  max-height: 150px;\r\n  overflow-y: auto;\r\n  margin-top: 10px;\r\n  border-top: 1px solid #ddd;\r\n  padding-top: 10px;\r\n}\r\n.people-list-header {\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n}\r\n.people-list-item {\r\n  padding: 1px 0;\r\n  margin: 0;\r\n  margin-left: 10px;\r\n}\r\n\r\n/* 이미지 미리보기 모달 */\r\n.preview-modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.7);\r\n  z-index: 9999;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.preview-modal-content {\r\n  position: relative;\r\n}\r\n.preview-modal-image {\r\n  max-width: 80vw;\r\n  max-height: 80vh;\r\n  transition: transform 0.2s ease;\r\n}\r\n</style>\r\n","import script from \"./PersonalReceiptHistory.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PersonalReceiptHistory.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PersonalReceiptHistory.vue?vue&type=style&index=0&id=3cbc16f6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3cbc16f6\"]])\n\nexport default __exports__","<template>\r\n  <!-- transition 태그 추가 및 모달 감싸기 -->\r\n  <transition name=\"fade\">\r\n    <div \r\n      v-if=\"isVisible\" \r\n      class=\"custom-modal-pop-up\"\r\n      :style=\"{ zIndex: 1100 + props.zIndex }\"\r\n      @click.self=\"handleBackgroundClick\"\r\n    >\r\n      <div class=\"custom-modal-pop-up-dialog\">\r\n        <div class=\"custom-modal-pop-up-content\">\r\n          <div class=\"custom-modal-pop-up-header\">\r\n            <h5>{{ title }}</h5>\r\n          </div>\r\n          <div class=\"custom-modal-pop-up-body\">\r\n            <slot name=\"body\"></slot>\r\n          </div>\r\n          <div class=\"custom-modal-pop-up-footer\">\r\n            <!-- 취소 버튼: cancelText가 있을 때만 렌더링 -->\r\n            <button v-if=\"cancelText\" type=\"button\" class=\"btn btn-secondary\" @click=\"closeModal\">{{ cancelText }}</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"$emit('confirm')\">{{ confirmText }}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </transition>\r\n</template>\r\n\r\n<script setup>\r\nimport { defineProps, defineEmits } from 'vue';\r\n\r\nconst props = defineProps({\r\n  isVisible: Boolean,\r\n  title: {\r\n    type: String,\r\n    default: '',\r\n  },\r\n  confirmText: {\r\n    type: String,\r\n    default: 'Confirm',\r\n  },\r\n  cancelText: {\r\n    type: String,\r\n    default: '', // 기본값을 빈 문자열로 설정\r\n  },\r\n  // 백그라운드 클릭을 허용할지 제어하는 prop\r\n  disableBackgroundClose: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n});\r\n\r\n// 백그라운드 클릭 시 모달 닫힘을 제어하는 함수\r\nconst handleBackgroundClick = () => {\r\n  if (!props.disableBackgroundClose) {\r\n    closeModal();\r\n  }\r\n};\r\n\r\nconst emits = defineEmits(['confirm', 'close']);\r\n\r\nconst closeModal = () => {\r\n  emits('close');\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 기존 스타일 */\r\n.custom-modal-pop-up {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 1100; /* Bootstrap 모달의 기본 z-index(1050)보다 높게 설정 */\r\n}\r\n\r\n.custom-modal-pop-up-dialog {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.custom-modal-pop-up-content {\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.custom-modal-pop-up-header h5 {\r\n  font-size: 1rem;\r\n  text-align: left;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.custom-modal-pop-up-body {\r\n  padding: 10px 0;\r\n  text-align: left;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.custom-modal-pop-up-footer {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.custom-modal-pop-up-footer .btn {\r\n  min-width: 80px;\r\n  margin-left: 10px;\r\n}\r\n\r\n.custom-modal-pop-up-header {\r\n  border-bottom: none;\r\n}\r\n\r\n.custom-modal-pop-up-footer {\r\n  border-top: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n/* 애니메이션 효과 */\r\n.fade-enter-active {\r\n  transition: opacity 0.2s ease;\r\n}\r\n\r\n.fade-enter-from {\r\n  opacity: 0;\r\n}\r\n\r\n/* 반응형: 모바일 환경에서 폰트 크기 조정 */\r\n@media (max-width: 1200px) {\r\n  .custom-modal-pop-up-content {\r\n    width: 70%;\r\n  }\r\n\r\n  .custom-modal-pop-up-footer .btn {\r\n    font-size: 0.6rem !important; /* 모바일에서 버튼 글자 크기 */\r\n    padding: 0.2rem 0.4rem !important; /* 모바일에서 버튼 크기 */\r\n    min-width: 50px;\r\n  }\r\n\r\n  .custom-modal-pop-up-header h5 {\r\n    font-size: 0.8rem;\r\n    margin-bottom: 8px;\r\n  }\r\n\r\n  .custom-modal-pop-up-body {\r\n    font-size: 0.75rem;\r\n  }\r\n}\r\n</style>\r\n","import script from \"./AlertModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./AlertModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./AlertModal.vue?vue&type=style&index=0&id=b903ba48&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-b903ba48\"]])\n\nexport default __exports__","<template>\n  <div>\n    <!-- 메인 콘텐츠 영역 -->\n    <div class=\"content\">\n      <h2 class=\"content-title\">{{ monthText }}</h2>\n      <div class=\"content-sub-title\">\n        <p>Month End Closing Status</p>\n      </div>\n\n      <!-- 마감 체크박스 -->\n      <div class=\"form-check\">\n        <input class=\"form-check-input\" type=\"checkbox\" id=\"monthCloseCheck\" v-model=\"isMonthCloseChecked\" @change=\"handleCheckboxChange\">\n        <label class=\"form-check-label\" for=\"monthCloseCheck\">\n          {{ monthCloseLabel }}\n        </label>\n      </div>\n\n      <!-- 알림 메시지 -->\n      <p class=\"text-danger mt-2\">\n        마감을 완료하고 되돌릴려면 결재권자의 권한이 필요합니다.<br />\n        최종 마감의 다음달을 보여줍니다.\n      </p>\n\n      <!-- 마감 버튼 -->\n      <DefaultButton \n        align=\"left\"\n        @click=\"confirmationModalVisible = true\">\n        저장\n      </DefaultButton>\n    </div>\n\n    <AlertModal \n      :isVisible=\"confirmationModalVisible\" \n      :disableBackgroundClose=\"true\"\n      title=\"마감 확인\" \n      confirmText=\"확인\" \n      cancelText=\"취소\"\n      @close=\"confirmationModalVisible = false\" \n      @confirm=\"closureMonth\">\n      <template #body>\n        <p>정말로 마감하시겠습니까?</p>\n      </template>\n    </AlertModal>\n\n    <AlertModal \n      :isVisible=\"resultModalVisible\" \n      :disableBackgroundClose=\"true\"\n      :title=\"closureResultTitle\" \n      confirmText=\"확인\" \n      @confirm=\"resultModalVisible = false\">\n      <template #body>\n        <p>{{ closureResultBody }}</p>\n      </template>\n    </AlertModal>\n\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport AlertModal from '@/components/common/modal/AlertModal.vue';\nimport DefaultButton from '@/components/common/button/DefaultButton.vue';\n\nconst today = new Date();\nlet currentYear = today.getFullYear();\nlet currentMonth = today.getMonth() + 1; // 월은 0부터 시작하므로 +1 필요\n\n// 현재 월이 1월이면 이전 달은 12월, 년도는 작년으로 변경\nif (currentMonth === 1) {\n  currentMonth = 12;\n  currentYear -= 1; // 년도를 작년으로 변경\n} else {\n  currentMonth -= 1; // 현재 월에서 -1 하여 이전 달로 변경\n}\n\nconst confirmationModalVisible = ref(false);\nconst resultModalVisible = ref(false);\nconst closureResultTitle = ref('');\nconst closureResultBody = ref('');\n\nconst monthText = ref(`${currentMonth}월 마감`);\nconst monthCloseLabel = ref(`${currentYear}년 ${monthText.value} 진행`);\n\nconst isMonthCloseChecked = ref(false);\nconst isButtonEnabled = ref(false);\n\nconst handleCheckboxChange = () => {\n  if (isMonthCloseChecked.value) {\n    const currentDay = today.getDate();\n    if (currentDay >= 1 && currentDay <= 31) {\n      isButtonEnabled.value = true;\n    } else {\n      isButtonEnabled.value = false;\n      alert('마감 버튼은 매월 1일부터 31일 사이에만 활성화됩니다.');\n      isMonthCloseChecked.value = false;\n    }\n  } else {\n    isButtonEnabled.value = false;\n  }\n};\n\nconst closureMonth = async () => {\n  confirmationModalVisible.value = false;\n  const hasRejected = true; // 실제 데이터 로직으로 교체해야 함\n  if (hasRejected) {\n    closureResultTitle.value = '확인 필요';\n    closureResultBody.value = '결재가 되지 않은 건수가 있습니다.';\n  } else {\n    // 실제 마감 로직 추가\n    closureResultTitle.value = '마감 완료';\n    closureResultBody.value = '마감이 완료되었습니다.';\n  }\n  resultModalVisible.value = true;\n}\n</script>\n\n<style scoped>\n#dataTable tbody tr:hover td {\n  background-color: #e7f1ff !important;\n}\n\n/* 날짜 선택 셀렉트 박스 크기 조정 */\n#dateSelect {\n  font-size: 0.8rem; /* 폰트 크기 줄이기 */\n  padding: 0.25rem 0.5rem; /* 패딩 줄이기 */\n  width: auto; /* 너비 자동 조정 */\n}\n\n/* 이름 검색 인풋 필드 크기 조정 */\n#nameSearch {\n  font-size: 0.8rem; /* 폰트 크기 줄이기 */\n  padding: 0.25rem 0.5rem; /* 패딩 줄이기 */\n  width: auto; /* 너비 자동 조정 */\n}\n\n/* 버튼 크기 및 텍스트 크기 조정 */\n#searchButton {\n  font-size: 0.8rem; /* 버튼 텍스트 크기 줄이기 */\n  padding: 0.25rem 0.5rem; /* 버튼 패딩 줄이기 */\n}\n\n.text-danger {\n  margin-bottom: 70px;\n}\n\n@media (max-width: 1200px) {\n  input {\n    font-size: 1rem !important;\n    padding: 0.7rem 0.7rem !important;\n    margin-right: 10px !important;\n  }\n  .table {\n    font-size: 0.75rem; /* 모바일 테이블 글자 크기 조정 */\n  }\n}\n</style>\n","import script from \"./ReceiptClosure.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ReceiptClosure.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ReceiptClosure.vue?vue&type=style&index=0&id=c859e41e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-c859e41e\"]])\n\nexport default __exports__","<template>\n  <div>\n    <!-- 메인 콘텐츠 영역 -->\n    <div class=\"content\">\n      <h2 class=\"content-title\">영수증 결제 마감 확인</h2>\n      <p class=\"content-sub-title\">결제 마감 후 정상적 처리 확인 페이지</p>\n\n      <div class=\"search-controls\">\n        <!-- 월 선택 그룹 (오른쪽 정렬) -->\n        <div class=\"d-flex align-items-center end-date-group mt-2 justify-content-end\">\n          <label for=\"endDate\" class=\"mr-2\">월 선택 :</label>\n          <DefaultTextfield\n            type=\"month\"\n            id=\"endDate\"\n            v-model=\"endDate\"\n            size=\"small\"\n          />\n        </div>\n        <!-- 이름 검색 그룹 (실시간 필터링 → 여기서는 백엔드로) -->\n        <div class=\"d-flex align-items-center name-group mt-2 justify-content-end\">\n          <label for=\"nameSearch\" class=\"mr-2\">이름 :</label>\n          <DefaultTextfield\n            type=\"text\"\n            id=\"nameSearch\"\n            v-model=\"nameSearch\"\n            size=\"midium\"\n            placeholder=\"이름 입력\"\n          />\n          <DefaultButton @click=\"search\">\n            조회\n          </DefaultButton>\n        </div>\n      </div>\n\n      <!-- (큰 화면) DefaultTable 컴포넌트 -->\n      <DefaultTable\n        :showTable=\"!isMobile\"\n        :columns=\"columns\"\n        :data=\"data\"\n      />\n\n      <!-- (작은 화면) 카드 형식 보기 -->\n      <div class=\"card-layout\" v-if=\"isMobile\">\n        <div class=\"card\" v-for=\"(item, index) in data\" :key=\"index\">\n          <div class=\"card-header\">\n            <p class=\"card-title\">{{ item.name }}</p>\n          </div>\n          <div class=\"card-body\">\n            <p class=\"card-text\"><Strong>건수: </Strong>{{ item.count }}</p>\n            <p class=\"card-text\"><Strong>부서: </Strong>{{ item.department }}</p>\n            <p class=\"card-text\"><Strong>팀: </Strong>{{ item.team }}</p>\n            <p class=\"card-text\"><Strong>승인금액: </Strong>{{ formatCurrency(item.approved) }}원</p>\n            <p class=\"card-text\"><Strong>반려금액: </Strong>{{ formatCurrency(item.rejected) }}원</p>\n          </div>\n        </div>\n      </div>\n\n      <!-- 페이지네이션 (공통 컴포넌트) -->\n      <DefaultPagination\n        :currentPage=\"currentPage\"\n        :totalPages=\"totalPages\"\n        :visiblePageCount=\"visiblePageCount\"\n        @pageChange=\"onPageChange\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue';\nimport DefaultTable from '@/components/common/table/DefaultTable.vue';\nimport DefaultPagination from '@/components/common/pagination/DefaultPagination.vue';\nimport DefaultButton from '@/components/common/button/DefaultButton.vue';\nimport DefaultTextfield from '@/components/common/textfield/DefaultTextfield.vue';\n// import axios from 'axios'; // 실제 백엔드 호출 시\n\n/**\n * 상태 정의\n */\nconst endDate = ref('');\nconst nameSearch = ref('');\nconst currentPage = ref(1);\nconst totalPages = ref(1);    // 서버 응답값\nconst data = ref([]);         // 서버에서 받아온 데이터\nconst isMobile = ref(false);\nconst visiblePageCount = ref(5);  // 페이지네이션에서 보여줄 최대 페이지 버튼 수\n\n/** 테이블의 컬럼 정의 */\nconst columns = [\n  { key: 'name', label: '이름', width: 60 },\n  { key: 'department', label: '부서', width: 100 },\n  { key: 'team', label: '팀', width: 100 },\n  { key: 'count', label: '건수', width: 50 },\n  { key: 'approved', label: '승인금액', width: 100 },\n  { key: 'rejected', label: '반려금액', width: 100 },\n];\n\n/**\n * 백엔드 호출 (page, endDate, nameSearch 등 파라미터 전달)\n * 실제로는 axios 활용\n */\n// async function fetchDataFromServer(page = 1) {\nasync function fetchDataFromServer() {\n  try {\n    // const response = await axios.get('/api/marginCheck', {\n    //   params: {\n    //     page,\n    //     endDate: endDate.value,\n    //     name: nameSearch.value\n    //   }\n    // });\n    // data.value = response.data.items;\n    // totalPages.value = response.data.totalPages;\n\n    // 예시 mock\n    const mockData = [\n      {\n        name: '김필수',\n        department: 'SI사업본부',\n        team: '프레임워크',\n        count: 3,\n        approved: 800000,\n        rejected: 200000\n      },\n      {\n        name: '홍길동',\n        department: 'SI사업본부',\n        team: '프레임워크',\n        count: 3,\n        approved: 800000,\n        rejected: 200000\n      },\n      {\n        name: '김한',\n        department: 'SI사업본부',\n        team: '프레임워크',\n        count: 5,\n        approved: 1000000,\n        rejected: 200000\n      },\n      // ...추가 데이터\n    ];\n    data.value = mockData;\n    totalPages.value = 3; // 예시\n  } catch (err) {\n    console.error(err);\n  }\n}\n\n/**\n * 검색 함수\n * - endDate, nameSearch가 바뀔 때마다 page=1 로 백엔드 다시 호출\n */\nfunction search() {\n  currentPage.value = 1;\n  fetchDataFromServer(currentPage.value);\n}\n\n/**\n * 페이지 변경 시 (DefaultPagination에서 방출)\n * - newPage에 맞춰 백엔드 호출\n */\nfunction onPageChange(newPage) {\n  currentPage.value = newPage;\n  fetchDataFromServer(newPage);\n}\n\n/**\n * 반응형 여부 판단\n */\nfunction updateViewMode() {\n  isMobile.value = window.innerWidth <= 1200;\n}\n\n/**\n * 금액 표시 포맷\n */\nfunction formatCurrency(amount) {\n  if (!amount) return '0';\n  return amount.toLocaleString();\n}\n\n/**\n * onMounted\n */\nonMounted(() => {\n  // 페이지 로드시 1페이지 호출\n  fetchDataFromServer(currentPage.value);\n\n  // 뷰포트 너비 체크\n  updateViewMode();\n  window.addEventListener('resize', updateViewMode);\n});\n</script>\n\n\n<style scoped>\n#dataTable tbody tr:hover td {\n  background-color: #e7f1ff !important;\n}\n.search-controls {\n  margin-bottom: 15px;\n}\n@media (min-width: 1201px) {\n  .card {\n    display: none; /* 카드 숨기기 */\n  }\n  .table {\n    display: table; /* 테이블 표시 */\n  }\n}\n</style>\n","import script from \"./ReceiptClosureOverview.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ReceiptClosureOverview.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ReceiptClosureOverview.vue?vue&type=style&index=0&id=3bf4d768&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3bf4d768\"]])\n\nexport default __exports__","<template>\n  <div>\n    <!-- 메인 콘텐츠 영역 -->\n    <div class=\"content\">\n      <h2 class=\"content-title\">영수증 내역 조회</h2>\n\n      <!-- 검색된 날짜 범위 표시 -->\n      <!-- 서버 조회 결과로 받아온 startDate/endDate 등을 표시하는 예시 -->\n      <div class=\"content-sub-title\" v-if=\"data.length\">\n        <p>날짜: [{{ computedStartDate }} ~ {{ computedEndDate }}]</p>\n      </div>\n\n      <!-- PDF 출력 버튼 -->\n      <DefaultButton \n        size=\"small\"\n        align=\"left\"\n        color=\"gray\"\n        @click=\"printPDF\"\n      >\n        PDF 출력하기\n      </DefaultButton>\n\n      <!-- 검색 영역 -->\n      <div class=\"search-controls\">\n        <!-- 시작일, 종료일 그룹 -->\n        <div class=\"d-flex align-items-center start-end-date-group mt-2\">\n          <label for=\"startDate\" class=\"mr-2\">시작 :</label>\n          <DefaultTextfield\n            type=\"month\"\n            id=\"startDate\"\n            v-model=\"startDate\"\n            size=\"small\"\n          />\n          <label for=\"endDate\" class=\"mr-2\">종료 :</label>\n          <DefaultTextfield\n            type=\"month\"\n            id=\"endDate\"\n            v-model=\"endDate\"\n            size=\"small\"\n          />\n        </div>\n        <!-- 이름 검색 그룹 -->\n        <div class=\"d-flex align-items-center name-group mt-2\">\n          <label for=\"nameSearch\" class=\"mr-2\">이름 :</label>\n          <DefaultTextfield\n            type=\"text\"\n            id=\"nameSearch\"\n            v-model=\"nameSearch\"\n            size=\"small\"\n            placeholder=\"이름 입력\"\n          />\n          <DefaultButton @click=\"search\">\n            조회\n          </DefaultButton>\n        </div>\n      </div>\n\n      <!-- DefaultTable 컴포넌트 사용 (큰 화면일 때만 보이도록) -->\n      <DefaultTable\n        :columns=\"columns\"\n        :data=\"data\"\n        :showTable=\"!isMobile\"\n      />\n\n      <!-- 카드 형식 보기 (작은 화면일 때만 보이도록) -->\n      <div v-if=\"isMobile\">\n        <div\n          class=\"card\"\n          v-for=\"(item, index) in data\"\n          :key=\"index\"\n        >\n          <div class=\"card-header\">\n            <div class=\"d-flex justify-content-between align-items-center mb-2\">\n              <p class=\"card-title\">{{ item.name }}</p>\n              <p class=\"card-title\">{{ item.email }}</p>\n            </div>\n          </div>\n          <div class=\"card-body\">\n            <p class=\"card-text\"><Strong>건수: </Strong>{{ item.count }}</p>\n            <p class=\"card-text\"><Strong>부서: </Strong>{{ item.department }}</p>\n            <p class=\"card-text\"><Strong>팀: </Strong>{{ item.team }}</p>\n            <p class=\"card-text\"><Strong>신청금액: </Strong>{{ formatCurrency(item.requested) }}원</p>\n            <p class=\"card-text\"><Strong>승인금액: </Strong>{{ formatCurrency(item.approved) }}원</p>\n            <p class=\"card-text\"><Strong>반려금액: </Strong>{{ formatCurrency(item.rejected) }}원</p>\n          </div>\n        </div>\n      </div>\n\n      <!-- 페이지네이션 (공통 컴포넌트) -->\n      <DefaultPagination\n        :currentPage=\"currentPage\"\n        :totalPages=\"totalPages\"\n        :visiblePageCount=\"visiblePageCount\"\n        @pageChange=\"onPageChange\"\n      />\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue';\nimport DefaultTable from '@/components/common/table/DefaultTable.vue';\nimport DefaultButton from '@/components/common/button/DefaultButton.vue';\nimport DefaultPagination from '@/components/common/pagination/DefaultPagination.vue';\nimport DefaultTextfield from '@/components/common/textfield/DefaultTextfield.vue';\n// import axios from 'axios'; // 실제 서버 연동 시 사용\n\n/** \n * 1) 상태 정의 \n */\nconst data = ref([]);             // 실제 서버에서 받아온 데이터\nconst currentPage = ref(1);       // 현재 페이지\nconst totalPages = ref(1);        // 총 페이지 수(서버 응답)\nconst isMobile = ref(false);      // 뷰포트 너비에 따른 반응형 여부\nconst visiblePageCount = ref(5);  // 페이지네이션에서 보여줄 최대 페이지 버튼 수\n\n// 검색용\nconst startDate = ref('');\nconst endDate = ref('');\nconst nameSearch = ref('');\n\n// (출력용) 서버에서 조회된 기간\nconst computedStartDate = ref('');\nconst computedEndDate = ref('');\n\n/**\n * 2) 컬럼 정의\n */\nconst columns = ref([\n  { key: 'name',      label: '이름',      width: 60 },\n  { key: 'department',label: '부서',      width: 100 },\n  { key: 'team',      label: '팀',        width: 100 },\n  { key: 'email',     label: '메일',      width: 130 },\n  { key: 'count',     label: '건수',      width: 50 },\n  { key: 'requested', label: '신청금액',  width: 100 },\n  { key: 'approved',  label: '승인금액',  width: 100 },\n  { key: 'rejected',  label: '반려금액',  width: 100 },\n]);\n\n/**\n * 3) 서버에서 데이터 가져오기\n * - page, startDate, endDate, nameSearch 등의 파라미터로 백엔드 호출\n * - 응답으로 data, totalPages, 조회된 날짜 범위 등을 받아 세팅\n */\n// async function fetchDataFromServer(page = 1) {\nasync function fetchDataFromServer() {\n  try {\n    // 실제 API 예시:\n    // const response = await axios.get('/api/receipts', {\n    //   params: {\n    //     page,\n    //     startDate: startDate.value,\n    //     endDate: endDate.value,\n    //     name: nameSearch.value,\n    //   },\n    // });\n    // data.value = response.data.items;\n    // totalPages.value = response.data.totalPages;\n    // computedStartDate.value = response.data.startDate; \n    // computedEndDate.value = response.data.endDate;\n\n    // 여기서는 예시 mockData\n    const mockData = [\n      {\n        month: '2024-01',\n        name: '홍길동',\n        department: 'SI사업본부',\n        team: '프레임워크',\n        email: 'hong@example.com',\n        count: 3,\n        requested: 1000000,\n        approved: 800000,\n        rejected: 200000,\n        status: '승인',\n      },\n      {\n        month: '2024-02',\n        name: '김철수',\n        department: 'SI사업본부',\n        team: '프레임워크',\n        email: 'kim@example.com',\n        count: 5,\n        requested: 1200000,\n        approved: 1000000,\n        rejected: 200000,\n        status: '신청 중',\n      },\n      {\n        month: '2024-03',\n        name: '이영희',\n        department: 'SI사업본부',\n        team: '프레임워크',\n        email: 'lee@example.com',\n        count: 2,\n        requested: 800000,\n        approved: 500000,\n        rejected: 300000,\n        status: '반려',\n      },\n      // ...\n    ];\n    // 서버 응답처럼 가정\n    data.value = mockData;\n    totalPages.value = 3; // 예: 총 3페이지\n    \n    // 예: 응답 데이터에 조회된 startDate, endDate가 있다면 세팅\n    computedStartDate.value = startDate.value || '2024-01';\n    computedEndDate.value   = endDate.value   || '2024-03';\n  } catch (err) {\n    console.error(err);\n  }\n}\n\n/**\n * 4) 검색 함수\n * - 검색 버튼 클릭 시 1페이지부터 다시 조회\n */\nfunction search() {\n  currentPage.value = 1;\n  fetchDataFromServer(currentPage.value);\n}\n\n/**\n * 5) 페이지 변경 시 (DefaultPagination)\n * - 새 페이지를 받아서 백엔드 재호출\n */\nfunction onPageChange(newPage) {\n  currentPage.value = newPage;\n  fetchDataFromServer(newPage);\n}\n\n/**\n * 6) 반응형 / 뷰 모드 전환\n */\nfunction updateViewMode() {\n  isMobile.value = window.innerWidth <= 1200;\n}\n\n/**\n * 7) PDF 출력 예시 (실제 구현은 필요에 따라 추가)\n */\nfunction printPDF() {\n  console.log('PDF 출력 로직 실행');\n  // window.print() or 기타 PDF 라이브러리 활용 가능\n}\n\n/**\n * 8) 통화(금액) 형식 함수\n */\nfunction formatCurrency(amount) {\n  if (!amount) return '0';\n  return amount.toLocaleString();\n}\n\n/**\n * 9) onMounted\n * - 초기 1페이지 조회\n * - 화면 너비 체크\n */\nonMounted(() => {\n  fetchDataFromServer(currentPage.value);\n  updateViewMode();\n  window.addEventListener('resize', updateViewMode);\n});\n</script>\n\n<style scoped>\n.content-sub-title {\n  margin-bottom: 0px !important;\n}\n.search-controls {\n  margin-top: 60px;\n}\n.start-end-date-group label {\n  margin-left: 10px !important;\n}\n.align-items-center {\n  margin-bottom: 0px !important;\n}\n/* (기존) 상태별 색상 설정 예시 \n.status-approved   { color: green;  font-weight: bold; }\n.status-pending   { color: blue;   font-weight: bold; }\n.status-rejected  { color: red;    font-weight: bold; }\n.status-closed    { color: black;  font-weight: bold; }\n*/\n\n/* 반응형 테이블/카드 */\n@media (min-width: 1201px) {\n  .search-controls {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: flex-end;\n    margin-bottom: 20px;\n  }\n  .search-controls > div {\n    margin-right: 1rem;\n  }\n  #nameSearch {\n    font-size: 1rem;\n  }\n  .card {\n    display: none; /* 카드 숨기기 */\n  }\n  .table {\n    display: table; /* 테이블 표시 */\n  }\n}\n\n@media (max-width: 1200px) {\n  .btn-primary {\n    font-size: 0.75rem;\n    padding: 0.3rem 0.6rem;\n    margin-bottom: 10px;\n  }\n  .search-controls {\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    margin-top: 30px;\n  }\n  .search-controls > div {\n    width: 100%;\n    display: flex;\n    justify-content: flex-end;\n  }\n  /* 이름 그룹을 위쪽에 배치 */\n  .name-group {\n    order: -1;\n    margin: 0 !important;\n  }\n  .start-end-date-group {\n    order: 1;\n    margin-bottom: 10px;\n  }\n  .table {\n    display: none; /* 테이블 숨기기 */\n  }\n}\n\n@media (min-width: 1920px) {\n  .navbar-text {\n    font-size: 1.5rem; /* 더 큰 텍스트 크기 */\n  }\n}\n\n@media (max-width: 1200px) {\n  .start-end-date-group input {\n    width: 110px !important;\n  }\n}\n</style>\n","import script from \"./ReceiptSearch.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ReceiptSearch.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ReceiptSearch.vue?vue&type=style&index=0&id=4e906d54&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4e906d54\"]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <!-- 메인 콘텐츠 영역 -->\r\n    <div class=\"content\" :class=\"{ 'content-expanded': sidebarVisible && !isMobile }\">\r\n      <h2 class=\"content-title\">권범준님 영수증 상세 내역 조회</h2>\r\n      <!-- 검색된 날짜 범위 표시 -->\r\n      <div class=\"content-sub-title\">\r\n        <p>날짜: [{{ filteredStartDate }} ~ {{ filteredEndDate }}]</p>\r\n      </div>\r\n      <div class=\"btn-back\">\r\n        <!-- 뒤로가기 버튼 -->\r\n        <DefaultButton\r\n          size=\"small\"\r\n          align=\"left\"\r\n          color=\"gray\"\r\n          @click=\"goBack\">\r\n          뒤로가기\r\n        </DefaultButton>\r\n      </div>\r\n\r\n      <!-- 테이블 보기 (큰 화면) -->\r\n      <DefaultTable\r\n        :showTable=\"!isMobile\"\r\n        :columns=\"columns\"\r\n        :data=\"data\"\r\n        :rowClick=\"openSidebar\"\r\n      />\r\n\r\n      <!-- 카드 레이아웃 보기 (작은 화면에서만 보임) -->\r\n      <div class=\"card-layout\" v-if=\"isMobile\">\r\n        <div\r\n          class=\"card\"\r\n          v-for=\"(item, index) in data\"\r\n          :key=\"index\"\r\n        >\r\n          <div class=\"card-header\">\r\n            <p class=\"card-title\">{{ item.date }}</p>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <p class=\"card-text\">\r\n              <strong>인원 : </strong>\r\n              <span @click=\"togglePeopleList(item)\" style=\"cursor: pointer;\">\r\n                {{ item.people.length }}명\r\n              </span>\r\n            </p>\r\n            <div v-if=\"showPeopleList(item)\">\r\n              <div class=\"people-list\">\r\n                <div class=\"people-list-header\">명단</div>\r\n                <p\r\n                  v-for=\"person in item.people\"\r\n                  :key=\"person.name\"\r\n                  class=\"people-list-item\"\r\n                >\r\n                  {{ person.name }} ({{ person.department }} - {{ person.team }})\r\n                </p>\r\n              </div>\r\n              <hr />\r\n            </div>\r\n            <p class=\"card-text\">\r\n              <strong>구분/사유 : </strong> \r\n              {{ item.type }} / {{ item.reason }}\r\n            </p>\r\n            <p class=\"card-text\">\r\n              <strong>금액 : </strong>\r\n              {{ item.amount }}\r\n            </p>\r\n            <p class=\"card-text\">\r\n              <strong>금액/인원수 : </strong>\r\n              {{ calculateAmountPerPerson(item) }}\r\n            </p>\r\n            <p>\r\n              <strong class=\"card-text\">영수증 사진 : </strong>\r\n              <a\r\n                class=\"card-text\"\r\n                @click.prevent=\"openPreviewModal(item.receipt)\"\r\n                style=\"cursor: pointer; color: blue;\"\r\n              >\r\n                {{ item.receiptName }}\r\n              </a>\r\n            </p>\r\n            <p class=\"card-text\">\r\n              <strong>반려 사유: </strong> {{ item.rejectionReason || 'X' }}\r\n            </p>\r\n            <p class=\"card-text\">\r\n              <strong>결제 상황:</strong>\r\n              <span :class=\"getStatusClass(item.status)\">{{ item.status }}</span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 페이지네이션 (공통 컴포넌트) -->\r\n      <DefaultPagination\r\n        :currentPage=\"currentPage\"\r\n        :totalPages=\"totalPages\"\r\n        :visiblePageCount=\"visiblePageCount\"\r\n        @pageChange=\"onPageChange\"\r\n      />\r\n    </div>\r\n\r\n    <!-- 사이드바 추가 -->\r\n    <div :class=\"['sidebar-wrapper', { 'sidebar-visible': sidebarVisible }]\">\r\n      <ReceiptSidebar \r\n        v-if=\"!isMobile\" \r\n        :item=\"selectedItem\" \r\n        :visible=\"sidebarVisible\" \r\n        @close=\"closeSidebar\"\r\n        @preview-image=\"openPreviewModal\"\r\n      />\r\n    </div>\r\n\r\n    <!-- 이미지 미리보기 모달 -->\r\n    <div\r\n      v-if=\"isPreviewVisible\"\r\n      class=\"modal preview-modal\"\r\n      @click=\"closePreviewModalOnOutsideClick\"\r\n    >\r\n      <div\r\n        class=\"preview-modal-content\"\r\n        @mousedown=\"startDrag\"\r\n        @mousemove=\"onDrag\"\r\n        @mouseup=\"endDrag\"\r\n        @mouseleave=\"endDrag\"\r\n        @touchstart=\"startDrag\"\r\n        @touchmove=\"onDrag\"\r\n        @touchend=\"endDrag\"\r\n      >\r\n        <img\r\n          :src=\"previewImage\"\r\n          :class=\"{ zoomed: isZoomed }\"\r\n          class=\"preview-modal-image\"\r\n          :style=\"{\r\n            transform: isZoomed\r\n              ? `translate(${zoomedPosition.x}px, ${zoomedPosition.y}px) scale(1.5)`\r\n              : 'none',\r\n            transformOrigin: `${zoomOrigin.x}px ${zoomOrigin.y}px`\r\n          }\"\r\n          @dblclick=\"toggleZoom\"\r\n          @touchstart=\"toggleZoom\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, watch } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport ReceiptSidebar from './ReceiptSidebar.vue';\r\nimport DefaultButton from '@/components/common/button/DefaultButton.vue';\r\nimport DefaultPagination from '@/components/common/pagination/DefaultPagination.vue';\r\nimport DefaultTable from '@/components/common/table/DefaultTable.vue'; \r\nimport { usePreviewModal } from '@/utils/preview-modal';\r\n// import axios from 'axios'; // 실제 백엔드 연동 시\r\n\r\n// =====================\r\n// 1) 날짜 표시 \r\n// =====================\r\nconst filteredStartDate = ref('2024-08');\r\nconst filteredEndDate = ref('2024-09');\r\n\r\n// =====================\r\n// 2) 사이드바 / 모바일\r\n// =====================\r\nconst selectedItem = ref(null);\r\nconst sidebarVisible = ref(false);\r\nconst isMobile = ref(window.innerWidth <= 1200);\r\nfunction updateIsMobile() {\r\n  isMobile.value = window.innerWidth <= 1200;\r\n}\r\nwatch(isMobile, (newVal) => {\r\n  if (newVal) closeSidebar();\r\n});\r\n\r\n// =====================\r\n// 3) 미리보기 모달\r\n// =====================\r\nconst {\r\n  isPreviewVisible,\r\n  previewImage,\r\n  isZoomed,\r\n  zoomedPosition,\r\n  zoomOrigin,\r\n  openPreviewModal,\r\n  toggleZoom,\r\n  startDrag,\r\n  onDrag,\r\n  endDrag\r\n} = usePreviewModal();\r\nfunction closePreviewModalOnOutsideClick(event) {\r\n  if (!event.target.classList.contains('preview-modal-image')) {\r\n    isPreviewVisible.value = false;\r\n  }\r\n}\r\n\r\n// =====================\r\n// 4) 데이터 / 페이지네이션\r\n// =====================\r\nconst data = ref([]);\r\nconst currentPage = ref(1);\r\nconst totalPages = ref(1);\r\nconst visiblePageCount = ref(5);  // 페이지네이션에서 보여줄 최대 페이지 버튼 수\r\n\r\n// **테이블 컬럼** 정의\r\n// 각각의 'key'가 item[key]에 대응\r\n// 필요 시 customClass, customValue 등 추가 가능\r\nconst columns = [\r\n  { key: 'date', label: '발생일', width: 100 },\r\n  {\r\n    key: 'peopleCount',\r\n    label: '인원수',\r\n    width: 60,\r\n    // 만약 item.peopleCount에 값이 없다면 직접 계산 가능\r\n    // customValue: (item) => item.people.length,\r\n    customValue: (item) => item.people ? item.people.length : 0,\r\n  },\r\n  { key: 'type', label: '구분', width: 100 },\r\n  { key: 'reason', label: '사유', width: 130 },\r\n  { key: 'amount', label: '금액', width: 100 },\r\n  {\r\n    key: 'amountPerPerson',\r\n    label: '금액/인원수',\r\n    width: 100,\r\n    // customValue: (item) => calculateAmountPerPerson(item),\r\n    customValue: (item) => calculateAmountPerPerson(item),\r\n  },\r\n  {\r\n    key: 'status',\r\n    label: '결제 상황',\r\n    width: 80,\r\n    // 동적 클래스 지정 (DefaultTable.vue에서 customClass 사용)\r\n    customClass: (value) => {\r\n      if (value === '신청중') return 'text-blue';\r\n      if (value === '승인') return 'text-green';\r\n      if (value === '반려') return 'text-red';\r\n      return '';\r\n    }\r\n  },\r\n];\r\n\r\n// =====================\r\n// 서버(또는 mock) 연동\r\n// =====================\r\n// 실제로는 axios로 서버에 { page } 등 파라미터를 보내어\r\n// 해당 페이지 데이터와 totalPages 응답을 받아 세팅\r\n// async function fetchDataFromServer(page = 1) {\r\nasync function fetchDataFromServer() {\r\n  try {\r\n    // const response = await axios.get('/api/receipts', { params: { page } });\r\n    // data.value = response.data.items;\r\n    // totalPages.value = response.data.totalPages;\r\n\r\n    // 여기서는 예시(mock) 데이터\r\n    const mockData = [\r\n      {\r\n        date: '2024-08-01',\r\n        type: '식비',\r\n        reason: '야근',\r\n        amount: '100,000원',\r\n        receiptName: '영수증 예시',\r\n        receipt: 'https://kwon-beom-jun.github.io/centrally-system-page/img/receipt_example.jpg',\r\n        status: '반려',\r\n        rejectionReason: '미지원 항목으로 인한 반려',\r\n        people: [\r\n          { department: 'SI사업본부', team: '프레임워크', name: '권범준', position: '책임' },\r\n          { department: 'SI사업본부', team: '프레임워크', name: '홍길동', position: '선임' },\r\n        ],\r\n      },\r\n      {\r\n        date: '2024-08-02',\r\n        type: '식비',\r\n        reason: '야근',\r\n        amount: '110,000원',\r\n        receiptName: '영수증 예시',\r\n        receipt: 'https://kwon-beom-jun.github.io/centrally-system-page/img/receipt_example.jpg',\r\n        status: '신청중',\r\n        rejectionReason: '',\r\n        people: [\r\n          { department: 'SI사업본부', team: '프레임워크', name: '권범준', position: '책임' },\r\n          { department: 'SI사업본부', team: '프레임워크', name: '홍길동', position: '선임' },\r\n          { department: 'SI사업본부', team: '프레임워크', name: '심청이', position: '선임' },\r\n        ],\r\n      },\r\n      // 필요 시 더미 데이터 더 추가...\r\n    ];\r\n\r\n    data.value = mockData;\r\n    totalPages.value = 3; // 예시로 총 3페이지\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\n// 페이지 전환 (DefaultPagination → @pageChange)\r\nfunction onPageChange(newPage) {\r\n  currentPage.value = newPage;\r\n  fetchDataFromServer(newPage);\r\n}\r\n\r\n// =====================\r\n// 5) 기타 로직\r\n// =====================\r\n// 금액/인원수 계산\r\nfunction calculateAmountPerPerson(item) {\r\n  const amount = parseInt(item.amount.replace(/[^0-9]/g, ''), 10) || 0;\r\n  const peopleCount = item.people?.length || 0;\r\n  return peopleCount > 0\r\n    ? Math.floor(amount / peopleCount).toLocaleString() + ' 원'\r\n    : 'N/A';\r\n}\r\n\r\n// 결제 상황별 CSS 클래스\r\nfunction getStatusClass(status) {\r\n  if (status === '신청중') return 'status-pending';\r\n  if (status === '승인')   return 'status-approved';\r\n  if (status === '반려')   return 'status-rejected';\r\n  return '';\r\n}\r\n\r\n// 모바일 인원 목록 토글\r\nconst visiblePeopleLists = ref({});\r\nfunction togglePeopleList(item) {\r\n  if (visiblePeopleLists.value[item.date]) {\r\n    delete visiblePeopleLists.value[item.date];\r\n  } else {\r\n    visiblePeopleLists.value[item.date] = true;\r\n  }\r\n}\r\nfunction showPeopleList(item) {\r\n  return visiblePeopleLists.value[item.date];\r\n}\r\n\r\n// 사이드바\r\nfunction openSidebar(item) {\r\n  if (!isMobile.value) {\r\n    selectedItem.value = item;\r\n    sidebarVisible.value = true;\r\n  }\r\n}\r\nfunction closeSidebar() {\r\n  sidebarVisible.value = false;\r\n}\r\n\r\n// 뒤로가기\r\nconst router = useRouter();\r\nfunction goBack() {\r\n  router.back();\r\n}\r\n\r\n// =====================\r\n// 6) onMounted\r\n// =====================\r\nonMounted(() => {\r\n  fetchDataFromServer(currentPage.value);\r\n  window.addEventListener('resize', updateIsMobile);\r\n  updateIsMobile();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.content {\r\n  transition: margin-right 0.3s ease;\r\n}\r\n.content-expanded {\r\n  margin-right: 300px;\r\n}\r\n.content-sub-title {\r\n  margin-bottom: 0px !important;\r\n}\r\n.btn-back {\r\n  margin-bottom: 60px !important;\r\n}\r\n\r\n/* 반응형 카드 레이아웃 */\r\n.card-layout {\r\n  margin-top: 40px;\r\n}\r\n\r\n/* 사이드바 */\r\n.sidebar-wrapper {\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  width: 300px;\r\n  height: 100%;\r\n  transform: translateX(100%);\r\n  transition: transform 0.3s ease;\r\n  z-index: 1000;\r\n}\r\n.sidebar-visible {\r\n  transform: translateX(0);\r\n}\r\n.sidebar {\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #f9f9f9;\r\n  border-left: 1px solid #ddd;\r\n  padding: 20px;\r\n  box-shadow: -2px 0 5px rgba(0, 0, 0, 0.1);\r\n  overflow-y: auto;\r\n}\r\n\r\n/* 상태별 색상 */\r\n.status-approved {\r\n  color: green;\r\n  font-weight: bold;\r\n}\r\n.status-pending {\r\n  color: blue;\r\n  font-weight: bold;\r\n}\r\n.status-rejected {\r\n  color: red;\r\n  font-weight: bold;\r\n}\r\n\r\n/* 인원 목록 */\r\n.people-list {\r\n  font-size: 0.7rem;\r\n  max-height: 150px;\r\n  overflow-y: auto;\r\n  margin-top: 10px;\r\n  border-top: 1px solid #ddd;\r\n  padding-top: 10px;\r\n}\r\n.people-list-header {\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n}\r\n.people-list-item {\r\n  padding: 1px 0;\r\n  margin: 0;\r\n  margin-left: 10px;\r\n}\r\n\r\n/* 이미지 미리보기 모달 */\r\n.preview-modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0,0,0,0.7);\r\n  z-index: 9999;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.preview-modal-content {\r\n  position: relative;\r\n}\r\n.preview-modal-image {\r\n  max-width: 80vw;\r\n  max-height: 80vh;\r\n  transition: transform 0.2s ease;\r\n}\r\n.zoomed {\r\n  cursor: move; /* 확대된 상태에서는 드래그 가능 */\r\n}\r\n</style>\r\n","import script from \"./ReceiptSearchDetail.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ReceiptSearchDetail.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ReceiptSearchDetail.vue?vue&type=style&index=0&id=6ad5e8f7&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6ad5e8f7\"]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <!-- 메인 콘텐츠 영역 -->\r\n    <div class=\"content\" :class=\"{ 'content-expanded': sidebarVisible && !isMobile }\">\r\n      <h2 class=\"content-title\">권범준님 영수증 신청내역</h2>\r\n      <div class=\"content-sub-title\">\r\n        <p>날짜: [{{ filteredStartDate }} ~ {{ filteredEndDate }}]</p>\r\n      </div>\r\n      \r\n      <!-- 뒤로가기 버튼 -->\r\n      <DefaultButton \r\n        size=\"small\" \r\n        align=\"left\"\r\n        color=\"gray\"\r\n        @click=\"goBack\">\r\n        뒤로가기\r\n      </DefaultButton>\r\n\r\n      <div class=\"d-flex align-items-center content-body-header\">\r\n        <span class=\"mr-2 all-click\">전체 승인</span>\r\n        <!-- <input \r\n          type=\"radio\" \r\n          name=\"approveAll\" \r\n          id=\"approveAll\" \r\n          @change=\"toggleApproveAll\" \r\n          v-model=\"selectAllDecision\"\r\n          value=\"approve\" \r\n          class=\"mr-4\" \r\n        /> -->\r\n        <DefaultTextfield\r\n          type=\"radio\"\r\n          name=\"approveAll\" \r\n          id=\"approveAll\"\r\n          @change=\"toggleApproveAll\" \r\n          v-model=\"selectAllDecision\"\r\n          value=\"approve\" \r\n          size=\"small\"\r\n        />\r\n        <span class=\"mr-2 all-click\">전체 반려</span>\r\n        <!-- <input \r\n          type=\"radio\" \r\n          name=\"rejectAll\" \r\n          id=\"rejectAll\" \r\n          @change=\"toggleRejectAll\" \r\n          v-model=\"selectAllDecision\"\r\n          value=\"reject\" \r\n        /> -->\r\n        <DefaultTextfield\r\n          type=\"radio\"\r\n          name=\"rejectAll\" \r\n          id=\"rejectAll\"\r\n          @change=\"toggleRejectAll\" \r\n          v-model=\"selectAllDecision\"\r\n          value=\"reject\" \r\n          size=\"small\"\r\n        />\r\n      </div>\r\n      <hr />\r\n\r\n      <!-- 테이블 보기 (큰 화면에서만 보임) -->\r\n      <table class=\"table mt-3\" id=\"dataTable\" v-if=\"!isMobile\">\r\n        <thead>\r\n          <tr>\r\n            <th>발생일</th>\r\n            <th>인원</th>\r\n            <th>구분</th>\r\n            <th>사유</th>\r\n            <th>금액</th>\r\n            <th>영수증 사진</th>\r\n            <th>승인</th>\r\n            <th>반려</th>\r\n            <th>반려사유</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            v-for=\"(item, index) in data\"\r\n            :key=\"index\"\r\n            @click=\"openSidebar(item)\"\r\n          >\r\n            <td>{{ item.date }}</td>\r\n            <td>{{ item.people.length }}</td>\r\n            <td>{{ item.type }}</td>\r\n            <td>{{ item.reason }}</td>\r\n            <td>{{ formatAmount(item.amount) }}원</td>\r\n            <td>\r\n              <a\r\n                href=\"#\"\r\n                @click.prevent=\"openPreviewModal(item.receipt)\"\r\n                class=\"text-primary\"\r\n              >\r\n                {{ item.receiptName }}\r\n              </a>\r\n            </td>\r\n            <td>\r\n              <input\r\n                type=\"radio\"\r\n                :name=\"'decision' + index\"\r\n                class=\"approveRadio\"\r\n                v-model=\"item.decision\"\r\n                value=\"approve\"\r\n                @change=\"updateDecision()\"\r\n              />\r\n            </td>\r\n            <td>\r\n              <input\r\n                type=\"radio\"\r\n                :name=\"'decision' + index\"\r\n                class=\"rejectRadio\"\r\n                v-model=\"item.decision\"\r\n                value=\"reject\"\r\n                @change=\"updateDecision()\"\r\n              />\r\n            </td>\r\n            <td>\r\n              <!-- <input\r\n                type=\"text\"\r\n                class=\"form-control rejectReason\"\r\n                v-model=\"item.rejectReason\"\r\n              /> -->\r\n              <DefaultTextfield\r\n                size=\"full\"\r\n                v-model=\"item.rejectReason\"\r\n              />\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <!-- 카드 레이아웃 보기 (작은 화면에서만 보임) -->\r\n      <div class=\"card-layout\" v-if=\"isMobile\">\r\n        <div\r\n          class=\"card\"\r\n          v-for=\"(item, index) in data\"\r\n          :key=\"index\"\r\n        >\r\n          <div class=\"card-header\">\r\n            <p class=\"card-title\">{{ item.date }}</p>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <p class=\"card-text\">\r\n              <strong>인원 : </strong>\r\n              <span @click=\"togglePeopleList(item)\" style=\"cursor: pointer;\">\r\n                {{ item.people.length }}명\r\n              </span>\r\n            </p>\r\n            <div v-if=\"showPeopleList(item)\">\r\n              <div class=\"people-list\">\r\n                <div class=\"people-list-header\">명단</div>\r\n                <p\r\n                  v-for=\"person in item.people\"\r\n                  :key=\"person.name\"\r\n                  class=\"people-list-item\"\r\n                >\r\n                  {{ person.name }} ({{ person.department }} - {{ person.team }})\r\n                </p>\r\n              </div>\r\n              <hr />\r\n            </div>\r\n            <p class=\"card-text\">\r\n              <strong>구분/사유 : </strong>\r\n              {{ item.type }} / {{ item.reason }}\r\n            </p>\r\n            <p class=\"card-text\">\r\n              <strong>금액 : </strong>\r\n              {{ formatAmount(item.amount) }}\r\n            </p>\r\n            <p class=\"card-text\">\r\n              <strong>금액/인원수 : </strong>\r\n              {{ calculateAmountPerPerson(item) }}\r\n            </p>\r\n            <p>\r\n              <strong class=\"card-text\">영수증 사진 : </strong>\r\n              <a\r\n                @click.prevent=\"openPreviewModal(item.receipt)\"\r\n                style=\"cursor: pointer; color: blue;\"\r\n              >\r\n                {{ item.receiptName }}\r\n              </a>\r\n            </p>\r\n            <p class=\"card-text\">\r\n              <strong>결정: </strong>\r\n              승인\r\n              <input\r\n                type=\"radio\"\r\n                :name=\"'decision' + index\"\r\n                class=\"approveRadio\"\r\n                v-model=\"item.decision\"\r\n                value=\"approve\"\r\n                @change=\"updateDecision()\"\r\n              />\r\n              | 반려\r\n              <input\r\n                type=\"radio\"\r\n                :name=\"'decision' + index\"\r\n                class=\"rejectRadio\"\r\n                v-model=\"item.decision\"\r\n                value=\"reject\"\r\n                @change=\"updateDecision()\"\r\n              />\r\n              <br>\r\n            </p>\r\n            <p class=\"card-text d-flex align-items-center\">\r\n              <strong>반려사유: </strong>\r\n              <input\r\n                type=\"text\"\r\n                class=\"form-control rejectReason ml-2\"\r\n                v-model=\"item.rejectReason\"\r\n                style=\"flex: 1;\"\r\n              />\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 저장 버튼 -->\r\n      <DefaultButton align=\"right\" @click=\"save\">\r\n        저장\r\n      </DefaultButton>\r\n\r\n      <!-- 페이지네이션 (공통 컴포넌트) -->\r\n      <DefaultPagination\r\n        :currentPage=\"currentPage\"\r\n        :totalPages=\"totalPages\"\r\n        :visiblePageCount=\"visiblePageCount\"\r\n        @pageChange=\"onPageChange\"\r\n      />\r\n\r\n      <!-- 사이드바 추가 -->\r\n      <div :class=\"['sidebar-wrapper', { 'sidebar-visible': sidebarVisible }]\">\r\n        <ReceiptSidebar \r\n          v-if=\"!isMobile\" \r\n          :item=\"selectedItem\" \r\n          :visible=\"sidebarVisible\" \r\n          @close=\"closeSidebar\"\r\n          @preview-image=\"openPreviewModal\"\r\n        />\r\n      </div>\r\n      \r\n      <!-- 이미지 미리보기 모달 -->\r\n      <div\r\n        v-if=\"isPreviewVisible\"\r\n        class=\"modal preview-modal\"\r\n        @click=\"closePreviewModalOnOutsideClick\"\r\n      >\r\n        <div\r\n          class=\"preview-modal-content\"\r\n          @mousedown=\"startDrag\"\r\n          @mousemove=\"onDrag\"\r\n          @mouseup=\"endDrag\"\r\n          @mouseleave=\"endDrag\"\r\n          @touchstart=\"startDrag\"\r\n          @touchmove=\"onDrag\"\r\n          @touchend=\"endDrag\"\r\n        >\r\n          <img\r\n            :src=\"previewImage\"\r\n            :class=\"{ zoomed: isZoomed }\"\r\n            class=\"preview-modal-image\"\r\n            :style=\"{\r\n              transform: isZoomed\r\n                ? `translate(${zoomedPosition.x}px, ${zoomedPosition.y}px) scale(1.5)`\r\n                : 'none',\r\n              transformOrigin: `${zoomOrigin.x}px ${zoomOrigin.y}px`\r\n            }\"\r\n            @dblclick=\"toggleZoom\"\r\n            @touchstart=\"toggleZoom\"\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport { useRouter } from 'vue-router';\r\nimport ReceiptSidebar from './ReceiptSidebar.vue';\r\nimport DefaultButton from '@/components/common/button/DefaultButton.vue';\r\nimport DefaultPagination from '@/components/common/pagination/DefaultPagination.vue';\r\nimport DefaultTextfield from '@/components/common/textfield/DefaultTextfield.vue';\r\n// import axios from 'axios'; // 실제 백엔드 호출 시\r\n\r\nimport { usePreviewModal } from '@/utils/preview-modal';\r\nconst {\r\n  isPreviewVisible,\r\n  previewImage,\r\n  isZoomed,\r\n  zoomedPosition,\r\n  zoomOrigin,\r\n  openPreviewModal,\r\n  toggleZoom,\r\n  startDrag,\r\n  onDrag,\r\n  endDrag\r\n} = usePreviewModal();\r\n\r\n// 사이드바 / 반응형\r\nconst selectedItem = ref(null);\r\nconst sidebarVisible = ref(false);\r\nconst isMobile = ref(window.innerWidth <= 1400);\r\nfunction updateIsMobile() {\r\n  isMobile.value = window.innerWidth <= 1400;\r\n}\r\n\r\n// 날짜 표시 (필터 기간)\r\nconst filteredStartDate = ref('2024-01');\r\nconst filteredEndDate = ref('2024-03');\r\n\r\n// 뒤로가기\r\nconst router = useRouter();\r\nfunction goBack() {\r\n  router.back();\r\n}\r\n\r\n// 실제 서버에서 받아올 데이터\r\nconst data = ref([]);\r\n\r\n// 페이지네이션\r\nconst currentPage = ref(1);\r\nconst totalPages = ref(1);\r\nconst visiblePageCount = ref(5);  // 페이지네이션에서 보여줄 최대 페이지 버튼 수\r\n\r\n/**\r\n * 서버에서 데이터 가져오기\r\n * - 실제로는 axios 호출 + 필요한 파라미터(page 등) 전송\r\n * - 응답 받은 data와 totalPages를 세팅\r\n */\r\n// async function fetchDataFromServer(page = 1) {\r\nasync function fetchDataFromServer() {\r\n  try {\r\n    // const response = await axios.get('/api/some-endpoint', {\r\n    //   params: { page },\r\n    // });\r\n    // data.value = response.data.items;\r\n    // totalPages.value = response.data.totalPages;\r\n\r\n    // 여기서는 예시(mockData)\r\n    const mockData = [\r\n      {\r\n        date: '2024-08-01',\r\n        type: '식비',\r\n        reason: '야근',\r\n        amount: '100,000',\r\n        receiptName: '영수증 예시',\r\n        receipt: 'https://kwon-beom-jun.github.io/centrally-system-page/img/receipt_example.jpg',\r\n        rejectionReason: '',\r\n        people: [\r\n          { department: 'SI사업본부', team: '프레임워크', name: '권범준', position: '책임' },\r\n          { department: 'SI사업본부', team: '프레임워크', name: '홍길동', position: '선임' },\r\n        ],\r\n      },\r\n      {\r\n        date: '2024-08-02',\r\n        type: '식비',\r\n        reason: '야근',\r\n        amount: '110,000',\r\n        receiptName: '영수증 예시',\r\n        receipt: 'https://kwon-beom-jun.github.io/centrally-system-page/img/receipt_example.jpg',\r\n        rejectionReason: '',\r\n        people: [\r\n          { department: 'SI사업본부', team: '프레임워크', name: '권범준', position: '책임' },\r\n          { department: 'SI사업본부', team: '프레임워크', name: '홍길동', position: '선임' },\r\n        ],\r\n      },\r\n      // ... 원하는 만큼\r\n    ];\r\n    // mock 응답 처리\r\n    data.value = mockData.map(item => ({\r\n      ...item,\r\n      decision: '', // 승인/반려 라디오 기본값\r\n    }));\r\n\r\n    totalPages.value = 3; // 예시로 총 3페이지 있다고 가정\r\n  } catch (err) {\r\n    console.error(err);\r\n  }\r\n}\r\n\r\n/**\r\n * 페이지 변경 시(페이지네이션 컴포넌트로부터 이벤트)\r\n * - 백엔드 재요청\r\n */\r\nfunction onPageChange(newPage) {\r\n  currentPage.value = newPage;\r\n  fetchDataFromServer(newPage);\r\n}\r\n\r\n// 저장 버튼 클릭\r\nfunction save() {\r\n  console.log('Data saved:', data.value);\r\n  // 서버로 data.value 전송하는 로직 추가 가능\r\n}\r\n\r\n// --------------------------------------------------------------------------------------\r\n// 승인/반려 (전체 선택 or 개별 선택) 로직\r\n// --------------------------------------------------------------------------------------\r\nconst selectAllDecision = ref(''); // 전체 승인/반려 라디오\r\nfunction toggleApproveAll() {\r\n  if (selectAllDecision.value === 'approve') {\r\n    data.value.forEach(item => { item.decision = 'approve'; });\r\n  } else {\r\n    data.value.forEach(item => { item.decision = ''; });\r\n  }\r\n}\r\nfunction toggleRejectAll() {\r\n  if (selectAllDecision.value === 'reject') {\r\n    data.value.forEach(item => { item.decision = 'reject'; });\r\n  } else {\r\n    data.value.forEach(item => { item.decision = ''; });\r\n  }\r\n}\r\nfunction updateDecision() {\r\n  const allApproved = data.value.length > 0 && data.value.every(item => item.decision === 'approve');\r\n  const allRejected = data.value.length > 0 && data.value.every(item => item.decision === 'reject');\r\n\r\n  if (allApproved) {\r\n    selectAllDecision.value = 'approve';\r\n  } else if (allRejected) {\r\n    selectAllDecision.value = 'reject';\r\n  } else {\r\n    selectAllDecision.value = '';\r\n  }\r\n}\r\n\r\n// --------------------------------------------------------------------------------------\r\n// 기타 로직\r\n// --------------------------------------------------------------------------------------\r\nfunction openSidebar(item) {\r\n  if (!isMobile.value) {\r\n    selectedItem.value = item;\r\n    sidebarVisible.value = true;\r\n  }\r\n}\r\nfunction closeSidebar() {\r\n  sidebarVisible.value = false;\r\n}\r\nfunction closePreviewModalOnOutsideClick(event) {\r\n  if (!event.target.classList.contains('preview-modal-image')) {\r\n    isPreviewVisible.value = false;\r\n  }\r\n}\r\n\r\n// 금액 포맷팅\r\nfunction formatAmount(amountStr) {\r\n  const amount = parseInt(amountStr.replace(/[^0-9]/g, ''), 10) || 0;\r\n  return amount.toLocaleString();\r\n}\r\n\r\n// 인원수별 나눠기\r\nfunction calculateAmountPerPerson(item) {\r\n  const amountNum = parseInt(item.amount.replace(/[^0-9]/g, ''), 10);\r\n  const peopleCount = item.people.length || 0;\r\n  return peopleCount > 0\r\n    ? Math.floor(amountNum / peopleCount).toLocaleString() + ' 원'\r\n    : 'N/A';\r\n}\r\n\r\n// 모바일에서 인원 목록 토글\r\nconst visiblePeopleLists = ref({});\r\nfunction togglePeopleList(item) {\r\n  if (visiblePeopleLists.value[item.date]) {\r\n    delete visiblePeopleLists.value[item.date];\r\n  } else {\r\n    visiblePeopleLists.value[item.date] = true;\r\n  }\r\n}\r\nfunction showPeopleList(item) {\r\n  return visiblePeopleLists.value[item.date];\r\n}\r\n\r\n// --------------------------------------------------------------------------------------\r\n// 초기화\r\n// --------------------------------------------------------------------------------------\r\nonMounted(() => {\r\n  // 첫 페이지 데이터 불러오기\r\n  fetchDataFromServer(currentPage.value);\r\n\r\n  // 반응형 체크\r\n  window.addEventListener('resize', updateIsMobile);\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n#dataTable tbody tr:hover td {\r\n  background-color: #e7f1ff !important;\r\n}\r\n\r\n.content {\r\n  transition: margin-right 0.3s ease;\r\n}\r\n\r\n.content-sub-title {\r\n  margin-bottom: 0px !important;\r\n}\r\n\r\n.content-expanded {\r\n  margin-right: 300px;\r\n}\r\n\r\n.content-body-header {\r\n  margin-top: 60px;\r\n}\r\n\r\n.text-primary {\r\n  color: #c7573e;\r\n  /* 원하는 하이퍼링크 색상으로 변경 */\r\n  text-decoration: none;\r\n  /* 하이퍼링크 밑줄 제거 */\r\n}\r\n\r\n/* 사이드바 */\r\n.sidebar-wrapper {\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  width: 300px;\r\n  height: 100%;\r\n  transform: translateX(100%);\r\n  transition: transform 0.3s ease;\r\n  z-index: 1000;\r\n}\r\n\r\n/* 사이드바가 보일 때 적용되는 클래스 */\r\n.sidebar-visible {\r\n  transform: translateX(0);\r\n  /* 화면 안으로 슬라이드 */\r\n}\r\n\r\n/* 사이드바 내용물 스타일 유지 */\r\n.sidebar {\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #f9f9f9;\r\n  border-left: 1px solid #ddd;\r\n  padding: 20px;\r\n  box-shadow: -2px 0 5px rgba(0, 0, 0, 0.1);\r\n  overflow-y: auto;\r\n}\r\n\r\n/* 전체 승인/반려 */\r\n.all-click {\r\n  font-weight: bold;\r\n  margin-left: 10px;\r\n}\r\n\r\n/* 카드 레이아웃 인원 목록 스타일 추가 */\r\n.people-list {\r\n  font-size: 0.7rem;\r\n  max-height: 150px;\r\n  overflow-y: auto;\r\n  margin-top: 10px;\r\n  border-top: 1px solid #ddd;\r\n  padding-top: 10px;\r\n}\r\n.people-list-header {\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n}\r\n.people-list-item {\r\n  padding: 1px 0;\r\n  margin: 0;\r\n  margin-left: 10px;\r\n}\r\n\r\n/* 이미지 미리보기 모달 */\r\n.preview-modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0,0,0,0.7);\r\n  z-index: 9999;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.preview-modal-content {\r\n  position: relative;\r\n}\r\n.preview-modal-image {\r\n  max-width: 80vw;\r\n  max-height: 80vh;\r\n  transition: transform 0.2s ease;\r\n}\r\n\r\n@media (max-width: 1400px) {\r\n  .page-link {\r\n    font-size: 0.75rem;\r\n    padding: 0.3rem 0.6rem;\r\n  }\r\n\r\n  .page-item {\r\n    font-size: 0.75rem;\r\n  }\r\n\r\n  .pagination {\r\n    margin: 3px 0 60px 0;\r\n  }\r\n}\r\n\r\n@media (max-width: 1200px) {\r\n  .bnt-back {\r\n    margin-bottom: 40px;\r\n  }\r\n\r\n  .rejectReason {\r\n    width: 100%;\r\n  }\r\n}\r\n</style>\r\n","import script from \"./ReceiptPersonalRequestDetails.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ReceiptPersonalRequestDetails.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ReceiptPersonalRequestDetails.vue?vue&type=style&index=0&id=7c8f63cb&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7c8f63cb\"]])\n\nexport default __exports__","<template>\r\n  <!-- <div\r\n      v-if=\"isVisible\"\r\n      class=\"modal fade\" \r\n      id=\"receiptModal\" \r\n      tabindex=\"-1\" \r\n      role=\"dialog\" \r\n      aria-labelledby=\"receiptModalLabel\" \r\n      aria-hidden=\"true\"\r\n      :class=\"{ show: isVisible }\"\r\n      :style=\"{ display: isVisible ? 'block' : 'none' }\"\r\n    > -->\r\n  <div class=\"modal fade\" id=\"receiptModal\" tabindex=\"-1\" role=\"dialog\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"receiptModalLabel\">영수증 등록</h5>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <form @submit.prevent=\"openConfirmationModal\">\r\n\r\n            <!-- 이미지 등록 -->\r\n            <div class=\"form-group\">\r\n              <label for=\"receiptImage\">영수증 사진</label>\r\n              <div class=\"mt-2\">\r\n                <input type=\"file\" class=\"form-control-file\" id=\"receiptImage\" @change=\"handleFileChange\" />\r\n              </div>\r\n            </div>\r\n\r\n            <!-- 영수증 발행일 -->\r\n            <div class=\"form-group\">\r\n              <label for=\"date\">영수증 발행일</label>\r\n              <input type=\"date\" class=\"form-control\" id=\"date\" v-model=\"formData.date\" />\r\n            </div>\r\n\r\n            <!-- 구분 | 금액 -->\r\n            <div class=\"form-row align-items-center\">\r\n              <div class=\"form-group col\">\r\n                <label for=\"type\">구분</label>\r\n                <select class=\"form-control\" id=\"type\" v-model=\"formData.type\">\r\n                  <option>식비</option>\r\n                  <option>교통비</option>\r\n                  <option>회식</option>\r\n                  <option>기타</option>\r\n                </select>\r\n              </div>\r\n              <div class=\"form-group col\">\r\n                <label for=\"amount\">금액</label>\r\n                <div class=\"input-group\">\r\n                  <input type=\"text\" class=\"form-control\" id=\"amount\" placeholder=\"내용을 입력해주세요\" v-model=\"formData.amount\" />\r\n                  <div class=\"input-group-append\">\r\n                    <span class=\"input-group-text\">원</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- 사용자 검색 필드 -->\r\n            <div class=\"form-group\">\r\n              <label for=\"userSearch\">사용자 검색 <p style=\"font-size: 0.8rem; color: red;\">테스트 '권범','홍길동','이영희'</p>\r\n              </label>\r\n              <input type=\"text\" class=\"form-control\" id=\"userSearch\" placeholder=\"사용자 이름 검색\" v-model=\"userSearch\"\r\n                @input=\"searchUsers\" @keydown.enter.prevent />\r\n              <!-- 검색 결과 목록 -->\r\n              <ul v-if=\"searchResults.length > 0\" class=\"list-group mt-2\">\r\n                <li v-for=\"(user, index) in searchResults\" :key=\"index\" class=\"list-group-item\"\r\n                  @click=\"selectUser(user)\">\r\n                  {{ user.name }} ({{ user.department }} - {{ user.team }} - {{ user.position }})\r\n                </li>\r\n              </ul>\r\n            </div>\r\n\r\n            <!-- 추가된 인원 목록 -->\r\n            <div v-if=\"formData.people.length > 0\" class=\"mt-3 form-group\">\r\n              <label>추가된 인원 목록</label>\r\n              <ul class=\"list-group\">\r\n                <li v-for=\"(person, index) in formData.people\" :key=\"index\" class=\"list-group-item\">\r\n                  {{ person.name }} - {{ person.department }} - {{ person.team }} - {{ person.position }}\r\n                </li>\r\n                <!--\r\n                \r\n                \r\n                  추가인원 삭제 버튼 필요\r\n\r\n\r\n                -->\r\n              </ul>\r\n            </div>\r\n\r\n\r\n            <!-- 사유 -->\r\n            <div class=\"form-group reason\">\r\n              <label for=\"reason\">사유</label>\r\n              <input type=\"text\" class=\"form-control\" id=\"reason\" placeholder=\"내용을 입력해주세요\" v-model=\"formData.reason\" />\r\n            </div>\r\n\r\n\r\n            <div class=\"modal-footer\">\r\n              <button type=\"button\" class=\"btn btn-secondary\" @click=\"$emit('close')\">취소</button>\r\n              <button type=\"submit\" class=\"btn btn-primary\">등록</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <AlertModal \r\n      :isVisible=\"confirmationModalVisible\" \r\n      :disableBackgroundClose=\"true\"\r\n      title=\"저장 확인\" \r\n      confirmText=\"확인\" \r\n      cancelText=\"취소\"\r\n      @close=\"confirmationModalVisible = false\" \r\n      @confirm=\"submitReceipt\">\r\n      <template #body>\r\n        <p>등록하시겠습니까?</p>\r\n      </template>\r\n    </AlertModal>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, defineProps } from 'vue';\r\nimport AlertModal from '@/components/common/modal/AlertModal.vue';\r\n// import * as bootstrap from 'bootstrap';\r\n\r\ndefineProps({\r\n  isVisible: Boolean\r\n});\r\n\r\nconst formData = ref({\r\n  receiptImage: null,\r\n  date: '',\r\n  type: '식비',\r\n  amount: '',\r\n  reason: '',\r\n  people: []\r\n});\r\n\r\nconst userSearch = ref('');\r\nconst searchResults = ref([]);\r\n\r\nconst handleFileChange = (event) => {\r\n  formData.value.receiptImage = event.target.files[0];\r\n};\r\n\r\n// const removePerson = (index) => {\r\n//   formData.value.people.splice(index, 1);\r\n// };\r\n\r\n// 사용자 검색 함수\r\nconst searchUsers = async () => {\r\n  if (userSearch.value.length < 2) {\r\n    searchResults.value = [];\r\n    return;\r\n  }\r\n\r\n  // try {\r\n  //   const response = await axios.get('/api/users', {\r\n  //     params: { query: userSearch.value }\r\n  //   });\r\n  //   searchResults.value = response.data;\r\n  // } catch (error) {\r\n  //   console.error('사용자 검색 오류:', error);\r\n  // }\r\n\r\n  // ---------------------------------------- 예시 데이터 ----------------------------------------\r\n  // 예시 데이터 사용\r\n  const exampleUsers = [\r\n    { name: '권범준', department: 'SI사업본부', team: '프레임워크', position: '책임' },\r\n    { name: '권범선', department: 'SI사업본부', team: '프레임워크', position: '책임' },\r\n    { name: '권범이', department: 'SI사업본부', team: '프레임워크', position: '책임' },\r\n    { name: '권범삼', department: 'SI사업본부', team: '프레임워크', position: '책임' },\r\n    { name: '홍길동', department: 'SI사업본부', team: '프레임워크', position: '선임' },\r\n    { name: '이영희', department: 'SI사업본부', team: '프레임워크', position: '사원' }\r\n  ];\r\n  // 검색어에 맞는 예시 데이터를 필터링\r\n  searchResults.value = exampleUsers.filter(user =>\r\n    user.name.includes(userSearch.value)\r\n  );\r\n  // --------------------------------------------------------------------------------------------\r\n\r\n};\r\n\r\nconst selectUser = (user) => {\r\n  /* \r\n  \r\n    ※ 추가 인원 중복 체크가 있어야함 ※\r\n\r\n  */\r\n  formData.value.people.push(user);\r\n  userSearch.value = '';\r\n  searchResults.value = [];\r\n};\r\n\r\nconst confirmationModalVisible = ref(false);\r\n\r\nconst openConfirmationModal = () => {\r\n  confirmationModalVisible.value = true;\r\n};\r\n\r\nconst submitReceipt = () => {\r\n  console.log('Receipt Submitted:', formData.value);\r\n  \r\n  // 예시로 axios 요청 추가\r\n  // axios.post('/api/submit-receipt', formData.value)\r\n  //   .then(response => {\r\n  //     console.log(response.data);\r\n  //     // 추가 성공 시 알림 등 처리\r\n  //   })\r\n  //   .catch(error => {\r\n  //     console.error('Error submitting receipt:', error);\r\n  //   });\r\n\r\n  // 제출 후 초기화\r\n  formData.value = {\r\n    receiptImage: null,\r\n    date: '',\r\n    type: '식비',\r\n    amount: '',\r\n    reason: '',\r\n    people: []\r\n  };\r\n  userSearch.value = '';\r\n  confirmationModalVisible.value = false; // 모달 닫기\r\n  emit('close'); // 부모 컴포넌트 알림\r\n};\r\n\r\nconst emit = defineEmits(['close', 'confirm']);\r\n\r\n// const openModal = () => {\r\n//   // formData, userSearch, searchResults 초기화\r\n//   formData.value = {\r\n//     receiptImage: null,\r\n//     date: '',\r\n//     type: '식비',\r\n//     amount: '',\r\n//     reason: '',\r\n//     people: []\r\n//   };\r\n//   userSearch.value = '';  // 사용자 검색 입력 초기화\r\n//   searchResults.value = [];  // 사용자 검색 결과 초기화\r\n\r\n//   // 파일 입력 필드 초기화\r\n//   const fileInput = document.getElementById('receiptImage');\r\n//   if (fileInput) {\r\n//     fileInput.value = '';  // 파일 입력 필드 값 초기화\r\n//   }\r\n\r\n//   const modal = document.getElementById('receiptModal');\r\n//   if (!modalInstance.value) {\r\n//     modalInstance.value = new bootstrap.Modal(modal, {\r\n//       backdrop: 'static', // 배경 클릭 시 모달이 닫히지 않도록 설정\r\n//       keyboard: false, // ESC 키로 모달이 닫히지 않도록 설정\r\n//     });\r\n//   }\r\n//   modalInstance.value.show();\r\n// };\r\n</script>\r\n\r\n<style scoped>\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 1.5rem;\r\n}\r\n\r\n.reason {\r\n  margin-top: 10px;\r\n}\r\n\r\n.form-group {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.form-row {\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n\r\n.list-group-item {\r\n  font-size: 0.7rem;\r\n}\r\n\r\n@media (max-width: 1200px) {\r\n  .form-group {\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  .form-group .mt-2 {\r\n    margin: 0 !important;\r\n  }\r\n\r\n  .form-group label {\r\n    font-size: 0.9rem;\r\n  }\r\n}\r\n</style>","import script from \"./ReceiptSubmissionCreateModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ReceiptSubmissionCreateModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ReceiptSubmissionCreateModal.vue?vue&type=style&index=0&id=69132924&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-69132924\"]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <!-- 메인 콘텐츠 영역 -->\r\n    <div class=\"content\" :class=\"{ 'content-expanded': sidebarVisible && !isMobile }\">\r\n      <h2 class=\"content-title\">영수증 등록</h2>\r\n      <p class=\"content-sub-title\">영수증 등록 페이지</p>\r\n\r\n      <div class=\"create-receipt\">\r\n        <DefaultButton \r\n          align=\"right\"\r\n          @click=\"openModal\">\r\n          영수증 등록\r\n        </DefaultButton>\r\n      </div>\r\n\r\n      <!-- 영수증 등록 모달 -->\r\n      <ReceiptSubmissionCreateModal @close=\"closeModal\" />\r\n\r\n      <!-- 테이블 보기 -->\r\n      <DefaultTable\r\n        :columns=\"columns\"\r\n        :data=\"data\"\r\n        :openSidebar=\"openSidebar\"\r\n        :showTable=\"!isMobile\"\r\n      />\r\n\r\n      <!-- 카드 레이아웃 (모바일에서만) -->\r\n      <div class=\"card-layout\" v-if=\"isMobile\">\r\n        <div class=\"card\" v-for=\"(item, idx) in data\" :key=\"idx\">\r\n          <div class=\"card-header\">\r\n            <p class=\"card-title\">{{ item.date }}</p>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <p class=\"card-text\"><strong>인원 : </strong>\r\n              <span @click=\"togglePeopleList(item)\" style=\"cursor: pointer;\">{{ item.people.length }}명</span>\r\n            </p>\r\n            <div v-if=\"showPeopleList(item)\">\r\n              <div class=\"people-list\">\r\n                <div class=\"people-list-header\">명단</div>\r\n                <p v-for=\"person in item.people\" :key=\"person.name\" class=\"people-list-item\">{{ person.name }} ({{\r\n                  person.department }} - {{ person.team }})</p>\r\n              </div>\r\n              <hr />\r\n            </div>\r\n            <p class=\"card-text\"><strong>구분/사유 : </strong> {{ item.type }} / {{ item.reason }}</p>\r\n            <p class=\"card-text\"><strong>금액 : </strong> {{ item.amount }}</p>\r\n            <p class=\"card-text\"><strong>금액/인원수 : </strong> {{ calculateAmountPerPerson(item) }}</p>\r\n            <p>\r\n              <strong class=\"card-text\">영수증 사진 : </strong>\r\n              <a class=\"card-text\"\r\n                @click.prevent=\"openPreviewModal(item.receipt)\"\r\n                style=\"cursor: pointer; color: blue;\"\r\n              >\r\n                {{ item.receiptName }}\r\n              </a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 페이지네이션 (공통 컴포넌트) -->\r\n      <DefaultPagination\r\n        :currentPage=\"currentPage\"\r\n        :totalPages=\"totalPages\"\r\n        :visiblePageCount=\"visiblePageCount\"\r\n        @pageChange=\"onPageChange\"\r\n      />\r\n    </div>\r\n\r\n    <!-- 사이드바 -->\r\n    <div :class=\"['sidebar-wrapper', { 'sidebar-visible': sidebarVisible }]\">\r\n      <ReceiptSidebar \r\n        v-if=\"!isMobile\" \r\n        :item=\"selectedItem\" \r\n        :visible=\"sidebarVisible\" \r\n        @close=\"closeSidebar\"\r\n        @preview-image=\"openPreviewModal\"\r\n      />\r\n    </div>\r\n\r\n    <!-- 이미지 미리보기 모달 -->\r\n    <div v-if=\"isPreviewVisible\" class=\"modal preview-modal\" @click=\"closePreviewModalOnOutsideClick\">\r\n      <div\r\n        class=\"preview-modal-content\"\r\n        @mousedown=\"startDrag\"\r\n        @mousemove=\"onDrag\"\r\n        @mouseup=\"endDrag\"\r\n        @mouseleave=\"endDrag\"\r\n        @touchstart=\"startDrag\"\r\n        @touchmove=\"onDrag\"\r\n        @touchend=\"endDrag\"\r\n      >\r\n        <img\r\n          :src=\"previewImage\"\r\n          :class=\"{ zoomed: isZoomed }\"\r\n          class=\"preview-modal-image\"\r\n          :style=\"{\r\n            transform: isZoomed\r\n              ? `translate(${zoomedPosition.x}px, ${zoomedPosition.y}px) scale(1.5)`\r\n              : 'none',\r\n            transformOrigin: `${zoomOrigin.x}px ${zoomOrigin.y}px`\r\n          }\"\r\n          @dblclick=\"toggleZoom\"\r\n          @touchstart=\"toggleZoom\"\r\n        />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport * as bootstrap from 'bootstrap';\r\nimport ReceiptSidebar from './ReceiptSidebar.vue';\r\nimport DefaultTable from '@/components/common/table/DefaultTable.vue';\r\nimport DefaultButton from '@/components/common/button/DefaultButton.vue';\r\nimport ReceiptSubmissionCreateModal from '@/components/receipt/ReceiptSubmissionCreateModal.vue';\r\nimport DefaultPagination from '@/components/common/pagination/DefaultPagination.vue';\r\n\r\nimport { usePreviewModal } from '@/utils/preview-modal';\r\n// import axios from 'axios'; // 실제 백엔드 호출 시 사용\r\n\r\nconst {\r\n  isPreviewVisible,\r\n  previewImage,\r\n  isZoomed,\r\n  zoomedPosition,\r\n  zoomOrigin,\r\n  openPreviewModal,\r\n  toggleZoom,\r\n  startDrag,\r\n  onDrag,\r\n  endDrag\r\n} = usePreviewModal();\r\n\r\n// 사이드바\r\nconst selectedItem = ref(null);\r\nconst sidebarVisible = ref(false);\r\n\r\n// 반응형 여부\r\nconst isMobile = ref(window.innerWidth <= 1200);\r\nconst updateIsMobile = () => {\r\n  isMobile.value = window.innerWidth <= 1200;\r\n};\r\n\r\n// 페이지네이션 관련 상태\r\nconst currentPage = ref(1);\r\nconst totalPages = ref(1); // 백엔드로부터 받아오는 총 페이지 수\r\nconst visiblePageCount = ref(5); // 페이지네이션에서 보여질 페이지 수\r\n\r\n// 실제 데이터\r\nconst data = ref([]); // 화면에 뿌릴 데이터 (백엔드에서 받아올 것)\r\nconst columns = [\r\n  { key: 'date', label: '발생일', width: 100  },\r\n  { key: 'type', label: '구분', width: 50  },\r\n  { key: 'peopleCount', label: '인원수', width: 60  },\r\n  { key: 'reason', label: '사유', width: 200  },\r\n  { key: 'amount', label: '금액', width: 60  },\r\n  { key: 'amountPerPerson', label: '금액/인원수', width: 100  }\r\n];\r\n\r\n/** \r\n * 페이지 변경 시 호출될 함수\r\n * - 백엔드에 page(또는 offset 등)를 보내서 해당 페이지 데이터를 받는다.\r\n * - 응답으로 현재 페이지 데이터와 totalPages(또는 totalItems)를 받으면 state 갱신\r\n */\r\nfunction onPageChange(newPage) {\r\n  currentPage.value = newPage;\r\n  fetchDataFromServer(newPage);\r\n}\r\n\r\n/**\r\n * 백엔드에서 데이터 가져오기 (예시)\r\n * - 실제로는 axios를 사용해서 서버에 page, itemsPerPage 등을 넘겨주고\r\n *   응답으로 받은 데이터/totalPages 등을 세팅.\r\n */\r\n// async function fetchDataFromServer(page = 1) {\r\nasync function fetchDataFromServer() {\r\n  try {\r\n    // 예시: axios.get('/api/receipts', { params: { page, itemsPerPage } })\r\n    // const response = await axios.get('/api/receipts', { params: { page, itemsPerPage } });\r\n    // data.value = response.data.items;\r\n    // totalPages.value = response.data.totalPages;\r\n\r\n    // 여기서는 예시 데이터를 생성\r\n    const mockData = [\r\n      {\r\n        date: '2024-08-01',\r\n        type: '식비',\r\n        reason: '야근',\r\n        amount: '100,000원',\r\n        receiptName: '영수증 예시',\r\n        receipt: 'https://kwon-beom-jun.github.io/centrally-system-page/img/receipt_example.jpg',\r\n        people: [\r\n          { department: 'SI사업본부', team: '프레임워크', name: '권범준', position: '책임' },\r\n          { department: 'SI사업본부', team: '프레임워크', name: '홍길동', position: '선임' }\r\n        ],\r\n      },\r\n      {\r\n        date: '2024-08-02',\r\n        type: '식비',\r\n        reason: '야근',\r\n        amount: '120,000원',\r\n        receiptName: '영수증 예시',\r\n        receipt: 'https://kwon-beom-jun.github.io/centrally-system-page/img/receipt_example.jpg',\r\n        people: [\r\n          { department: 'SI사업본부', team: '프레임워크', name: '권범준', position: '책임' },\r\n          { department: 'SI사업본부', team: '프레임워크', name: '홍길동', position: '선임' },\r\n          { department: 'SI사업본부', team: '프레임워크', name: '이석순', position: '선임' },\r\n        ],\r\n      },\r\n      {\r\n        date: '2024-08-02',\r\n        type: '식비',\r\n        reason: '야근',\r\n        amount: '120,000원',\r\n        receiptName: '영수증 예시',\r\n        receipt: 'https://kwon-beom-jun.github.io/centrally-system-page/img/receipt_example.jpg',\r\n        people: [\r\n          { department: 'SI사업본부', team: '프레임워크', name: '권범준', position: '책임' },\r\n          { department: 'SI사업본부', team: '프레임워크', name: '홍길동', position: '선임' },\r\n          { department: 'SI사업본부', team: '프레임워크', name: '이석순', position: '선임' },\r\n        ],\r\n      },\r\n      // ...\r\n    ];\r\n\r\n    // 실제로는 페이지 번호에 따라 다르게 받아오겠지만, 여기선 단순히 예시\r\n    data.value = mockData.map(item => ({\r\n      ...item,\r\n      peopleCount: item.people.length,\r\n      amountPerPerson: calculateAmountPerPerson(item)\r\n    }));\r\n\r\n    // 총 페이지 갯수 (추후 백엔드에서 받아와야함)\r\n    totalPages.value = 3;\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\n// 금액/인원수 계산 예시\r\nfunction calculateAmountPerPerson(item) {\r\n  const amount = parseInt(item.amount.replace(/[^0-9]/g, ''), 10);\r\n  const peopleCount = item.people.length;\r\n  return peopleCount > 0\r\n    ? Math.floor(amount / peopleCount).toLocaleString() + '원'\r\n    : 'N/A';\r\n}\r\n\r\n// 카드 레이아웃 명단 리스트\r\nconst visiblePeopleLists = ref({});\r\nconst showPeopleList = (item) => {\r\n  return visiblePeopleLists.value[item.date];\r\n};\r\nconst togglePeopleList = (item) => {\r\n  if (visiblePeopleLists.value[item.date]) {\r\n    delete visiblePeopleLists.value[item.date];\r\n  } else {\r\n    visiblePeopleLists.value[item.date] = true;\r\n  }\r\n};\r\n\r\n// 모달 등 나머지 로직\r\nconst modalInstance = ref(null);\r\nfunction openModal() {\r\n  const modalElem = document.getElementById('receiptModal');\r\n  if (!modalInstance.value) {\r\n    modalInstance.value = new bootstrap.Modal(modalElem, {\r\n      backdrop: 'static',\r\n      keyboard: false,\r\n    });\r\n  }\r\n  modalInstance.value.show();\r\n}\r\nfunction closeModal() {\r\n  modalInstance.value?.hide();\r\n}\r\nfunction openSidebar(item) {\r\n  if (!isMobile.value) {\r\n    selectedItem.value = item;\r\n    sidebarVisible.value = true;\r\n  }\r\n}\r\nfunction closeSidebar() {\r\n  sidebarVisible.value = false;\r\n}\r\n\r\n// 모바일 화면 판단\r\nonMounted(() => {\r\n  window.addEventListener('resize', updateIsMobile);\r\n\r\n  // 컴포넌트 초기 로드시 1페이지 데이터를 불러온다\r\n  fetchDataFromServer(currentPage.value);\r\n});\r\n\r\n// 이미지 미리보기 모달 관련\r\nfunction closePreviewModalOnOutsideClick(event) {\r\n  if (!event.target.classList.contains('preview-modal-image')) {\r\n    isPreviewVisible.value = false;\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.content {\r\n  transition: margin-right 0.3s ease;\r\n}\r\n\r\n.content-expanded {\r\n  margin-right: 300px;\r\n}\r\n\r\n.create-receipt {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n/* 사이드바 스타일 */\r\n.sidebar-wrapper {\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  width: 300px;\r\n  height: 100%;\r\n  transform: translateX(100%);\r\n  transition: transform 0.3s ease;\r\n  z-index: 1000;\r\n}\r\n.sidebar-visible {\r\n  transform: translateX(0);\r\n}\r\n.sidebar {\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: #f9f9f9;\r\n  border-left: 1px solid #ddd;\r\n  padding: 20px;\r\n  overflow-y: auto;\r\n  box-shadow: -2px 0 5px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n/* 이미지 미리보기 모달 */\r\n.preview-modal {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0,0,0,0.7);\r\n  z-index: 9999;\r\n  /* 돋보기 커서 */\r\n  /* cursor: zoom-out; */\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.preview-modal-content {\r\n  position: relative;\r\n}\r\n\r\n.preview-modal-image {\r\n  max-width: 80vw;\r\n  max-height: 80vh;\r\n  /* 돋보기 커서 */\r\n  /* cursor: zoom-in; */\r\n  transition: transform 0.2s ease;\r\n}\r\n\r\n.people-list {\r\n  font-size: 0.7rem;\r\n  max-height: 150px;\r\n  overflow-y: auto;\r\n  margin-top: 10px;\r\n  border-top: 1px solid #ddd;\r\n  padding-top: 10px;\r\n}\r\n\r\n.people-list-header {\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.people-list-item {\r\n  padding: 1px 0;\r\n  margin: 0;\r\n  margin-left: 10px;\r\n}\r\n\r\n@media (max-width: 1200px) {\r\n  .form-group {\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  .form-group .mt-2 {\r\n    margin: 0 !important;\r\n  }\r\n\r\n  .form-group label {\r\n    font-size: 0.9rem;\r\n  }\r\n\r\n  .form-control-file {\r\n    padding: 0px;\r\n  }\r\n}\r\n</style>\r\n","import script from \"./ReceiptSubmission.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ReceiptSubmission.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ReceiptSubmission.vue?vue&type=style&index=0&id=6c04eade&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6c04eade\"]])\n\nexport default __exports__","// src/router/receipt.js\nimport AnnualReceiptSummary from '@/views/receipt/AnnualReceiptSummary.vue';\nimport ReceiptRequestOverview from '@/views/receipt/ReceiptRequestOverview.vue';\nimport PersonalReceiptHistory from '@/views/receipt/PersonalReceiptHistory.vue';\nimport ReceiptClosure from '@/views/receipt/ReceiptClosure.vue';\nimport ReceiptClosureOverview from '@/views/receipt/ReceiptClosureOverview.vue';\nimport ReceiptSearch from '@/views/receipt/ReceiptSearch.vue';\nimport ReceiptSearchDetail from '@/views/receipt/ReceiptSearchDetail.vue';\nimport ReceiptPersonalRequestDetails from '@/views/receipt/ReceiptPersonalRequestDetails.vue';\nimport ReceiptSubmission from '@/views/receipt/ReceiptSubmission.vue';\n\nconst receiptRoutes = [\n\n  \n  /**\n   *  권한\n   *    ROLE_REGISTRAR : 등록자\n   *    ROLE_APPROVER  : 결재자\n   *    ROLE_CLOSER    : 마감자\n   * \n   * 등록자 : 등록, 상세 내용, 월별 정산 내역\n   * 결재자 : [등록자] + 신청 내역, 개인 신청 내역, 월별 신청 상세 내역\n   * 관리자 : [결재자] + 영수증 마감, 권한 부여\n   * \n   * 로그인 확인 필요 없을 시 : meta에 requiresAuth=false 추가\n   * menu는 백엔드에서 이력관리에서 사용\n   * \n   */\n  \n  // --------------------- 공통 영역 ---------------------\n\n  {\n    // (공통) 영수증 등록\n    path: 'receipt-submission',\n    name: 'ReceiptSubmission',\n    component: ReceiptSubmission,\n    meta: { \n      allowedRoles: ['ROLE_REGISTRAR', 'ROLE_APPROVER', 'ROLE_CLOSER'], // 등록자, 결재자, 마감자\n      menu: '영수증 등록'\n    }, \n  },\n  {\n    // (공통) 영수증 신청내역\n    path: 'personal-receipt-history',\n    name: 'PersonalReceiptHistory',\n    component: PersonalReceiptHistory,\n    meta: { \n      allowedRoles: ['ROLE_REGISTRAR', 'ROLE_APPROVER', 'ROLE_CLOSER'], // 등록자, 결재자, 마감자\n      menu: '영수증 신청내역'\n    }, \n  },\n  {\n    // (공통) 영수증 년도별 요약(마감된것만)\n    path: 'annual-receipt-summary',\n    name: 'AnnualReceiptSummary',\n    component: AnnualReceiptSummary,\n    meta: { \n      allowedRoles: ['ROLE_REGISTRAR', 'ROLE_APPROVER', 'ROLE_CLOSER'], // 등록자, 결재자, 마감자\n      menu: '영수증 년도별 요약'\n    }, \n  },\n\n\n\n  // --------------------- 결재자, 마감자 영역 ---------------------\n\n  {\n    // 영수증 신청내역 현황\n    path: 'receipt-request-overview',\n    name: 'ReceiptRequestOverview',\n    component: ReceiptRequestOverview,\n    meta: { \n      allowedRoles: ['ROLE_APPROVER', 'ROLE_CLOSER'], // 결재자, 마감자\n      menu: '영수증 신청내역 현황'\n    }, \n  },\n  {\n    // 영수증 신청내역 현황 상세페이지\n    path: 'receipt-personal-request-details',\n    name: 'ReceiptPersonalRequestDetails',\n    component: ReceiptPersonalRequestDetails,\n    meta: { \n      allowedRoles: ['ROLE_APPROVER', 'ROLE_CLOSER'], // 결재자, 마감자\n      menu: '영수증 신청내역 현황 상세페이지'\n    }, \n  },\n  {\n    // 영수증 내역 조회\n    path: 'receipt-search',\n    name: 'ReceiptSearch',\n    component: ReceiptSearch,\n    meta: { \n      allowedRoles: ['ROLE_APPROVER', 'ROLE_CLOSER'], // 결재자, 마감자\n      menu: '영수증 내역 조회'\n    }, \n  },\n  {\n    // 영수증 상세 내역 조회\n    path: 'receipt-search-detail',\n    name: 'ReceiptSearchDetail',\n    component: ReceiptSearchDetail,\n    meta: { \n      allowedRoles: ['ROLE_APPROVER', 'ROLE_CLOSER'], // 결재자, 마감자\n      menu: '영수증 상세 내역 조회'\n    }, \n  },\n  {\n    // 영수증 결제 마감 확인\n    path: 'receipt-closure-overview',\n    name: 'ReceiptClosureOverview',\n    component: ReceiptClosureOverview,\n    meta: { \n      allowedRoles: ['ROLE_APPROVER', 'ROLE_CLOSER'], // 결재자, 마감자\n      menu: '영수증 결제 마감 확인'\n    }, \n  },\n\n\n\n// --------------------- 마감자 영역 ---------------------\n  {\n    // 영수증 마감\n    path: 'receipt-closure',\n    name: 'ReceiptClosure',\n    component: ReceiptClosure,\n    meta: { \n      allowedRoles: ['ROLE_CLOSER'], //마감자\n      menu: '영수증 마감'\n    }, \n  },\n\n\n];\n\nexport default receiptRoutes;\n","<template>\r\n  <!-- 부트스트랩 모달 -->\r\n  <!-- onMounted에서 부트스트랩 설정 부분에서도 가능함 -->\r\n  <!-- data-bs-backdrop=\"static\" : 백드롭 클릭시 닫기 방지 -->\r\n  <!-- data-bs-keyboard=\"false\" : ESC 키 닫기 방지 -->\r\n  <div \r\n    class=\"modal fade\" \r\n    id=\"noticeModal\" \r\n    tabindex=\"-1\" \r\n    aria-labelledby=\"noticeModalLabel\" \r\n    aria-hidden=\"true\"\r\n    data-bs-backdrop=\"static\"\r\n    data-bs-keyboard=\"false\"\r\n  >\r\n    <div class=\"modal-dialog modal-dialog-centered\">\r\n      <div class=\"modal-content\">\r\n        <!-- 모달 헤더 -->\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\" id=\"noticeModalLabel\">공지 사항</h5>\r\n          <button \r\n            type=\"button\" \r\n            class=\"btn-close\" \r\n            data-bs-dismiss=\"modal\" \r\n            aria-label=\"Close\"\r\n            @click=\"closeModal\"\r\n          ></button>\r\n        </div>\r\n\r\n        <!-- 모달 본문 -->\r\n        <div class=\"modal-body\">\r\n          <form>\r\n            <div class=\"mb-3\">\r\n              <label for=\"noticeTitle\" class=\"form-label\">제목</label>\r\n              <input \r\n                type=\"text\" \r\n                class=\"form-control\" \r\n                id=\"noticeTitle\" \r\n                v-model=\"localForm.title\" \r\n                :disabled=\"!props.isAdmin\" \r\n                placeholder=\"제목을 입력하세요\"\r\n              >\r\n            </div>\r\n            <div class=\"mb-3\">\r\n              <label for=\"noticeAuthor\" class=\"form-label\">작성자</label>\r\n              <input \r\n                type=\"text\" \r\n                class=\"form-control\" \r\n                id=\"noticeAuthor\" \r\n                v-model=\"localForm.author\" \r\n                :disabled=\"!props.isAdmin\"\r\n                placeholder=\"작성자를 입력하세요\"\r\n              >\r\n            </div>\r\n            <div class=\"mb-3\">\r\n              <label for=\"noticeDate\" class=\"form-label\">작성일</label>\r\n              <input \r\n                type=\"date\" \r\n                class=\"form-control\" \r\n                id=\"noticeDate\" \r\n                v-model=\"localForm.date\" \r\n                disabled\r\n              >\r\n            </div>\r\n            <div class=\"mb-3\">\r\n              <label for=\"noticeContent\" class=\"form-label\">내용</label>\r\n              <textarea \r\n                class=\"form-control\" \r\n                id=\"noticeContent\" \r\n                v-model=\"localForm.content\" \r\n                :disabled=\"!props.isAdmin\" \r\n                rows=\"4\" \r\n                placeholder=\"내용을 입력하세요\"\r\n              ></textarea>\r\n            </div>\r\n            <div v-if=\"!props.isAdmin\" class=\"mb-3 form-check\">\r\n              <input \r\n                type=\"checkbox\" \r\n                class=\"form-check-input\" \r\n                id=\"cookieConsent\" \r\n                v-model=\"localForm.cookieConsent\"\r\n              >\r\n              <label class=\"form-check-label\" for=\"cookieConsent\">\r\n                해당 공지를 다시 띄우지 않음(쿠키 사용 동의)\r\n              </label>\r\n            </div>\r\n          </form>\r\n        </div>\r\n\r\n        <!-- 모달 푸터 -->\r\n        <div class=\"modal-footer\">\r\n          <button \r\n            type=\"button\" \r\n            class=\"btn btn-secondary\" \r\n            data-bs-dismiss=\"modal\" \r\n            @click=\"closeModal\"\r\n          >\r\n            닫기\r\n          </button>\r\n          <!-- 등록 버튼 (isCreate === true) -->\r\n          <button \r\n            type=\"button\" \r\n            class=\"btn btn-primary\" \r\n            v-if=\"props.isAdmin && props.isCreate\" \r\n            @click=\"saveNotice\"\r\n          >\r\n            등록\r\n          </button>\r\n          <!-- 수정 버튼 (isCreate === false) -->\r\n          <button \r\n            type=\"button\" \r\n            class=\"btn btn-primary\" \r\n            v-if=\"props.isAdmin && !props.isCreate\" \r\n            @click=\"saveNotice\"\r\n          >\r\n            수정\r\n          </button>\r\n          <!-- 삭제 버튼 (isCreate === false) -->\r\n          <button \r\n            type=\"button\" \r\n            class=\"btn btn-danger\" \r\n            v-if=\"props.isAdmin && !props.isCreate\"\r\n            @click=\"showDeleteAlert\"\r\n          >\r\n            삭제\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- 삭제 확인 AlertModal (자식 안에 배치) -->\r\n  <AlertModal \r\n    :isVisible=\"deleteConfirmVisible\" \r\n    :disableBackgroundClose=\"false\"\r\n    title=\"삭제 확인\" \r\n    confirmText=\"확인\" \r\n    cancelText=\"취소\"\r\n    @close=\"deleteConfirmVisible = false\" \r\n    @confirm=\"deleteNotice\"\r\n  >\r\n    <template #body>\r\n      <p>삭제하시겠습니까?</p>\r\n    </template>\r\n  </AlertModal>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch, defineProps, defineEmits, onMounted } from 'vue';\r\nimport * as bootstrap from 'bootstrap';\r\nimport AlertModal from '@/components/common/modal/AlertModal.vue';\r\n\r\n/**\r\n * 부모로부터 넘어오는 props\r\n *  - isAdmin: 관리자 여부\r\n *  - isCreate: 등록/수정 구분\r\n *  - form: 원본 폼 데이터\r\n */\r\nconst props = defineProps({\r\n  isAdmin: Boolean,\r\n  isCreate: Boolean,\r\n  form: Object,\r\n});\r\n\r\n/**\r\n * 이벤트:\r\n *  - close: 모달 닫기\r\n *  - save: 등록/수정 완료 시 부모로 전달\r\n *  - delete: 삭제 확인 시 부모로 전달\r\n */\r\nconst emit = defineEmits(['close', 'save', 'delete']);\r\n\r\n/** localForm: 부모 form을 복사해서 사용 */\r\nconst localForm = ref({ ...props.form });\r\nwatch(\r\n  () => props.form,\r\n  (newForm) => {\r\n    localForm.value = { ...newForm };\r\n  },\r\n  { deep: true }\r\n);\r\n\r\n/** 모달 인스턴스 & 삭제 확인 모달 표시 여부 */\r\nconst modalInstance = ref(null);\r\nconst deleteConfirmVisible = ref(false);\r\n\r\n/** onMounted에서 Bootstrap 모달 초기화 & 표시 */\r\nonMounted(() => {\r\n  const modalElement = document.getElementById('noticeModal');\r\n  modalInstance.value = new bootstrap.Modal(modalElement, {\r\n    // backdrop: 'static', // 백드롭 클릭시 닫기 방지\r\n    // keyboard: false     // ESC 키 닫기 방지\r\n  });\r\n  // 모달 열기\r\n  modalInstance.value.show();\r\n});\r\n\r\n/** 닫기 버튼 */\r\nfunction closeModal() {\r\n  modalInstance.value.hide();\r\n  emit('close');\r\n}\r\n\r\n/** 등록/수정 버튼 */\r\nfunction saveNotice() {\r\n  // localForm 데이터 부모에 전달\r\n  emit('save', { ...localForm.value });\r\n  modalInstance.value.hide();\r\n  emit('close');\r\n}\r\n\r\n/** 삭제 버튼 클릭 => AlertModal 열기 */\r\nfunction showDeleteAlert() {\r\n  deleteConfirmVisible.value = true;\r\n}\r\n\r\n/** AlertModal에서 확인 시 => 부모에 삭제 이벤트 알림 */\r\nfunction deleteNotice() {\r\n  // 현재 항목 ID를 부모에 전달\r\n  emit('delete', localForm.value.id);\r\n  deleteConfirmVisible.value = false;\r\n  modalInstance.value.hide();\r\n  emit('close');\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 1.5rem;\r\n}\r\n</style>\r\n","import script from \"./NoticeIntegratedCreateModifyModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./NoticeIntegratedCreateModifyModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./NoticeIntegratedCreateModifyModal.vue?vue&type=style&index=0&id=a9e288f8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-a9e288f8\"]])\n\nexport default __exports__","import { hrmApi } from '@/api/apiConfig';\r\n\r\nexport default {\r\n  async getNotices() {\r\n    try {\r\n        document.cookie = \"X-Func-Vue=\" + encodeURIComponent(\"공지 전체 조회\") + \"; path=/\";\r\n        return await hrmApi.get('/notices');\r\n      } catch (error) {\r\n        console.log(error);\r\n        console.error('get notices fail', error);\r\n      }\r\n  },\r\n}","<template>\r\n  <div>\r\n    <!-- 메인 콘텐츠 영역 -->\r\n    <div class=\"content\">\r\n      <h2 class=\"content-title\">공지 사항</h2>\r\n      <div class=\"content-sub-title\">\r\n        <div class=\"text-muted\">Notice Management</div>\r\n      </div>\r\n\r\n      <div class=\"create-notice\">\r\n        <!-- \"공지등록\" 버튼 (isAdmin 일 때만 표시) -->\r\n        <DefaultButton\r\n          v-if=\"isAdmin\"\r\n          align=\"right\"\r\n          @click=\"showModal('create')\"\r\n        >\r\n          공지등록\r\n        </DefaultButton>\r\n      </div>\r\n\r\n      <!-- 테이블 보기 -->\r\n      <!-- 로우 클릭 시 showModal('view', item) -->\r\n      <DefaultTable\r\n        :columns=\"columns\"\r\n        :data=\"data\"\r\n        :rowClick=\"(item) => showModal('view', item)\"\r\n      />\r\n\r\n      <!-- 페이지네이션 (공통 컴포넌트) -->\r\n      <DefaultPagination\r\n        :currentPage=\"currentPage\"\r\n        :totalPages=\"totalPages\"\r\n        :visiblePageCount=\"visiblePageCount\"\r\n        @pageChange=\"onPageChange\"\r\n      />\r\n    </div>\r\n\r\n    <!-- 모달 컴포넌트 -->\r\n    <NoticeIntegratedCreateModal\r\n      v-if=\"isModalVisible\"\r\n      :isAdmin=\"isAdmin\"\r\n      :isCreate=\"isCreate\"\r\n      :form=\"form\"\r\n      @close=\"isModalVisible = false\"\r\n      @save=\"handleSave\"\r\n      @delete=\"handleDelete\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport NoticeIntegratedCreateModal from '@/components/hrm/NoticeIntegratedCreateModifyModal.vue';\r\nimport DefaultButton from '@/components/common/button/DefaultButton.vue';\r\nimport DefaultTable from '@/components/common/table/DefaultTable.vue';\r\nimport DefaultPagination from '@/components/common/pagination/DefaultPagination.vue';\r\nimport NoticeIntegratedApi from '@/api/hrm/NoticeIntegratedApi';\r\n\r\n// =====================\r\n// 관리자 여부\r\n// =====================\r\nconst isAdmin = ref(true);\r\n\r\n// =====================\r\n// 모달 표시/숨김 & 등록/수정 구분\r\n// =====================\r\nconst isModalVisible = ref(false);\r\nconst isCreate = ref(true);\r\n\r\n// =====================\r\n// 페이지네이션 상태\r\n// =====================\r\nconst currentPage = ref(1);\r\nconst totalPages = ref(1);          // 서버에서 받아온 총 페이지 수\r\nconst visiblePageCount = ref(5);    // 페이지네이션에서 보여줄 최대 페이지 버튼 수\r\n\r\n// =====================\r\n// 폼 데이터\r\n// =====================\r\nconst form = ref({\r\n  id: null,\r\n  title: '',\r\n  author: '',\r\n  date: '',\r\n  content: '',\r\n  cookieConsent: false,\r\n});\r\n\r\n// =====================\r\n// 실제 서버에서 받아올 데이터\r\n// =====================\r\nconst data = ref([]);\r\n\r\n// =====================\r\n// 컬럼 정의\r\n// =====================\r\nconst columns = [\r\n  { key: 'id',     label: '번호'  , width: 10 },\r\n  { key: 'title',  label: '제목'  , width: 200 },\r\n  { key: 'author', label: '작성자', width: 30 },\r\n  { key: 'date',   label: '작성일', width: 30 },\r\n];\r\n\r\n/**\r\n * 페이지 변경 시 호출\r\n * -> 서버(또는 mock)에서 해당 페이지 데이터, totalPages 등을 받아옴\r\n */\r\nfunction onPageChange(newPage) {\r\n  currentPage.value = newPage;\r\n  fetchDataFromServer(newPage);\r\n}\r\n\r\n/**\r\n * 백엔드(또는 mock)에서 데이터 가져오는 함수\r\n * - 실제로는 axios.get(...) 등을 사용하여 { page } 등의 파라미터 전송\r\n */\r\n// async function fetchDataFromServer(page = 1) {\r\nasync function fetchDataFromServer() {\r\n  console.log('test');\r\n  try {\r\n    // const response = await NoticeIntegratedApi.getNotices('/api/notice', { params: { page } });\r\n    const response = await NoticeIntegratedApi.getNotices();\r\n    data.value = response.data.items;\r\n    totalPages.value = response.data.totalPages;\r\n\r\n    // =====================\r\n    // 예시: mockData\r\n    // =====================\r\n    const mockData = [\r\n      { id: 1,  title: '공지사항 제목 1',  author: '관리자A', date: '2024-08-01', content: '공지사항 내용 1' },\r\n      { id: 2,  title: '공지사항 제목 2',  author: '관리자B', date: '2024-08-02', content: '공지사항 내용 2' },\r\n      { id: 3,  title: '공지사항 제목 3',  author: '관리자C', date: '2024-08-03', content: '공지사항 내용 3' },\r\n      { id: 4,  title: '공지사항 제목 4',  author: '관리자A', date: '2024-08-04', content: '공지사항 내용 4' },\r\n      { id: 5,  title: '공지사항 제목 5',  author: '관리자D', date: '2024-08-05', content: '공지사항 내용 5' },\r\n      { id: 6,  title: '공지사항 제목 6',  author: '관리자E', date: '2024-08-06', content: '공지사항 내용 6' },\r\n      { id: 7,  title: '공지사항 제목 7',  author: '관리자F', date: '2024-08-07', content: '공지사항 내용 7' },\r\n      { id: 8,  title: '공지사항 제목 8',  author: '관리자B', date: '2024-08-08', content: '공지사항 내용 8' },\r\n      { id: 9,  title: '공지사항 제목 9',  author: '관리자C', date: '2024-08-09', content: '공지사항 내용 9' },\r\n      { id: 10, title: '공지사항 제목 10', author: '관리자A', date: '2024-08-10', content: '공지사항 내용 10' },\r\n      // 실제로는 페이지 번호에 따라 다른 데이터가 내려올 수도 있음\r\n    ];\r\n    // 모의로 현재 페이지 데이터 & totalPages 세팅\r\n    data.value = mockData;\r\n    totalPages.value = 3;  // 예: 총 3페이지로 가정\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\n// =====================\r\n// 모달 로직\r\n// =====================\r\nfunction showModal(mode, item = null) {\r\n  isCreate.value = (mode === 'create');\r\n  if (isCreate.value) {\r\n    // 등록 모드 (새로운 데이터)\r\n    form.value = {\r\n      id: null,\r\n      title: '',\r\n      author: '',\r\n      date: getLocalDate(),\r\n      content: '',\r\n      cookieConsent: false,\r\n    };\r\n  } else {\r\n    // 수정 모드\r\n    form.value = { ...item };\r\n  }\r\n  isModalVisible.value = true;\r\n}\r\n\r\nfunction getLocalDate() {\r\n  const today = new Date();\r\n  today.setMinutes(today.getMinutes() - today.getTimezoneOffset());\r\n  return today.toISOString().split('T')[0];\r\n}\r\n\r\n/**\r\n * 저장(등록/수정)\r\n * - 실제로는 백엔드에 POST/PUT 요청 후, 다시 fetchDataFromServer()로 목록을 재조회하는 식\r\n */\r\nfunction handleSave(updatedForm) {\r\n  if (isCreate.value) {\r\n    // 등록\r\n    updatedForm.id = Date.now(); // 임시 ID\r\n    data.value.push(updatedForm);\r\n  } else {\r\n    // 수정\r\n    const idx = data.value.findIndex(d => d.id === updatedForm.id);\r\n    if (idx !== -1) {\r\n      data.value[idx] = updatedForm;\r\n    }\r\n  }\r\n  // 모달 닫기\r\n  isModalVisible.value = false;\r\n  fetchDataFromServer();\r\n}\r\n\r\n/**\r\n * 삭제\r\n * - 실제로는 백엔드에 DELETE 요청 후 다시 fetchDataFromServer()로 목록 재조회\r\n */\r\nfunction handleDelete(idToDelete) {\r\n  if (idToDelete !== null) {\r\n    data.value = data.value.filter(item => item.id !== idToDelete);\r\n  }\r\n  isModalVisible.value = false;\r\n  fetchDataFromServer();\r\n}\r\n\r\n/**\r\n * onMounted 시 1페이지 데이터를 불러옴\r\n */\r\nonMounted(() => {\r\n  fetchDataFromServer(currentPage.value);\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n/* 페이지네이션 margin */\r\n.pagination {\r\n  margin-top: 30px !important;\r\n}\r\n\r\n/* 테이블 행 hover 색상 */\r\n#dataTable tbody tr:hover td {\r\n  background-color: #e7f1ff !important;\r\n}\r\n\r\n.create-notice {\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n","import script from \"./NoticeIntegrated.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./NoticeIntegrated.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./NoticeIntegrated.vue?vue&type=style&index=0&id=65ec6f54&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-65ec6f54\"]])\n\nexport default __exports__","<template>\r\n  <!-- 모달 백드롭 (배경) -->\r\n  <div v-if=\"visible\" class=\"modal-backdrop\">\r\n    <!-- 모달 컨테이너 -->\r\n    <div class=\"modal-container\">\r\n      <div class=\"modal-header\">\r\n        <span class=\"modal-title\">주소 검색</span>\r\n        <button class=\"modal-close\" @click=\"closeModal\">✖</button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <!-- 카카오 우편번호 검색 영역 -->\r\n        <!-- 아래 div에 우편번호 서비스가 embed(iFrame) 형태로 표시됨 -->\r\n        <div\r\n          ref=\"postcodeContainer\"\r\n          style=\"width: 100%; height: 100%;\"\r\n          class=\"scaled-postcode\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch, nextTick } from 'vue';\r\n\r\nconst props = defineProps({\r\n  visible: Boolean\r\n});\r\n\r\nconst emits = defineEmits(['close', 'selectAddress']);\r\n\r\n/**\r\n * 카카오 주소 검색 창이 삽입될 div\r\n */\r\nconst postcodeContainer = ref(null);\r\n\r\n/**\r\n * 모달이 열릴 때마다 카카오 우편번호 검색창 embed\r\n */\r\nwatch(() => props.visible, async (newVal) => {\r\n  if (newVal) {\r\n    await nextTick();\r\n    openPostcodePopup();\r\n  }\r\n});\r\n\r\n/**\r\n * 카카오 주소 검색 창 오픈\r\n */\r\nfunction openPostcodePopup() {\r\n  if (!window.daum?.Postcode) {\r\n    console.error('카카오 우편번호 스크립트가 로드되지 않았습니다.');\r\n    return;\r\n  }\r\n\r\n  const postcode = new window.daum.Postcode({\r\n    oncomplete(data) {\r\n      emits('selectAddress', {\r\n        address: data.address,\r\n        zonecode: data.zonecode\r\n      });\r\n      closeModal();\r\n    },\r\n    onresize() {\r\n      // 필요 시 구현 가능\r\n    },\r\n  });\r\n\r\n  // 팝업 대신 embed -> 모달 내부를 사용\r\n  postcode.embed(postcodeContainer.value, {\r\n    width: '100%',\r\n    height: '100%'\r\n  });\r\n}\r\n\r\nfunction closeModal() {\r\n  emits('close');\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.modal-backdrop {\r\n  position: fixed;\r\n  inset: 0; /* top:0, left:0, right:0, bottom:0 와 동일 */\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 1050; /* 모달 뒤 배경 */\r\n}\r\n\r\n.modal-container {\r\n  width: 515px;\r\n  height: 560px;\r\n  margin: 50px auto;\r\n  background: #fff;\r\n  position: relative;\r\n  top: 50px;\r\n  padding: 5px 5px 5px 5px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  z-index: 1100; /* 모달 자체는 백드롭보다 한 단계 위 */\r\n}\r\n\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 10px 15px;\r\n  background-color: #F2F2F2; /* 카카오 스타일 회색 */\r\n}\r\n\r\n.modal-title {\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n}\r\n\r\n.modal-body {\r\n  /* iFrame이 부모보다 작아지지 않도록 overflow 숨기거나 auto */\r\n  flex: 1;\r\n  overflow: hidden; /* 또는 auto. 필요에 따라 조정 */\r\n  position: relative;\r\n}\r\n\r\n@media (max-width: 1200px) {\r\n  .modal-title {\r\n    font-size: 0.9rem;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .modal-header {\r\n    padding: 7px 10px;\r\n  }\r\n\r\n  .modal-container {\r\n    width: 410px;\r\n    height: 450px;\r\n    padding: 5px;\r\n  }\r\n\r\n  .scaled-postcode {\r\n    transform: scale(0.8);\r\n    transform-origin: top left;\r\n  }\r\n}\r\n\r\n@media (max-width: 500px) {\r\n  .modal-title {\r\n    font-size: 0.65rem;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .modal-header {\r\n    padding: 5px 7px;\r\n  }\r\n\r\n  .modal-container {\r\n    width: 305px;\r\n    height: 345px;\r\n    padding: 3px;\r\n  }\r\n\r\n  .scaled-postcode {\r\n    transform: scale(0.6);\r\n    transform-origin: top left;\r\n  }\r\n}\r\n</style>\r\n","import script from \"./KakaoAddressModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./KakaoAddressModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./KakaoAddressModal.vue?vue&type=style&index=0&id=104728ce&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-104728ce\"]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <!-- 메인 콘텐츠 영역 -->\r\n    <div class=\"content\">\r\n      <h2 class=\"content-title\">사용자 정보</h2>\r\n      <p class=\"content-sub-title\">월별 영수증 신청 내역 확인 페이지</p>\r\n\r\n      <form @submit.prevent=\"handleSubmit\" class=\"form-content\">\r\n        <!-- 이름과 핸드폰 번호를 한 줄에 표시 -->\r\n        <div class=\"form-group d-flex justify-content-between\">\r\n          <div class=\"w-50 pr-2\">\r\n            <label for=\"userName\">이름</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"userName\" :value=\"userName\" disabled>\r\n          </div>\r\n          <div class=\"w-50 pl-2\">\r\n            <label for=\"phone\">핸드폰 번호</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"phone\" v-model=\"phone\" placeholder=\"'-' 없이 입력하세요\">\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 생년월일과 입사일을 한 줄에 표시 -->\r\n        <div class=\"form-group d-flex justify-content-between\">\r\n          <div class=\"w-50 pr-2\">\r\n            <label for=\"dob\">생년-월-일</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"dob\" :value=\"dob\" disabled>\r\n          </div>\r\n          <div class=\"w-50 pl-2\">\r\n            <label for=\"joinDate\">입사일</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"joinDate\" :value=\"joinDate\" disabled>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 부서, 팀, 직급을 한 줄에 표시 -->\r\n        <div class=\"form-group d-flex justify-content-between\">\r\n          <div class=\"w-33 pr-2\">\r\n            <label for=\"department\">부서</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"dob\" :value=\"department\" disabled>\r\n          </div>\r\n          <div class=\"w-33 px-2\">\r\n            <label for=\"team\">팀</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"dob\" :value=\"team\" disabled>\r\n          </div>\r\n          <div class=\"w-33 pl-2\">\r\n            <label for=\"position\">직급</label>\r\n            <input type=\"text\" class=\"form-control\" id=\"dob\" :value=\"position\" disabled>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- 우편번호와 주소 -->\r\n        <div class=\"form-group\">\r\n          <label for=\"zonecode\" class=\"small-text\">우편번호</label>\r\n          <div class=\"input-group\">\r\n            <input type=\"text\" class=\"form-control\" id=\"zonecode\" v-model=\"zonecode\" placeholder=\"우편번호\" disabled>\r\n            <div class=\"input-group-append\">\r\n              <DefaultButton\r\n                color=\"gray\"\r\n                @click=\"openModal\"\r\n              >\r\n                주소 검색\r\n              </DefaultButton>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n          <label for=\"address\">주소</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"address\" v-model=\"address\" placeholder=\"주소를 검색하세요\" readonly disabled>\r\n        </div>\r\n\r\n        <!-- 상세주소 입력 -->\r\n        <div class=\"form-group\">\r\n          <label for=\"detailAddress\">상세 주소</label>\r\n          <input type=\"text\" class=\"form-control\" id=\"detailAddress\" v-model=\"detailAddress\" placeholder=\"상세 주소를 입력하세요\">\r\n        </div>\r\n\r\n        <!-- 저장 버튼 -->\r\n        <DefaultButton \r\n          type=\"submit\"\r\n          align=\"right\"\r\n          @click=\"goBack\">\r\n          저장\r\n        </DefaultButton>\r\n      </form>\r\n    </div>\r\n\r\n    <KakaoAddressModal\r\n      :visible=\"isModalOpen\"\r\n      @close=\"closeModal\"\r\n      @selectAddress=\"handleSelectAddress\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport DefaultButton from '@/components/common/button/DefaultButton.vue';\r\nimport KakaoAddressModal from '@/components/common/kakao/address/KakaoAddressModal.vue';\r\n\r\n// 데이터 바인딩을 위한 ref 설정\r\nconst userName = ref('권 범 준 (qjawns0618@kpcnc.co.kr)');\r\nconst department = ref('SI사업본부');\r\nconst team = ref('프레임워크');\r\nconst position = ref('책임');\r\nconst phone = ref('01051310583');\r\nconst dob = ref('1990-05-15'); // 생년월일 예시\r\nconst joinDate = ref('2020-01-10'); // 입사일 예시\r\n\r\n/**\r\n * 카카오 주소 API\r\n */\r\nconst zonecode = ref('');\r\nconst address = ref('');\r\nconst detailAddress = ref('');\r\nconst isModalOpen = ref(false);\r\n\r\nfunction openModal() {\r\n  isModalOpen.value = true;\r\n}\r\nfunction closeModal() {\r\n  isModalOpen.value = false;\r\n}\r\nfunction handleSelectAddress(payload) {\r\n  // payload = { address: ..., zonecode: ... }\r\n  address.value = payload.address;\r\n  zonecode.value = payload.zonecode;\r\n}\r\n\r\n// 폼 제출 시 호출되는 함수\r\nconst handleSubmit = () => {\r\n  console.log('Form submitted');\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.form-content {\r\n  margin-bottom: 60px;\r\n}\r\nlabel {\r\n  margin-bottom: 10px;\r\n}\r\n.content {\r\n  width: 70%;\r\n}\r\n.content-sub-title {\r\n  margin-bottom: 50px;\r\n}\r\n/* 우편번호 인풋 크기 작게 */\r\n#zonecode {\r\n  max-width: 160px;\r\n}\r\n/* 우편번호 텍스트 작게 */\r\n.small-text {\r\n  font-size: 0.8rem;\r\n  color: #777;\r\n}\r\n.form-group {\r\n  margin-bottom: 1rem;\r\n}\r\n/* 저장 버튼 오른쪽 정렬 */\r\n.form-group.d-flex.justify-content-end {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: end;\r\n}\r\n\r\n/* 반응형 설정 */\r\n.w-50 {\r\n  width: 50%;\r\n}\r\n.w-33 {\r\n  width: 33%;\r\n}\r\n\r\nlabel {\r\n  font-size: 0.9rem !important;\r\n}\r\n.form-control {\r\n  font-size: 0.8rem !important;\r\n}\r\n\r\nbutton {\r\n  font-size: 0.8rem;\r\n}\r\n\r\n@media (max-width: 1200px) {\r\n  label {\r\n    font-size: 0.8rem !important;\r\n  }\r\n  .content {\r\n    width: 100%;\r\n  }\r\n  .align-items-center {\r\n    margin-bottom: 10px;\r\n  }\r\n  .form-control {\r\n    font-size: 0.7rem !important;\r\n  }\r\n}\r\n</style>\r\n","import script from \"./UserInformation.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UserInformation.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UserInformation.vue?vue&type=style&index=0&id=7f7dba6a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7f7dba6a\"]])\n\nexport default __exports__","<template>\r\n  <!-- b-modal: 자식 컴포넌트에서 상태를 v-model로 받아 제어 -->\r\n  <!-- b-modal에서 “OK” 버튼 누르면 자동으로 모달이 닫히는 게 디폴트 동작 -->\r\n  <!-- @ok.prevent=\"onSaveClick\"(수동 제어) 형태 -->\r\n  <!-- onSaveClick() 내부에서 직접 innerModalVisible.value = false;를 호출하지 않는 한 모달이 안 닫힘 -->\r\n  <b-modal\r\n    v-model=\"innerModalVisible\"\r\n    title=\"사용자 세부 정보\"\r\n    @ok.prevent=\"onSaveClick\"\r\n    ok-title=\"저장\"\r\n    cancel-title=\"취소\"\r\n    no-close-on-backdrop\r\n    centered\r\n  >\r\n    <b-form @change=\"handleChange\">\r\n      <!-- 이름, 생년월일 -->\r\n      <b-form-group label=\"이름/생년월일\" label-for=\"userDetails\" class=\"user-detail-group\">\r\n        <div id=\"userDetails\" class=\"d-flex\">\r\n          <b-form-input\r\n            v-model=\"tempUser.name\"\r\n            :disabled=\"true\"\r\n            placeholder=\"이름\"\r\n            class=\"mr-2\"\r\n          ></b-form-input>\r\n          <b-form-input\r\n            id=\"userBirthDate\"\r\n            type=\"date\"\r\n            v-model=\"tempUser.birthDate\"\r\n            :disabled=\"true\"\r\n          ></b-form-input>\r\n        </div>\r\n      </b-form-group>\r\n\r\n      <!-- 이메일 -->\r\n      <b-form-group label=\"이메일\" label-for=\"userEmail\" class=\"user-detail-group\">\r\n        <div id=\"userEmail\" class=\"d-flex\">\r\n          <b-form-input\r\n            v-model=\"tempUser.email\"\r\n            placeholder=\"이메일\"\r\n            class=\"mr-2\"\r\n          ></b-form-input>\r\n        </div>\r\n      </b-form-group>\r\n\r\n      <!-- 사용자 비밀번호 강제 초기화 -->\r\n      <b-form-group label=\"비밀번호/비밀번호 확인\" label-for=\"userPassword\" class=\"user-detail-group\">\r\n        <div id=\"userPassword\" class=\"d-flex\">\r\n          <b-form-input\r\n            v-model=\"tempUser.password\"\r\n            placeholder=\"비밀번호\"\r\n            class=\"mr-2\"\r\n          ></b-form-input>\r\n          <b-form-input\r\n            v-model=\"passwordCheck\"\r\n            placeholder=\"비밀번호 확인\"\r\n            class=\"mr-2\"\r\n          ></b-form-input>\r\n        </div>\r\n        <!-- 비밀번호 불일치 경고 메시지 -->\r\n        <p v-if=\"isPasswordMismatch\" class=\"userPasswordNotMatch\">비밀번호와 재확인 값이 일치하지 않습니다.</p>\r\n      </b-form-group>\r\n\r\n      <!-- 고용형태, 입사일/퇴사일 -->\r\n      <b-form-group label=\"고용형태/입사일/퇴사일\" label-for=\"employmentDetails\" class=\"user-detail-group\">\r\n        <div id=\"employmentDetails\" class=\"d-flex\">\r\n          <b-form-select\r\n            v-model=\"tempUser.employmentType\"\r\n            :options=\"['정규직', '비정규직']\"\r\n            :disabled=\"!isAdmin\"\r\n            class=\"mr-2\"\r\n          ></b-form-select>\r\n          <b-form-select\r\n            v-model=\"tempUser.status\"\r\n            :options=\"['입사', '퇴사']\"\r\n            class=\"mr-2\"\r\n          ></b-form-select>\r\n          <b-form-input\r\n            type=\"date\"\r\n            v-model=\"computedDate\"\r\n            :disabled=\"true\"\r\n          ></b-form-input>\r\n        </div>\r\n      </b-form-group>\r\n\r\n      <!-- 부서, 팀, 직책 한 줄 -->\r\n      <b-form-group label=\"부서/팀/직책\" label-for=\"userEmploymentDetails\" class=\"user-detail-group\">\r\n        <div id=\"userEmploymentDetails\" class=\"d-flex\">\r\n          <b-form-input\r\n            v-model=\"tempUser.department\"\r\n            :disabled=\"!isAdmin\"\r\n            placeholder=\"부서\"\r\n            class=\"mr-2\"\r\n          ></b-form-input>\r\n          <b-form-input\r\n            v-model=\"tempUser.team\"\r\n            :disabled=\"!isAdmin\"\r\n            placeholder=\"팀\"\r\n            class=\"mr-2\"\r\n          ></b-form-input>\r\n          <b-form-input\r\n            v-model=\"tempUser.position\"\r\n            :disabled=\"!isAdmin\"\r\n            placeholder=\"직책\"\r\n          ></b-form-input>\r\n        </div>\r\n      </b-form-group>\r\n\r\n      <!-- 우편번호 및 주소 -->\r\n      <b-form-group label=\"우편번호/주소\" label-for=\"userZipCode\" class=\"user-detail-group\">\r\n        <div id=\"userAddress\" class=\"d-flex\">\r\n          <b-form-input\r\n            v-model=\"tempUser.zipCode\"\r\n            :disabled=\"true\"\r\n            placeholder=\"우편번호\"\r\n            class=\"mr-2\"\r\n            style=\"width: 33%\"\r\n          ></b-form-input>\r\n        </div>\r\n        <b-form-input\r\n          v-model=\"tempUser.address\"\r\n          :disabled=\"true\"\r\n          placeholder=\"주소\"\r\n          style=\"width: 100%\"\r\n        ></b-form-input>\r\n      </b-form-group>\r\n\r\n      <!-- 현재 파견지 -->\r\n      <b-form-group label=\"현재 파견지\" label-for=\"userLocation\" class=\"user-detail-group\">\r\n        <b-form-input\r\n          id=\"userLocation\"\r\n          v-model=\"tempUser.location\"\r\n          :disabled=\"!isAdmin\"\r\n          placeholder=\"현재 파견지\"\r\n        ></b-form-input>\r\n      </b-form-group>\r\n    </b-form>\r\n  </b-modal>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, watch } from 'vue';\r\n\r\nconst props = defineProps({\r\n  visible: { type: Boolean, default: false },\r\n  isAdmin: { type: Boolean, default: false },\r\n  user: {\r\n    type: Object,\r\n    default: () => ({\r\n      name: '',\r\n      email: '',\r\n      password: '',\r\n      department: '',\r\n      team: '',\r\n      position: '',\r\n      joinDate: '',\r\n      leaveDate: '',\r\n      status: '입사',\r\n      birthDate: '',\r\n      employmentType: '정규직',\r\n      zipCode: '',\r\n      address: '',\r\n      location: ''\r\n    })\r\n  }\r\n});\r\n\r\nconst emits = defineEmits(['close', 'confirmSave']);\r\n\r\n// b-modal 제어를 위한 내부 ref\r\nconst innerModalVisible = ref(props.visible);\r\n\r\n// 모달 안에서 편집할 임시 데이터\r\nconst tempUser = ref({ ...props.user });\r\n\r\n// 비밀번호 재확인\r\nconst passwordCheck = ref(props.user.password);\r\nconst isPasswordMismatch = ref(false);\r\n\r\n/**\r\n * 모달 열리고 닫힘 동기화\r\n */\r\nwatch(\r\n  () => props.visible,\r\n  (newVal) => {\r\n    innerModalVisible.value = newVal;\r\n    // 모달 열릴 때마다 tempUser 갱신\r\n    if (newVal) {\r\n      tempUser.value = { ...props.user };\r\n      passwordCheck.value = props.user.password;\r\n      isPasswordMismatch.value = false;\r\n    }\r\n  }\r\n);\r\n\r\nwatch(\r\n  () => innerModalVisible.value,\r\n  (newVal) => {\r\n    // 자식 모달이 닫혔다면, 부모에게 close 이벤트\r\n    if (!newVal) {\r\n      emits('close');\r\n    }\r\n  }\r\n);\r\n\r\n/**\r\n * 입사/퇴사 날짜를 표시하는 계산 속성\r\n */\r\nconst computedDate = computed({\r\n  get() {\r\n    return tempUser.value.status === '입사'\r\n      ? tempUser.value.joinDate\r\n      : tempUser.value.leaveDate;\r\n  },\r\n  set(value) {\r\n    if (tempUser.value.status === '입사') {\r\n      tempUser.value.joinDate = value;\r\n    } else {\r\n      tempUser.value.leaveDate = value;\r\n    }\r\n  }\r\n});\r\n\r\n/**\r\n * 폼 변경 이벤트\r\n */\r\nfunction handleChange() {\r\n  // 비밀번호 불일치 여부\r\n  isPasswordMismatch.value = (tempUser.value.password !== passwordCheck.value);\r\n}\r\n\r\n/**\r\n * 저장 버튼 (b-modal의 @ok) 클릭 시\r\n */\r\nfunction onSaveClick() {\r\n  // 비밀번호 불일치면 바로 알림\r\n  if (isPasswordMismatch.value) {\r\n    // 부모에게 알려주기\r\n    emits('confirmSave', {\r\n      isMismatch: true,\r\n      isChanged: false,\r\n      userData: tempUser.value,\r\n      statusChangedFlag: false\r\n    });\r\n    return;\r\n  }\r\n\r\n  // 원본과 비교해서 변경 여부 체크\r\n  const original = JSON.stringify(props.user);\r\n  const current = JSON.stringify(tempUser.value);\r\n  const isChanged = (original !== current);\r\n\r\n  // 상태 변경 여부 (입사/퇴사)\r\n  const statusChangedFlag = (tempUser.value.status !== props.user.status);\r\n\r\n  // 부모에게 저장 확인 이벤트\r\n  emits('confirmSave', {\r\n    isMismatch: false,\r\n    isChanged,\r\n    userData: tempUser.value,\r\n    statusChangedFlag\r\n  });\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 모달 전체 배경, 다이얼로그, 내용 등에 대한 CSS */\r\n/* (BootstrapVue의 .modal-* 클래스와 겹칠 수 있으므로 필요 없으면 제거해도 됩니다.) */\r\n\r\n/* 비밀번호 불일치 경고 */\r\n.userPasswordNotMatch {\r\n  color: red;\r\n}\r\n/* 폼 그룹(한 줄 표현) */\r\n.user-detail-group {\r\n  margin-bottom: 10px !important;\r\n}\r\n/* 우편번호 그룹 */\r\n#userAddress {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n/* 반응형 모달 등은 BootstrapVue가 기본적으로 지원하므로\r\n   직접 .modal, .modal-dialog, .modal-content 등을 커스텀할 필요가 적습니다.\r\n\r\n   필요하다면 아래처럼 커스텀할 수 있음 (예시)\r\n   .modal-dialog {\r\n     max-width: 400px;\r\n   }\r\n*/\r\n</style>\r\n","import script from \"./UserManagementModifyModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UserManagementModifyModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UserManagementModifyModal.vue?vue&type=style&index=0&id=ee6e6828&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-ee6e6828\"]])\n\nexport default __exports__","<!--\r\n  예시 코드:\r\n    <DefaultSelect\r\n      v-model=\"selectedValue\"                   // 선택된 값 (v-model)\r\n      :options=\"[\r\n         { value: '', label: '옵션 선택' },\r\n         { value: 'option1', label: '옵션 1' },\r\n         { value: 'option2', label: '옵션 2' }\r\n      ]\"                                        // 옵션 배열: 각 옵션은 value와 label을 포함함\r\n      placeholder=\"옵션을 선택하세요\"            // 선택되지 않았을 때 보여질 안내 문구\r\n      size=\"medium\"                             // 컴포넌트 크기: 'small', 'medium', 'large', 'full'\r\n      :disabled=\"false\"                         // 컴포넌트 비활성화 여부\r\n      @change=\"handleSelectChange\"              // 선택 값 변경 시 호출되는 이벤트\r\n    />\r\n-->\r\n\r\n<template>\r\n  <div class=\"default-select-wrapper\">\r\n    <select\r\n      :id=\"id\"\r\n      :value=\"modelValue\"\r\n      @change=\"onChange\"\r\n      :class=\"['default-select', sizeClass]\"\r\n      :disabled=\"disabled\"\r\n    >\r\n      <!-- placeholder가 있을 경우, 선택이 안 된 상태에 표시할 옵션 (선택 불가) -->\r\n      <option\r\n        v-if=\"placeholder\"\r\n        value=\"\"\r\n        disabled\r\n        hidden\r\n        :selected=\"modelValue === ''\"\r\n      >\r\n        {{ placeholder }}\r\n      </option>\r\n      <!-- 옵션 목록 렌더링 -->\r\n      <option\r\n        v-for=\"(option, index) in options\"\r\n        :key=\"index\"\r\n        :value=\"option.value\"\r\n      >\r\n        {{ option.label }}\r\n      </option>\r\n    </select>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n// import computed, defineProps, defineEmits from Vue\r\nimport { computed } from 'vue';\r\n\r\n// ------------------------------\r\n// Props 정의 (각 prop 위에 상세 주석 포함)\r\n// ------------------------------\r\n\r\n// modelValue: v-model로 바인딩되는 값 (선택된 옵션의 값)\r\n// 타입: String 또는 Number, 기본값은 빈 문자열 ('')\r\nconst props = defineProps({\r\n  // id: select 요소에 적용할 id 값 (문자열)\r\n  id: {\r\n    type: String,\r\n    required: false,\r\n    default: ''\r\n  },\r\n  modelValue: {\r\n    type: [String, Number],\r\n    required: false,\r\n    default: ''\r\n  },\r\n  // options: 선택 옵션 배열. 각 옵션은 { value: any, label: string } 형태의 객체여야 함.\r\n  options: {\r\n    type: Array,\r\n    required: true,\r\n    default: () => []\r\n  },\r\n  // placeholder: 옵션이 선택되지 않았을 때 보여질 안내 문구 (문자열).\r\n  placeholder: {\r\n    type: String,\r\n    required: false,\r\n    default: ''\r\n  },\r\n  // size: 컴포넌트의 사이즈를 지정 ('xsmall', 'small', 'medium', 'large', 'full').\r\n  // 선택된 값에 따라 내부 스타일 (padding, font-size 등)을 조절함.\r\n  size: {\r\n    type: String,\r\n    default: 'medium',\r\n    validator: value => ['xsmall', 'small', 'medium', 'large', 'full'].includes(value)\r\n  },\r\n  // disabled: 컴포넌트의 비활성화 여부. true이면 선택할 수 없음.\r\n  disabled: {\r\n    type: Boolean,\r\n    required: false,\r\n    default: false\r\n  }\r\n});\r\n\r\n// defineEmits: v-model 업데이트와 change 이벤트를 발생시키기 위한 이벤트 정의\r\nconst emit = defineEmits([\r\n  'update:modelValue',  // v-model 업데이트 이벤트\r\n  'change'              // 선택 값 변경 시 외부에 알리기 위한 이벤트\r\n]);\r\n\r\n// sizeClass: size prop에 따른 CSS 클래스 결정 (computed 속성)\r\nconst sizeClass = computed(() => {\r\n  return `default-select--${props.size}`;\r\n});\r\n\r\n// onChange: select 요소의 change 이벤트 핸들러\r\nfunction onChange(event) {\r\n  const selectedValue = event.target.value;\r\n  // v-model 업데이트 이벤트 발생\r\n  emit('update:modelValue', selectedValue);\r\n  // change 이벤트 발생 (외부 핸들러에서 사용 가능)\r\n  emit('change', selectedValue);\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* DefaultSelect의 기본 래퍼 */\r\n.default-select-wrapper {\r\n  position: relative;\r\n  display: inline-block;\r\n}\r\n\r\n/* 기본 select 스타일 */\r\n.default-select {\r\n  display: block;               /* 블록 요소로 만들어 줄 바꿈 보장 */\r\n  /* width: auto;                  w-auto: 컨텐츠 크기에 맞게 너비 자동 조절 */\r\n  height: calc(1.5em + 0.75rem + 2px);  /* 기본 높이 (부트스트랩 기본 높이 참고) */\r\n  padding: 0.375rem 0.75rem;     /* 내부 여백 */\r\n  line-height: 1.5;             /* 줄 높이 */\r\n  color: #495057;               /* 텍스트 색상 */\r\n  background-color: #fff;       /* 배경색 */\r\n  background-clip: padding-box; /* 패딩 영역까지 배경색 적용 */\r\n  border: 1px solid #ced4da;    /* 경계선 */\r\n  border-radius: 0.25rem;       /* 약간의 둥근 모서리 */\r\n  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\r\n  appearance: none; /* 기본 브라우저 스타일 제거 */\r\n}\r\n\r\n/* 드롭다운 화살표 아이콘 추가 (Bootstrap 스타일) */\r\n.default-select {\r\n  background-image: url(\"data:image/svg+xml;charset=UTF-8,%3Csvg viewBox='0 0 16 16' fill='%23495057' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M7.247 11.14L2.451 5.658c-.566-.614-.106-1.658.633-1.658h10.433c.74 0 1.2 1.044.633 1.658l-4.796 5.482a.75.75 0 0 1-1.137 0z'/%3E%3C/svg%3E\");\r\n  background-repeat: no-repeat;\r\n  background-position: right 0.75rem center;\r\n  background-size: 12px;\r\n  padding-right: 25px !important; /* 화살표 아이콘 공간 확보 */\r\n}\r\n\r\n/* 옵션 리스트 (드롭다운) 스타일 */\r\n.default-select option {\r\n  padding: 10px;\r\n  font-size: 1rem;\r\n  background-color: #fff;\r\n  color: #495057;\r\n}\r\n\r\n/* 포커스 시 테두리 색상 변경 */\r\n.default-select:focus {\r\n  border-color: #80bdff;\r\n  outline: 0;\r\n  box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);\r\n}\r\n\r\n/* 비활성화(disabled) 상태 스타일 */\r\n.default-select:disabled {\r\n  background-color: #f5f5f5;\r\n  cursor: not-allowed;\r\n  opacity: 0.6;\r\n}\r\n\r\n/* 사이즈에 따른 스타일 조절 */\r\n/* xsmall */\r\n.default-select--xsmall {\r\n  width: 100px;\r\n  font-size: 0.8rem;\r\n}\r\n/* small */\r\n.default-select--small {\r\n  width: 127px;\r\n  font-size: 0.8rem;\r\n}\r\n/* medium: 기본 스타일 */\r\n.default-select--medium {\r\n  width: 200px;\r\n  font-size: 0.9rem;\r\n}\r\n/* large */\r\n.default-select--large {\r\n  width: 300px;\r\n  font-size: 1rem;\r\n}\r\n/* full */\r\n.default-select--full {\r\n  width: 100%;\r\n  font-size: 1.2rem;\r\n}\r\n\r\n@media (max-width: 1200px) {\r\n  /* 사이즈에 따른 스타일 조절 */\r\n  .default-select--xsmall {\r\n    width: 85px;\r\n    font-size: 0.65rem !important;\r\n  }\r\n  .default-select--small {\r\n    width: 95px;\r\n    font-size: 0.65rem !important;\r\n  }\r\n  .default-select--medium {\r\n    width: 150px;\r\n    font-size: 0.7rem !important;\r\n  }\r\n  .default-select--large {\r\n    width: 200px;\r\n    font-size: 0.75rem !important;\r\n  }\r\n  .default-select--full {\r\n    width: 100%;\r\n    font-size: 0.8rem !important;\r\n  }\r\n}\r\n\r\n@media (max-width: 500px) {\r\n  .default-select--xsmall {\r\n    width: 75px;\r\n    font-size: 0.55rem !important;\r\n  }\r\n  .default-select--small {\r\n    width: 80px;\r\n    font-size: 0.55rem !important;\r\n  }\r\n  .default-select--medium {\r\n    width: 120px;\r\n    font-size: 0.6rem !important;\r\n  }\r\n  .default-select--large {\r\n    width: 150px;\r\n    font-size: 0.65rem !important;\r\n  }\r\n  .default-select--full {\r\n    width: 100%;\r\n    font-size: 0.7rem !important;\r\n  }\r\n}\r\n</style>\r\n","import script from \"./DefaultSelect.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DefaultSelect.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DefaultSelect.vue?vue&type=style&index=0&id=50b823d2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-50b823d2\"]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <!-- 메인 콘텐츠 영역 -->\r\n    <div class=\"content\">\r\n      <h2 class=\"content-title\">사용자 관리</h2>\r\n      <p class=\"content-sub-title\">사용자의 정보를 관리하는 페이지</p>\r\n\r\n      <div class=\"search-controls\">\r\n        <!-- 부서, 팀 선택 그룹 -->\r\n        <div class=\"d-flex align-items-center department-group mt-2\">\r\n          <label for=\"department\" class=\"mr-2\">부서 :</label>\r\n          <DefaultSelect\r\n            id=\"department\"\r\n            v-model=\"selectedDepartment\"\r\n            :options=\"departmentsOptions\"\r\n            placeholder=\"부서 선택\"\r\n            @change=\"updateTeams\"\r\n            size=\"small\"\r\n          />\r\n          <label for=\"team\" class=\"mr-2 label-team\">팀 :</label>\r\n          <DefaultSelect\r\n            id=\"team\"\r\n            v-model=\"selectedTeam\"\r\n            :options=\"teamsOptions\"\r\n            placeholder=\"팀 선택\"\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n        <!-- 이름 검색 그룹 -->\r\n        <div class=\"d-flex align-items-center name-group mt-2\">\r\n          <label for=\"nameSearch\" class=\"mr-2\">이름 :</label>\r\n          <input\r\n            type=\"text\"\r\n            class=\"form-control w-auto\"\r\n            id=\"nameSearch\"\r\n            v-model=\"nameSearch\"\r\n            placeholder=\"이름 입력\"\r\n          />\r\n          <DefaultButton\r\n            @click=\"search\"\r\n            size=\"small\">\r\n            조회\r\n          </DefaultButton>\r\n        </div>\r\n      </div>\r\n\r\n      <hr/>\r\n\r\n      <!-- 테이블 보기 (스크롤로 10개 정도 보이도록) -->\r\n      <DefaultTable\r\n        :noColumns=\"true\"\r\n        :columns=\"columns\"\r\n        :data=\"filteredData\"\r\n        :rowClick=\"(item) => showModal(item)\"\r\n        :ellipsisWidth=\"50\"\r\n      />\r\n\r\n      <!-- 사용자 세부 정보 모달을 분리한 컴포넌트 -->\r\n      <UserManagementModifyModal\r\n        :visible=\"modalVisible\"\r\n        :isAdmin=\"isAdmin\"\r\n        :user=\"selectedUser\"\r\n        @close=\"modalVisible = false\"\r\n        @confirmSave=\"handleSaveClick\"\r\n      />\r\n\r\n      <!-- 저장 확인 모달 -->\r\n      <AlertModal \r\n        :isVisible=\"confirmationModalVisible\" \r\n        :disableBackgroundClose=\"true\"\r\n        title=\"저장 확인\" \r\n        cancelText=\"취소\"\r\n        confirmText=\"확인\" \r\n        @close=\"confirmationModalVisible = false\" \r\n        @confirm=\"saveUserDetails\"\r\n      >\r\n        <template #body>\r\n          <p>변경 사항을 저장하시겠습니까?</p>\r\n          <p v-if=\"statusChanged\" style=\"color: red;\">입사/퇴사 처리가 포함되어 있습니다.</p>\r\n        </template>\r\n      </AlertModal>\r\n\r\n      <!-- 변경된 데이터가 없을 때 표시할 모달 -->\r\n      <AlertModal \r\n        :isVisible=\"noChangesModalVisible\" \r\n        title=\"알림\" \r\n        confirmText=\"확인\" \r\n        @close=\"closeNoChangesModal\"\r\n        @confirm=\"closeNoChangesModal\"\r\n      >\r\n        <template #body>\r\n          <p>변경된 데이터가 없습니다.</p>\r\n        </template>\r\n      </AlertModal>\r\n\r\n      <!-- 저장 완료 모달 -->\r\n      <AlertModal \r\n        :isVisible=\"saveCompleteModalVisible\" \r\n        :title=\"saveCompleteMessageTitle\" \r\n        confirmText=\"확인\"\r\n        @close=\"closeSaveCompleteModal\" \r\n        @confirm=\"closeSaveCompleteModal\"\r\n      >\r\n        <template #body>\r\n          <p>{{ saveCompleteMessage }}</p>\r\n        </template>\r\n      </AlertModal>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue';\r\nimport axios from 'axios';\r\nimport AlertModal from '@/components/common/modal/AlertModal.vue';\r\nimport DefaultButton from '@/components/common/button/DefaultButton.vue';\r\nimport UserManagementModifyModal from '@/components/hrm/UserManagementModifyModal.vue';\r\nimport DefaultTable from '@/components/common/table/DefaultTable.vue';\r\nimport DefaultSelect from '@/components/common/select/DefaultSelect.vue';\r\n\r\n// 관리자 여부\r\nconst isAdmin = ref(true);\r\n\r\n// 모달 관련 상태\r\nconst modalVisible = ref(false);\r\nconst confirmationModalVisible = ref(false);\r\nconst saveCompleteModalVisible = ref(false);\r\nconst noChangesModalVisible = ref(false);\r\nconst saveCompleteMessageTitle = ref('저장 완료');\r\nconst saveCompleteMessage = ref('저장되었습니다.');\r\n\r\n// 테이블 컬럼\r\nconst columns = [\r\n  { key: 'name',       label: '이름', width: 60 },\r\n  { key: 'email',      label: '이메일', width: 160 }, \r\n  { key: 'department', label: '부서', width: 100 }, \r\n  { key: 'team',       label: '팀', width: 100 },\r\n  { key: 'position',   label: '직책', width: 60 },\r\n  { key: 'status',     label: '상태', width: 50 },\r\n];\r\n\r\n// 사용자 선택 및 원본 정보\r\nconst selectedUser = ref({\r\n  name: '',\r\n  email: '',\r\n  password: '',\r\n  department: '',\r\n  team: '',\r\n  position: '',\r\n  joinDate: '',\r\n  leaveDate: '',\r\n  status: '입사',\r\n  birthDate: '',\r\n  employmentType: '정규직',\r\n  zipCode: '',\r\n  address: '',\r\n  location: ''\r\n});\r\nconst originalUser = ref({ ...selectedUser.value });\r\n\r\n// 상태 변경 감지 (입사/퇴사 등)\r\nconst statusChanged = ref(false);\r\n// 데이터 변경 감지\r\nconst dataChanged = ref(false);\r\n\r\n// 부서 및 팀 선택을 위한 상태\r\nconst selectedDepartment = ref('');\r\nconst selectedTeam = ref('');\r\nconst departments = ref([]);\r\nconst teams = ref({});\r\nconst availableTeams = ref([]);\r\n\r\n// 부서, 팀 데이터 가져오기\r\nconst fetchDepartments = async () => {\r\n  try {\r\n    // 예시 데이터를 직접 할당\r\n    const departmentData = [\r\n      {\r\n        \"name\": \"미지정\",\r\n        \"teams\": [\"영업\"]\r\n      },\r\n      {\r\n        \"name\": \"SI사업본부\",\r\n        \"teams\": [\"프레임워크\", \"미지정\"]\r\n      },\r\n      {\r\n        \"name\": \"AI사업본부\",\r\n        \"teams\": [\"RPA\"]\r\n      },\r\n      {\r\n        \"name\": \"경영관리부\",\r\n        \"teams\": [\"경영\", \"영업\"]\r\n      }\r\n    ];\r\n\r\n    departments.value = departmentData.map(dep => dep.name);\r\n    teams.value = departmentData.reduce((acc, dep) => {\r\n      acc[dep.name] = dep.teams;\r\n      return acc;\r\n    }, {});\r\n  } catch (error) {\r\n    console.error('Error fetching departments:', error);\r\n  }\r\n};\r\n\r\n// 부서 변경 시 팀 업데이트\r\nconst updateTeams = () => {\r\n  availableTeams.value = teams.value[selectedDepartment.value] || [];\r\n  selectedTeam.value = '';\r\n};\r\n\r\n// 부서 옵션 (DefaultSelect - computed)\r\n// 각 부서를 { value, label } 객체로 변환하며 첫 옵션은 안내 문구\r\nconst departmentsOptions = computed(() => {\r\n  return [{ value: '', label: '부서 선택' }, ...departments.value.map(dep => ({ value: dep, label: dep }))];\r\n});\r\n\r\n// 팀 옵션 (DefaultSelect - computed)\r\nconst teamsOptions = computed(() => {\r\n  return [{ value: '', label: '팀 선택' }, ...availableTeams.value.map(team => ({ value: team, label: team }))];\r\n});\r\n\r\n// 사용자 리스트(예시)\r\nconst data = ref([\r\n  { name: '권범준', email: 'qjawns0618@kpcnc.co.kr', password: '7777', department: 'SI사업본부', team: '프레임워크', position: '책임', joinDate: '2022-01-01', leaveDate: '', status: '입사', birthDate: '1990-01-01', employmentType: '정규직', zipCode: '12345', address: '서울 강남구', location: '서울' },\r\n  { name: '권범준', email: 'qjawns0618@kpcnc.co.kr', password: '7777', department: 'SI사업본부', team: '프레임워크', position: '책임', joinDate: '2022-01-01', leaveDate: '', status: '입사', birthDate: '1990-01-01', employmentType: '정규직', zipCode: '12345', address: '서울 강남구', location: '서울' },\r\n  { name: '권범준', email: 'qjawns0618@kpcnc.co.kr', password: '7777', department: 'SI사업본부', team: '프레임워크', position: '책임', joinDate: '2022-01-01', leaveDate: '', status: '입사', birthDate: '1990-01-01', employmentType: '정규직', zipCode: '12345', address: '서울 강남구', location: '서울' },\r\n  { name: '권범준', email: 'qjawns0618@kpcnc.co.kr', password: '7777', department: 'SI사업본부', team: '프레임워크', position: '책임', joinDate: '2022-01-01', leaveDate: '', status: '입사', birthDate: '1990-01-01', employmentType: '정규직', zipCode: '12345', address: '서울 강남구', location: '서울' },\r\n  { name: '김철수', email: 'kim@example.com', password: '1237', department: 'AI사업본부', team: 'RPA', position: '책임', joinDate: '2021-07-15', leaveDate: '2023-07-11', status: '퇴사', BirthDate: '1985-06-15', employmentType: '비정규직', zipCode: '67890', address: '부산 해운대구', location: '부산' },\r\n  { name: '김철수', email: 'kim@example.com', password: '1237', department: 'AI사업본부', team: 'RPA', position: '책임', joinDate: '2021-07-15', leaveDate: '2023-07-11', status: '퇴사', BirthDate: '1985-06-15', employmentType: '비정규직', zipCode: '67890', address: '부산 해운대구', location: '부산' },\r\n  { name: '이영희', email: 'lee@example.com', password: '1234', department: '경영관리부', team: '영업', position: '선임', joinDate: '2023-03-12', leaveDate: '', status: '입사', BirthDate: '1995-03-12', employmentType: '정규직', zipCode: '54321', address: '인천 서구', location: '인천' },\r\n  { name: '이영희', email: 'lee@example.com', password: '1234', department: '경영관리부', team: '영업', position: '선임', joinDate: '2023-03-12', leaveDate: '', status: '입사', BirthDate: '1995-03-12', employmentType: '정규직', zipCode: '54321', address: '인천 서구', location: '인천' },\r\n  { name: '이영희', email: 'lee@example.com', password: '1234', department: '경영관리부', team: '영업', position: '선임', joinDate: '2023-03-12', leaveDate: '', status: '입사', BirthDate: '1995-03-12', employmentType: '정규직', zipCode: '54321', address: '인천 서구', location: '인천' },\r\n  { name: '김지수', email: 'su@example.com', password: '1234', department: 'SI사업본부', team: '미지정', position: '선임', joinDate: '2024-07-12', leaveDate: '', status: '입사', BirthDate: '1992-03-12', employmentType: '정규직', zipCode: '7777', address: '강원', location: '속초' },\r\n  { name: '김지수', email: 'su@example.com', password: '1234', department: 'SI사업본부', team: '미지정', position: '선임', joinDate: '2024-07-12', leaveDate: '', status: '입사', BirthDate: '1992-03-12', employmentType: '정규직', zipCode: '7777', address: '강원', location: '속초' },\r\n  { name: '김지수', email: 'su@example.com', password: '1234', department: 'SI사업본부', team: '미지정', position: '선임', joinDate: '2024-07-12', leaveDate: '', status: '입사', BirthDate: '1992-03-12', employmentType: '정규직', zipCode: '7777', address: '강원', location: '속초' },\r\n  { name: '김지수', email: 'su@example.com', password: '1234', department: 'SI사업본부', team: '미지정', position: '선임', joinDate: '2024-07-12', leaveDate: '', status: '입사', BirthDate: '1992-03-12', employmentType: '정규직', zipCode: '7777', address: '강원', location: '속초' },\r\n]);\r\n\r\n// 검색어\r\nconst nameSearch = ref('');\r\n\r\n// 필터링된 데이터\r\nconst filteredData = computed(() => {\r\n  return data.value.filter(item => {\r\n    const departmentMatch = selectedDepartment.value\r\n      ? item.department === selectedDepartment.value\r\n      : true;\r\n    const teamMatch = selectedTeam.value\r\n      ? item.team === selectedTeam.value\r\n      : true;\r\n    const nameMatch = nameSearch.value\r\n      ? item.name.includes(nameSearch.value)\r\n      : true;\r\n    return departmentMatch && teamMatch && nameMatch;\r\n  });\r\n});\r\n\r\n// 검색\r\nconst search = () => {\r\n  // 기존엔 페이지네이션 currentPage=1로 이동했지만 이제 페이징 없음\r\n  // 필요 없으면 비워둠\r\n};\r\n\r\n// 사용자 클릭 시 모달 열기\r\nconst showModal = (user) => {\r\n  selectedUser.value = { ...user };\r\n  originalUser.value = { ...user };\r\n  statusChanged.value = false;\r\n  dataChanged.value = false;\r\n  modalVisible.value = true;\r\n};\r\n\r\n// 모달에서 저장버튼 누를 때(자식 컴포넌트 @confirmSave 이벤트)\r\nconst handleSaveClick = ({ isMismatch, isChanged, userData, statusChangedFlag }) => {\r\n  // 비밀번호 불일치인 경우\r\n  if (isMismatch) {\r\n    saveCompleteMessageTitle.value = '비밀번호 불일치';\r\n    saveCompleteMessage.value = '비밀번호와 재확인의 값이 일치하지 않습니다.';\r\n    saveCompleteModalVisible.value = true;\r\n    return;\r\n  }\r\n\r\n  // 변경 사항 없는 경우\r\n  if (!isChanged) {\r\n    noChangesModalVisible.value = true;\r\n    return;\r\n  }\r\n\r\n  // userData로 부모 컴포넌트의 selectedUser 갱신\r\n  selectedUser.value = { ...userData };\r\n\r\n  // 상태 변경 여부 저장해둠 (입사/퇴사)\r\n  statusChanged.value = statusChangedFlag;\r\n\r\n  // 최종 저장 확인 모달 열기\r\n  confirmationModalVisible.value = true;\r\n};\r\n\r\n// 실제로 DB 저장 호출\r\nconst saveUserDetails = () => {\r\n  // 모달 닫기\r\n  modalVisible.value = false;\r\n  confirmationModalVisible.value = false;\r\n\r\n  axios.post('/api/saveUser', selectedUser.value)\r\n    .then(response => {\r\n      console.log(response.data);\r\n      // 성공 시\r\n      saveCompleteMessageTitle.value = '저장 완료';\r\n      saveCompleteMessage.value = '저장되었습니다.';\r\n      saveCompleteModalVisible.value = true;\r\n    })\r\n    .catch(error => {\r\n      console.log(error);\r\n      // 실패 시\r\n      saveCompleteMessageTitle.value = '저장 실패';\r\n      saveCompleteMessage.value = '저장에 실패했습니다.(기능 미구현)';\r\n      saveCompleteModalVisible.value = true;\r\n    });\r\n};\r\n\r\n// '변경된 데이터가 없습니다' 모달 닫기\r\nconst closeNoChangesModal = () => {\r\n  noChangesModalVisible.value = false;\r\n};\r\n\r\n// 저장 완료 모달 닫기\r\nconst closeSaveCompleteModal = () => {\r\n  saveCompleteModalVisible.value = false;\r\n};\r\n\r\n// onMounted 시 부서 정보 로딩\r\nonMounted(() => {\r\n  fetchDepartments();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\nhr {\r\n  margin-bottom: 0px;\r\n}\r\n\r\n/* 검색 영역 반응형 */\r\n.label-team {\r\n  margin-left: 10px;\r\n}\r\n\r\n/* 테이블 스타일 */\r\n.table {\r\n  width: 100%;\r\n  margin: 0; /* 상단 마진은 .table-container 쪽에서 처리 */\r\n}\r\n  \r\n/* 테이블 컨테이너에 스크롤 추가하여 10개 행만 보이는 정도의 높이 설정(대략 350~400px) */\r\n.table-container {\r\n  max-height: 400px; /* 원하는 높이로 조절 */\r\n  overflow-y: auto;\r\n  margin-bottom: 60px;\r\n}\r\n\r\n@media (min-width: 1201px) {\r\n  .search-controls {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: flex-end;\r\n  }\r\n  .search-controls > div {\r\n    margin-right: 1rem;\r\n    margin-bottom: 0;\r\n  }\r\n  #nameSearch {\r\n    font-size: 1rem;\r\n  }\r\n}\r\n\r\n@media (max-width: 1200px) {\r\n  .search-controls {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-end;\r\n  }\r\n  .search-controls > div {\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n  }\r\n}\r\n</style>\r\n","import script from \"./UserManagement.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UserManagement.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UserManagement.vue?vue&type=style&index=0&id=7e73f782&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7e73f782\"]])\n\nexport default __exports__","<template>\r\n  <transition name=\"fade\">\r\n    <div \r\n      v-if=\"isVisible\" \r\n      class=\"custom-modal-pop-up\" \r\n      :style=\"{ zIndex: 1100 + props.zIndex }\"\r\n      @click.self=\"handleBackgroundClick\"\r\n    >\r\n      <div class=\"custom-modal-pop-up-dialog\">\r\n        <div class=\"custom-modal-pop-up-content\">\r\n          <div class=\"custom-modal-pop-up-header\">\r\n            <h5>{{ title }}</h5>\r\n          </div>\r\n          <div class=\"custom-modal-pop-up-body\">\r\n            <input type=\"text\" v-model=\"inputValue\" class=\"form-control\" />\r\n          </div>\r\n          <div class=\"custom-modal-pop-up-footer\">\r\n            <!-- 취소 버튼: cancelText가 있을 때만 렌더링 -->\r\n            <button v-if=\"cancelText\" type=\"button\" class=\"btn btn-secondary\" @click=\"closeModal\">{{ cancelText }}</button>\r\n            <button type=\"button\" class=\"btn btn-primary\" @click=\"confirmEdit\">{{ confirmText }}</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </transition>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, defineProps, defineEmits, watch } from 'vue';\r\n\r\nconst props = defineProps({\r\n  isVisible: Boolean,\r\n  title: {\r\n    type: String,\r\n    default: 'Edit Modal',\r\n  },\r\n  confirmText: {\r\n    type: String,\r\n    default: 'Save',\r\n  },\r\n  cancelText: {\r\n    type: String,\r\n    default: 'Cancel',\r\n  },\r\n  value: {\r\n    type: String,\r\n    default: '',\r\n  },\r\n  disableBackgroundClose: {\r\n    type: Boolean,\r\n    default: false,\r\n  },\r\n  zIndex: {\r\n    type: Number,\r\n    default: 0, // 기본값은 0 (1100으로 더해질 값)\r\n  },\r\n});\r\n\r\nconst emits = defineEmits(['confirm', 'close', 'update:value']);\r\n\r\nconst inputValue = ref(props.value);\r\n\r\n// Watch for prop changes to update the input value\r\nwatch(\r\n  () => props.value,\r\n  (newValue) => {\r\n    inputValue.value = newValue;\r\n  }\r\n);\r\n\r\nconst handleBackgroundClick = () => {\r\n  if (!props.disableBackgroundClose) {\r\n    closeModal();\r\n  }\r\n};\r\n\r\nconst closeModal = () => {\r\n  emits('close');\r\n};\r\n\r\nconst confirmEdit = () => {\r\n  emits('update:value', inputValue.value);\r\n  emits('confirm');\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* 기존 스타일 */\r\n.custom-modal-pop-up {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 1100;\r\n}\r\n\r\n.custom-modal-pop-up-dialog {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.custom-modal-pop-up-content {\r\n  background-color: #fff;\r\n  border-radius: 8px;\r\n  padding: 20px;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.custom-modal-pop-up-header h5 {\r\n  font-size: 1rem;\r\n  text-align: left;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.custom-modal-pop-up-body {\r\n  padding: 10px 0;\r\n  text-align: left;\r\n  font-size: 0.9rem;\r\n}\r\n\r\n.custom-modal-pop-up-footer {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n}\r\n\r\n.custom-modal-pop-up-footer .btn {\r\n  min-width: 80px;\r\n  margin-left: 10px;\r\n}\r\n\r\n.custom-modal-pop-up-header {\r\n  border-bottom: none;\r\n}\r\n\r\n.custom-modal-pop-up-footer {\r\n  border-top: none;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\n/* 애니메이션 효과 */\r\n.fade-enter-active {\r\n  transition: opacity 0.2s ease;\r\n}\r\n\r\n.fade-enter-from {\r\n  opacity: 0;\r\n}\r\n\r\n/* 반응형: 모바일 환경에서 폰트 크기 조정 */\r\n@media (max-width: 1200px) {\r\n  .custom-modal-pop-up-content {\r\n    width: 70%;\r\n  }\r\n\r\n  .custom-modal-pop-up-footer .btn {\r\n    font-size: 0.6rem !important; /* 모바일에서 버튼 글자 크기 */\r\n    padding: 0.2rem 0.4rem !important; /* 모바일에서 버튼 크기 */\r\n    min-width: 50px;\r\n  }\r\n\r\n  .custom-modal-pop-up-header h5 {\r\n    font-size: 0.8rem;\r\n    margin-bottom: 8px;\r\n  }\r\n\r\n  .custom-modal-pop-up-body {\r\n    font-size: 0.75rem;\r\n  }\r\n}\r\n</style>","import script from \"./EditModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./EditModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./EditModal.vue?vue&type=style&index=0&id=bc84526a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-bc84526a\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"content\">\r\n    <h2 class=\"content-title\">부서 및 팀 관리</h2>\r\n    <p class=\"content-sub-title\">부서 및 팀을 관리하는 페이지입니다.</p>\r\n\r\n    <p class=\"department-coment\">새로운 부서 추가</p>\r\n\r\n    <!-- 부서 추가 -->\r\n    <div class=\"d-flex justify-content-between align-items-center mt-4 department-search-line\" style=\"width: 100%;\">\r\n      <div class=\"input-group\" style=\"width: 40%;\">\r\n        <input v-model=\"newDepartment\" type=\"text\" class=\"form-control department-input\" placeholder=\"부서 이름\" />\r\n        <button class=\"btn btn-primary\" @click=\"addDepartment\">부서 추가</button>\r\n      </div>\r\n      <!-- 저장 버튼 -->\r\n      <DefaultButton \r\n        color=\"green\"\r\n        @click=\"saveDepartments\">\r\n        저장\r\n      </DefaultButton>\r\n    </div>\r\n\r\n    <hr />\r\n\r\n    <!-- 부서 및 팀 관리 아코디언 -->\r\n    <div id=\"departmentAccordion\" class=\"department-list\">\r\n      <div class=\"accordion\" v-for=\"(department, index) in departments\" :key=\"index\">\r\n        <div class=\"accordion-item\">\r\n          <h2 class=\"accordion-header\" :id=\"'heading' + index\">\r\n            <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\"\r\n              :data-bs-target=\"'#collapse' + index\" aria-expanded=\"false\" :aria-controls=\"'collapse' + index\">\r\n              <strong>{{ department.name }}</strong>\r\n            </button>\r\n            <button class=\"btn btn-sm btn-outline-danger ms-2 bnt-department-delete\" @click=\"openDeleteDepartmentModal(index)\">\r\n              부서 삭제\r\n            </button>\r\n          </h2>\r\n          <div \r\n            :id=\"'collapse' + index\" \r\n            class=\"accordion-collapse collapse\" \r\n            :aria-labelledby=\"'heading' + index\"\r\n            data-bs-parent=\"#departmentAccordion\"\r\n          >\r\n            <div class=\"accordion-body\">\r\n              <ul class=\"list-group\">\r\n                <li v-for=\"(team, teamIndex) in department.teams\" :key=\"teamIndex\"\r\n                  class=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                  {{ team }}\r\n                  <span>\r\n                    <button class=\"btn btn-sm btn-outline-primary me-2 list-item\" @click=\"openEditTeamModal(index, teamIndex)\">\r\n                      수정\r\n                    </button>\r\n                    <button class=\"btn btn-sm btn-outline-danger list-item\" @click=\"openDeleteTeamModal(index, teamIndex)\">\r\n                      삭제\r\n                    </button>\r\n                  </span>\r\n                </li>\r\n              </ul>\r\n\r\n              <!-- 팀 추가 -->\r\n              <div class=\"btn-team-add-contain\">\r\n                <input v-model=\"newTeam\" class=\"form-control btn-team-add\" placeholder=\"새로운 팀 추가\" />\r\n                <!-- 저장 버튼 -->\r\n                <DefaultButton \r\n                  align=\"right\"\r\n                  size=\"small\"\r\n                  @click=\"addTeam(index)\">\r\n                  저장\r\n                </DefaultButton>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <AlertModal \r\n      :isVisible=\"confirmationDepartmentModalVisible\" \r\n      :disableBackgroundClose=\"true\"\r\n      title=\"부서 삭제 확인\" \r\n      cancelText=\"취소\"\r\n      confirmText=\"확인\" \r\n      @close=\"confirmationDepartmentModalVisible = false\" \r\n      @confirm=\"deleteDepartment\">\r\n      <template #body>\r\n        <p>정말로 부서를 삭제하시겠습니까?</p>\r\n      </template>\r\n    </AlertModal>\r\n\r\n    <AlertModal \r\n      :isVisible=\"confirmationTeamModalVisible\" \r\n      :disableBackgroundClose=\"true\"\r\n      title=\"팀 삭제 확인\" \r\n      cancelText=\"취소\"\r\n      confirmText=\"확인\" \r\n      @close=\"confirmationTeamModalVisible = false\" \r\n      @confirm=\"deleteTeam\">\r\n      <template #body>\r\n        <p>정말로 팀을 삭제하시겠습니까?</p>\r\n      </template>\r\n    </AlertModal>\r\n\r\n    <EditModal \r\n      :isVisible=\"editTeamModalVisible\"\r\n      title=\"팀 수정\"\r\n      :value=\"editingTeam\"\r\n      confirmText=\"확인\"\r\n      cancelText=\"취소\"\r\n      @close=\"editTeamModalVisible = false\"\r\n      @confirm=\"confirmEditTeam\"\r\n      @update:value=\"editingTeam = $event\"\r\n    ></EditModal>\r\n\r\n    <!-- 저장 확인 모달 -->\r\n    <AlertModal \r\n      :isVisible=\"confirmSaveModalVisible\"\r\n      confirmText=\"확인\"\r\n      cancelText=\"취소\"\r\n      @close=\"confirmSaveModalVisible = false\"\r\n      @confirm=\"confirmSaveDepartments\">\r\n      <template #body>\r\n        <p style=\"color: red;\"><strong>※ 주의 ※</strong></p>\r\n        <p style=\"color: red;\">부서, 직책 수정 및 삭제 시 기존 유저는 미지정으로 등록되며 등록을 다시 해줘야 합니다. 진행하시겠습니까?</p>\r\n      </template>\r\n    </AlertModal>\r\n\r\n    <!-- 저장 완료 여부 -->\r\n    <AlertModal \r\n      :isVisible=\"isModalVisible\" \r\n      :disableBackgroundClose=\"true\"\r\n      :title=\"modalTitle\" \r\n      confirmText=\"확인\" \r\n      @confirm=\"isModalVisible = false\">\r\n      <template #body>\r\n        <p>{{ modalMessage }}</p>\r\n      </template>\r\n    </AlertModal>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue';\r\nimport axios from 'axios';\r\nimport AlertModal from '@/components/common/modal/AlertModal.vue';\r\nimport EditModal from '@/components/common/modal/EditModal.vue';\r\nimport DefaultButton from '@/components/common/button/DefaultButton.vue';\r\n\r\n// 부서 및 팀 데이터\r\nconst departments = ref([\r\n  { name: 'SI사업본부', teams: ['프레임워크','은행'] },\r\n  { name: 'AI사업본부', teams: ['RPA','빅데이터'] },\r\n  { name: '경영관리부', teams: ['영업','경영'] },\r\n]);\r\n\r\n// 새로운 부서 및 팀 추가를 위한 변수\r\nconst newDepartment = ref('');\r\nconst newTeam = ref('');\r\n\r\n// 모달 표시를 위한 상태 변수\r\nconst isModalVisible = ref(false);\r\nconst modalTitle = ref('');\r\nconst modalMessage = ref('');\r\n\r\nconst confirmationDepartmentModalVisible = ref(false);\r\nconst confirmationTeamModalVisible = ref(false);\r\nconst confirmSaveModalVisible = ref(false); // 저장 확인 모달 상태 추가\r\nconst selectedDepartmentIndex = ref(null);\r\nconst selectedTeamIndex = ref(null);\r\n\r\n// 수정 모달\r\nconst editTeamModalVisible = ref(false);\r\nconst editingTeam = ref('');\r\n\r\n// 부서 삭제 오픈 모달 함수\r\nconst openDeleteDepartmentModal = (index) => {\r\n  selectedDepartmentIndex.value = index;\r\n  confirmationDepartmentModalVisible.value = true;\r\n};\r\n\r\n// 부서 추가 함수\r\nconst addDepartment = () => {\r\n  if (newDepartment.value.trim() !== '') {\r\n    departments.value.push({ name: newDepartment.value, teams: [] });\r\n    newDepartment.value = ''; // 입력 필드 초기화\r\n  }\r\n};\r\n\r\n// 부서 삭제 함수\r\nconst deleteDepartment = () => {\r\n  if (selectedDepartmentIndex.value !== null) {\r\n    departments.value.splice(selectedDepartmentIndex.value, 1);\r\n    confirmationDepartmentModalVisible.value = false;\r\n    selectedDepartmentIndex.value = null; // 초기화\r\n  }\r\n};\r\n\r\n// 팀 추가 함수\r\nconst addTeam = (departmentIndex) => {\r\n  if (newTeam.value.trim() !== '') {\r\n    departments.value[departmentIndex].teams.push(newTeam.value);\r\n    newTeam.value = ''; // 입력 필드 초기화\r\n  }\r\n};\r\n\r\n// 팀 삭제 확인 모달 오픈 함수\r\nconst openDeleteTeamModal = (departmentIndex, teamIndex) => {\r\n  selectedDepartmentIndex.value = departmentIndex;\r\n  selectedTeamIndex.value = teamIndex;\r\n  confirmationTeamModalVisible.value = true;\r\n};\r\n\r\n// 팀 삭제 함수\r\nconst deleteTeam = () => {\r\n  if (selectedDepartmentIndex.value !== null && selectedTeamIndex.value !== null) {\r\n    departments.value[selectedDepartmentIndex.value].teams.splice(selectedTeamIndex.value, 1);\r\n    confirmationTeamModalVisible.value = false;\r\n    selectedDepartmentIndex.value = null;\r\n    selectedTeamIndex.value = null; // 초기화\r\n  }\r\n};\r\n\r\n// 팀 수정 모달 오픈 함수\r\nconst openEditTeamModal = (departmentIndex, teamIndex) => {\r\n  selectedDepartmentIndex.value = departmentIndex;\r\n  selectedTeamIndex.value = teamIndex;\r\n  editingTeam.value = departments.value[departmentIndex].teams[teamIndex];\r\n  editTeamModalVisible.value = true;\r\n};\r\n\r\n// 팀 수정 확인 함수\r\nconst confirmEditTeam = () => {\r\n  if (selectedDepartmentIndex.value !== null && selectedTeamIndex.value !== null && editingTeam.value.trim() !== '') {\r\n    departments.value[selectedDepartmentIndex.value].teams[selectedTeamIndex.value] = editingTeam.value;\r\n  }\r\n  editTeamModalVisible.value = false;\r\n};\r\n\r\n// 저장 확인 모달 열기\r\nconst saveDepartments = () => {\r\n  confirmSaveModalVisible.value = true; // 저장 확인 모달 열기\r\n};\r\n\r\n// 저장 확인 후 실제 저장 작업 수행\r\nconst confirmSaveDepartments = () => {\r\n  axios\r\n    .post('/api/departments', { departments: departments.value })\r\n    .then((response) => {\r\n      console.log('저장 성공:', response.data);\r\n      modalTitle.value = '저장 완료';\r\n      modalMessage.value = '부서 및 팀이 성공적으로 저장되었습니다.';\r\n      isModalVisible.value = true; // 모달 표시\r\n    })\r\n    .catch((error) => {\r\n      console.error('저장 실패:', error);\r\n      modalTitle.value = '저장 실패';\r\n      modalMessage.value = '저장에 실패했습니다. 다시 시도해 주세요.';\r\n      isModalVisible.value = true; // 모달 표시\r\n    });\r\n  confirmSaveModalVisible.value = false; // 저장 확인 모달 닫기\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.accordion-item {\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.department-coment {\r\n  margin: 0 0 10px 3px !important;\r\n  font-weight: 500;\r\n}\r\n\r\n.department-input {\r\n  margin: 0;\r\n}\r\n\r\n.list-group-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.mt-5 {\r\n  margin: 0px !important;\r\n}\r\n\r\n.bnt-department-delete {\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.accordion-header {\r\n  height: 80px;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.accordion-button {\r\n  padding: 10px !important;\r\n  margin-bottom: 5px;\r\n}\r\n\r\nhr {\r\n  margin-top: 0px;\r\n}\r\n\r\ninput {\r\n  margin-right: 5px;\r\n}\r\n\r\n.department-search-line {\r\n  margin: 0 0 10px 0 !important;\r\n}\r\n\r\n.accordion-body {\r\n  padding-top: 5px;\r\n}\r\n\r\n/* 스크롤 가능하도록 설정 */\r\n.department-list {\r\n  max-height: 400px; /* 스크롤 가능한 높이 설정 */\r\n  overflow-y: auto;\r\n  padding-right: 10px;\r\n}\r\n\r\n.btn-team-add-contain {\r\n  margin-top: 10px;\r\n}\r\n\r\n.btn-team-add {\r\n  margin-bottom: 5px;\r\n}\r\n\r\n@media (max-width: 1200px) {\r\n  .accordion-button {\r\n    font-size: 0.75rem !important;\r\n  }\r\n\r\n  .accordion-header {\r\n    margin-bottom: 3px;\r\n  }\r\n  \r\n  .list-group-item {\r\n    font-size: 0.65rem !important;\r\n  }\r\n  \r\n  .list-item, .btn-team-add {\r\n    font-size: 0.65rem !important;\r\n    padding: 4px 8.5px !important;\r\n  }\r\n\r\n  .bnt-department-delete {\r\n    font-size: 0.65rem !important;\r\n    /* padding: 5px !important; */\r\n  }\r\n\r\n  .align-items-center {\r\n    margin-bottom: 7px !important;\r\n    padding: 5px 10px 5px 10px;\r\n  }\r\n\r\n  .mt-3 {\r\n    margin-top: 0px !important;\r\n  }\r\n\r\n  .btn-team-add-contain {\r\n    margin-top: 2px;\r\n  }\r\n\r\n  .btn-team-add {\r\n    margin-bottom: 5px !important;\r\n  }\r\n}\r\n\r\n@media (max-width: 410px) {\r\n  .input-group {\r\n    width: 100px !important;\r\n    min-width: 140px !important;\r\n  }\r\n}\r\n</style>\r\n","import script from \"./DeptTeamManager.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DeptTeamManager.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DeptTeamManager.vue?vue&type=style&index=0&id=017335db&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-017335db\"]])\n\nexport default __exports__","<template>\n  <div>\n    <!-- Main Content Area -->\n    <div class=\"content\">\n      <h2 class=\"content-title\">실적 현황</h2>\n      <p class=\"content-sub-title\">개인 실적 현황 페이지</p>\n\n      <!-- Table View (Visible on larger screens) -->\n      <table class=\"table mt-3\" id=\"dataTable\" v-if=\"!isMobile\">\n        <thead>\n          <tr>\n            <th>실적</th>\n            <th>시작일</th>\n            <th>종료일</th>\n            <th>내용</th>\n            <th>성과</th>\n            <th>상태</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"item in paginatedData\" :key=\"item.date\">\n            <td>{{ item.performanceName }}</td>\n            <td>{{ item.beforeDate }}</td>\n            <td>{{ item.afterDate }}</td>\n            <td>{{ item.content }}</td>\n            <td>{{ item.performance }}</td>\n            <td :class=\"getStatusClass(item.status)\">{{ item.status }}</td>\n          </tr>\n        </tbody>\n      </table>\n\n      <!-- Card Layout View (Visible on smaller screens) -->\n      <div class=\"card-layout\" v-if=\"isMobile\">\n        <div class=\"card\" v-for=\"item in paginatedData\" :key=\"item.date\">\n          <div class=\"card-header\">\n            <p class=\"card-title\">{{ item.performanceName }}</p>\n          </div>\n          <div class=\"card-body\">\n            <p class=\"card-text\"><strong>시작일 : </strong> {{ item.beforeDate }} ~ <strong> 종료일 : </strong>{{\n        item.afterDate }}</p>\n            <p class=\"card-text\"><strong>내용:</strong> {{ item.content }}</p>\n            <p class=\"card-text\"><strong>성과:</strong> {{ item.performance }}</p>\n            <p class=\"card-text\">\n              <strong>상태:</strong> <span :class=\"getStatusClass(item.status)\">{{ item.status }}</span>\n            </p>\n          </div>\n        </div>\n      </div>\n\n      <!-- Pagination Buttons -->\n      <nav>\n        <ul class=\"pagination justify-content-center\" id=\"pagination\">\n          <li class=\"page-item\" :class=\"{ active: page === currentPage }\" v-for=\"page in totalPages\" :key=\"page\">\n            <a class=\"page-link\" href=\"#\" @click.prevent=\"goToPage(page)\">{{ page }}</a>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, onMounted } from 'vue';\n\nconst data = ref([\n  { beforeDate: '2024-10-03', afterDate: '2024-11-01', performanceName: 'CENTRALLY 포탈 개발', content: '분기 보고서 작성', performance: '대기 중', status: '대기 중' },\n  { beforeDate: '2024-08-01', afterDate: '2024-09-01', performanceName: '○○카드 프로젝트', content: '프로젝트 A 진행', performance: '완료', status: '완료' },\n  { beforeDate: '2024-09-02', afterDate: '2024-10-01', performanceName: '○○은행 프로젝트 계약', content: '팀 미팅', performance: '진행 중', status: '진행 중' },\n  // Additional data...\n]);\n\nconst currentPage = ref(1);\nconst itemsPerPage = ref(5);\nconst isMobile = ref(window.innerWidth <= 1200);\n\nconst totalPages = computed(() => Math.ceil(data.value.length / itemsPerPage.value));\n\nconst paginatedData = computed(() => {\n  const startIndex = (currentPage.value - 1) * itemsPerPage.value;\n  return data.value.slice(startIndex, startIndex + itemsPerPage.value);\n});\n\nconst goToPage = (page) => {\n  currentPage.value = page;\n};\n\nconst updateIsMobile = () => {\n  isMobile.value = window.innerWidth <= 1200;\n};\n\nconst getStatusClass = (status) => {\n  if (status === '진행 중') return 'text-primary'; // Blue\n  if (status === '완료') return 'text-success'; // Green\n  if (status === '대기 중') return 'text-warning'; // Orange\n  return '';\n};\n\nonMounted(() => {\n  window.addEventListener('resize', updateIsMobile);\n});\n</script>\n\n<style scoped>\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n#dataTable tbody tr:hover td {\n  background-color: #e7f1ff !important;\n}\n\n.text-muted {\n  margin-bottom: 10px;\n}\n</style>\n","import script from \"./PerformanceHistory.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PerformanceHistory.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PerformanceHistory.vue?vue&type=style&index=0&id=e8ddac82&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e8ddac82\"]])\n\nexport default __exports__","<template>\r\n  <!-- v-if=\"visible\" 로 모달 표시/숨김 제어 -->\r\n  <div v-if=\"visible\" class=\"modal-overlay\">\r\n    <div class=\"modal-container\">\r\n      <!-- 모달 헤더 -->\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">실적 추가</h5>\r\n        <button type=\"button\" class=\"btn-close\" @click=\"closeModal\" />\r\n      </div>\r\n\r\n      <!-- 모달 바디 -->\r\n      <div class=\"modal-body\">\r\n        <form @submit.prevent=\"submitForm\">\r\n          <!-- 시작일, 종료일 -->\r\n          <div class=\"d-flex\">\r\n            <div class=\"form-group w-50 me-2\">\r\n              <label for=\"fromDate\">시작일</label>\r\n              <input\r\n                type=\"date\"\r\n                class=\"form-control\"\r\n                id=\"fromDate\"\r\n                v-model=\"localFormData.fromDate\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group w-50\">\r\n              <label for=\"toDate\">종료일</label>\r\n              <input\r\n                type=\"date\"\r\n                class=\"form-control\"\r\n                id=\"toDate\"\r\n                v-model=\"localFormData.toDate\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <!-- 유형, 상태 -->\r\n          <div class=\"d-flex\">\r\n            <div class=\"form-group me-2\" style=\"flex: 4 3;\">\r\n              <label for=\"workType\">유형</label>\r\n              <select\r\n                class=\"form-control\"\r\n                id=\"workType\"\r\n                v-model=\"localFormData.workType\"\r\n              >\r\n                <option>프로젝트</option>\r\n                <option>회의</option>\r\n                <option>보고서 작성</option>\r\n              </select>\r\n            </div>\r\n            <div class=\"form-group\" style=\"flex: 4 1;\">\r\n              <label for=\"status\">상태</label>\r\n              <select\r\n                class=\"form-control\"\r\n                id=\"status\"\r\n                v-model=\"localFormData.status\"\r\n              >\r\n                <option>진행 중</option>\r\n                <option>완료</option>\r\n                <option>대기 중</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <!-- 성과 주제 -->\r\n          <div class=\"form-group\">\r\n            <label for=\"performanceTitle\">성과 주제</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"performanceTitle\"\r\n              placeholder=\"성과 주제를 입력해주세요\"\r\n              v-model=\"localFormData.performanceTitle\"\r\n            />\r\n          </div>\r\n          <br />\r\n          <!-- 성과 -->\r\n          <div class=\"form-group\">\r\n            <label for=\"performance\">성과</label>\r\n            <textarea\r\n              class=\"form-control\"\r\n              id=\"performance\"\r\n              placeholder=\"성과를 입력해주세요\"\r\n              v-model=\"localFormData.performance\"\r\n              rows=\"4\"\r\n            ></textarea>\r\n          </div>\r\n          <br />\r\n          <!-- 버튼 영역 -->\r\n          <div class=\"modal-footer\">\r\n            <DefaultButton \r\n              align=\"right\"\r\n              color=\"gray\"\r\n              @click=\"closeModal\"\r\n            >\r\n              취소\r\n            </DefaultButton>\r\n            <DefaultButton \r\n              align=\"right\"\r\n              @click=\"submitForm\"\r\n            >\r\n              저장\r\n            </DefaultButton>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch, defineProps, defineEmits } from 'vue';\r\nimport DefaultButton from '@/components/common/button/DefaultButton.vue';\r\n\r\nconst props = defineProps({\r\n  visible: { type: Boolean, default: false },\r\n  formData: {\r\n    type: Object,\r\n    default: () => ({\r\n      fromDate: '',\r\n      toDate: '',\r\n      workType: '프로젝트',\r\n      performanceTitle: '',\r\n      performance: '',\r\n      status: '진행 중',\r\n    }),\r\n  },\r\n});\r\nconst emits = defineEmits(['close', 'submit']);\r\n\r\n/**\r\n * 모달 내부에서 쓸 지역 데이터\r\n * => 부모로부터 받은 formData를 로컬 복사\r\n */\r\nconst localFormData = ref({ ...props.formData });\r\n\r\n/**\r\n * props.formData가 바뀔 때마다 localFormData를 다시 세팅\r\n */\r\nwatch(\r\n  () => props.formData,\r\n  (newVal) => {\r\n    localFormData.value = { ...newVal };\r\n  },\r\n  { deep: true }\r\n);\r\n\r\n/** 모달 닫기 */\r\nfunction closeModal() {\r\n  emits('close');\r\n}\r\n\r\n/** 폼 전송(저장) */\r\nfunction submitForm() {\r\n  /** \r\n   * \r\n   * 변경된 데이터 빈칸, 값 등 체크 로직 추가되야함\r\n   * \r\n   */\r\n  // localFormData를 그대로 부모에게 emit\r\n  emits('submit', { ...localFormData.value });\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n/* 간단한 커스텀 모달 스타일 (Bootstrap JS 사용 안 함, so no 17px padding) */\r\n\r\n/* 반투명 배경 */\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  z-index: 1050;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n/* 모달 컨테이너 */\r\n.modal-container {\r\n  background: #fff;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  border-radius: 4px;\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);\r\n  animation: fadeIn 0.3s;\r\n  padding: 1rem;\r\n}\r\n\r\n/* 헤더 */\r\n.modal-header {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n/* 바디, 푸터 */\r\n.modal-body {\r\n  max-height: 70vh;\r\n  overflow-y: auto;\r\n}\r\n.modal-footer {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 1rem;\r\n}\r\n\r\n/* 기존 .d-flex, .form-control, .me-2 등 Bootstrap 스타일 일부만 mimic */\r\n.d-flex {\r\n  display: flex;\r\n  gap: 0.5rem;\r\n}\r\n.w-50 {\r\n  width: 50%;\r\n}\r\n.form-control {\r\n  width: 100%;\r\n  padding: 0.4rem;\r\n  margin: 0;\r\n}\r\n.me-2 {\r\n  margin-right: 0.5rem;\r\n}\r\n\r\n@media (max-width: 1200px) {\r\n  .modal-container {\r\n    width: 80% !important;\r\n  }\r\n}\r\n\r\n/* 간단한 fadeIn 애니메이션 */\r\n@keyframes fadeIn {\r\n  from {\r\n    opacity: 0;\r\n    transform: scale(0.95);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: scale(1);\r\n  }\r\n}\r\n</style>\r\n","import script from \"./PerformanceManagementCreateModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PerformanceManagementCreateModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PerformanceManagementCreateModal.vue?vue&type=style&index=0&id=59a4a2d5&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-59a4a2d5\"]])\n\nexport default __exports__","<template>\r\n  <div v-if=\"visible\" class=\"modal-overlay\">\r\n    <div class=\"modal-container\">\r\n      <!-- 모달 헤더 -->\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\">실적 수정</h5>\r\n        <button type=\"button\" class=\"btn-close\" @click=\"closeModal\" />\r\n      </div>\r\n\r\n      <!-- 모달 바디 -->\r\n      <div class=\"modal-body\">\r\n        <form @submit.prevent=\"submitEdit\">\r\n          <!-- 시작일, 종료일 -->\r\n          <div class=\"d-flex\">\r\n            <div class=\"form-group w-50 me-2\">\r\n              <label for=\"editFromDate\">시작일</label>\r\n              <input\r\n                type=\"date\"\r\n                class=\"form-control\"\r\n                id=\"editFromDate\"\r\n                v-model=\"editData.fromDate\"\r\n              />\r\n            </div>\r\n            <div class=\"form-group w-50\">\r\n              <label for=\"editToDate\">종료일</label>\r\n              <input\r\n                type=\"date\"\r\n                class=\"form-control\"\r\n                id=\"editToDate\"\r\n                v-model=\"editData.toDate\"\r\n              />\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <!-- 유형, 상태 -->\r\n          <div class=\"d-flex\">\r\n            <div class=\"form-group me-2\" style=\"flex: 4 3;\">\r\n              <label for=\"editWorkType\">유형</label>\r\n              <select class=\"form-control\" id=\"editWorkType\" v-model=\"editData.workType\">\r\n                <option>프로젝트</option>\r\n                <option>회의</option>\r\n                <option>보고서 작성</option>\r\n              </select>\r\n            </div>\r\n            <div class=\"form-group\" style=\"flex: 4 1;\">\r\n              <label for=\"editStatus\">상태</label>\r\n              <select class=\"form-control\" id=\"editStatus\" v-model=\"editData.status\">\r\n                <option>진행 중</option>\r\n                <option>완료</option>\r\n                <option>대기 중</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <br />\r\n          <!-- 성과 주제 -->\r\n          <div class=\"form-group\">\r\n            <label for=\"editPerformanceTitle\">성과 주제</label>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control\"\r\n              id=\"editPerformanceTitle\"\r\n              placeholder=\"성과 주제를 입력해주세요\"\r\n              v-model=\"editData.performanceTitle\"\r\n            />\r\n          </div>\r\n          <br />\r\n          <!-- 성과 -->\r\n          <div class=\"form-group\">\r\n            <label for=\"editPerformance\">성과</label>\r\n            <textarea\r\n              class=\"form-control\"\r\n              id=\"editPerformance\"\r\n              placeholder=\"성과를 입력해주세요\"\r\n              v-model=\"editData.performance\"\r\n              rows=\"4\"\r\n            ></textarea>\r\n          </div>\r\n          <br />\r\n          <!-- 푸터 -->\r\n          <div class=\"modal-footer\">\r\n            <DefaultButton \r\n              align=\"right\"\r\n              color=\"gray\"\r\n              @click=\"closeModal\"\r\n            >\r\n              취소\r\n            </DefaultButton>\r\n            <DefaultButton \r\n              align=\"right\"\r\n              color=\"red\"\r\n              @click=\"showDeleteAlert\"\r\n            >\r\n              삭제\r\n            </DefaultButton>\r\n            <DefaultButton \r\n              align=\"right\"\r\n              @click=\"submitEdit\"\r\n            >\r\n              수정\r\n            </DefaultButton>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    <AlertModal \r\n      :isVisible=\"deleteConfirmVisible\" \r\n      :disableBackgroundClose=\"true\"\r\n      title=\"삭제 확인\" \r\n      confirmText=\"확인\" \r\n      cancelText=\"취소\"\r\n      @close=\"deleteConfirmVisible = false\" \r\n      @confirm=\"deleteNotice\">\r\n      <template #body>\r\n        <p>삭제하시겠습니까?</p>\r\n      </template>\r\n    </AlertModal>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch, defineProps, defineEmits } from 'vue';\r\nimport DefaultButton from '@/components/common/button/DefaultButton.vue';\r\nimport AlertModal from '@/components/common/modal/AlertModal.vue';\r\n\r\nconst props = defineProps({\r\n  visible: { type: Boolean, default: false },\r\n  editDataProp: {\r\n    type: Object,\r\n    default: () => ({\r\n      fromDate: '',\r\n      toDate: '',\r\n      workType: '프로젝트',\r\n      performanceTitle: '',\r\n      performance: '',\r\n      status: '진행 중',\r\n    }),\r\n  },\r\n});\r\nconst emits = defineEmits(['close', 'save', 'delete']);\r\n\r\n/**\r\n * 로컬 데이터\r\n */\r\nconst editData = ref({ ...props.editDataProp });\r\n\r\n/**\r\n * 부모에서 editDataProp가 바뀌면 localEditData도 반영\r\n */\r\nwatch(\r\n  () => props.editDataProp,\r\n  (newVal) => {\r\n    editData.value = { ...newVal };\r\n  },\r\n  { deep: true }\r\n);\r\n\r\n/** 모달 닫기 */\r\nfunction closeModal() {\r\n  emits('close');\r\n}\r\n\r\n/** 수정 */\r\nfunction submitEdit() {\r\n  /** \r\n   * \r\n   * 변경된 데이터 빈칸, 값 등 체크 로직 추가되야함\r\n   * \r\n   */\r\n  // 수정 완료 후 부모에게 알림\r\n  emits('save', { ...editData.value });\r\n}\r\n\r\nconst deleteConfirmVisible = ref(false);\r\n\r\n/** 삭제 버튼 클릭 => AlertModal 열기 */\r\nfunction showDeleteAlert() {\r\n  deleteConfirmVisible.value = true;\r\n}\r\n\r\n/** AlertModal에서 확인 시 => 부모에 삭제 이벤트 알림 */\r\nfunction deleteNotice() {\r\n  // 현재 항목 ID를 부모에 전달\r\n  deleteConfirmVisible.value = false;\r\n  // (부모에서 AlertModal 등으로 재확인할 수도 있음)\r\n  emits('delete', { ...editData.value });\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.modal-overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: rgba(0, 0, 0, 0.5);\r\n  z-index: 1050;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.modal-container {\r\n  background: #fff;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  border-radius: 4px;\r\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.5);\r\n  animation: fadeIn 0.3s;\r\n  padding: 1rem;\r\n}\r\n\r\n.modal-header {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 1rem;\r\n}\r\n\r\n.modal-body {\r\n  max-height: 70vh;\r\n  overflow-y: auto;\r\n}\r\n.modal-footer {\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-top: 1rem;\r\n}\r\n\r\n/* 유사 부트스트랩 유틸 */\r\n.d-flex {\r\n  display: flex;\r\n  gap: 0.5rem;\r\n}\r\n.me-2 {\r\n  margin-right: 0.5rem;\r\n}\r\n.w-50 {\r\n  width: 50%;\r\n}\r\n.form-control {\r\n  width: 100%;\r\n  padding: 0.4rem;\r\n  margin: 0;\r\n}\r\n\r\n@media (max-width: 1200px) {\r\n  .modal-container {\r\n    width: 80% !important;\r\n  }\r\n}\r\n\r\n@keyframes fadeIn {\r\n  from {\r\n    opacity: 0;\r\n    transform: scale(0.95);\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: scale(1);\r\n  }\r\n}\r\n</style>\r\n","import script from \"./PerformanceManagementDeleteModifyModal.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PerformanceManagementDeleteModifyModal.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PerformanceManagementDeleteModifyModal.vue?vue&type=style&index=0&id=7d718b6b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7d718b6b\"]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <!-- 메인 콘텐츠 -->\r\n    <div class=\"content\">\r\n      <h2 class=\"content-title\">\r\n        {{ searchNameResult ? `${searchNameResult}님의 실적 관리` : '이름을 입력하여 실적을 검색하세요' }}\r\n      </h2>\r\n      <p class=\"content-sub-title\">실적 등록 및 확인 페이지</p>\r\n\r\n      <div class=\"d-flex justify-content-between align-items-center\" style=\"color: red; font-weight: bold;\">\r\n        <p></p>\r\n        <p>예시 이름 \"권범준\"으로 검색</p>\r\n      </div>\r\n\r\n      <div class=\"d-flex justify-content-between align-items-start\">\r\n        <!-- 실적 추가 버튼 -->\r\n        <DefaultButton \r\n          v-if=\"isAdmin && searchNameResult\"\r\n          align=\"left\"\r\n          @click=\"openCreateModal\"\r\n        >\r\n          실적 추가\r\n        </DefaultButton>\r\n\r\n        <p></p>\r\n        <!-- 검색 영역 -->\r\n        <div class=\"d-flex justify-content-between mb-3 search-body\">\r\n          <div>\r\n            <input\r\n              type=\"text\"\r\n              class=\"form-control input-search-name\"\r\n              v-model=\"searchName\"\r\n              placeholder=\"이름 입력\"\r\n              @keyup.enter=\"filterData\"\r\n            />\r\n          </div>\r\n          <DefaultButton @click=\"filterData\"> 검색 </DefaultButton>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- 검색을 하지 않았을 때 이미지 표시 -->\r\n      <div v-if=\"!searchNameResult\" class=\"d-flex justify-content-center mt-5\">\r\n        <img\r\n          src=\"https://www.kpcnc.co.kr/src/img/main_slider1.png\"\r\n          alt=\"검색을 하지 않았을 때 표시할 이미지\"\r\n          class=\"placeholder-image\"\r\n        />\r\n      </div>\r\n\r\n      <!-- 테이블 보기 (스크롤로 10개 정도 보이도록) -->\r\n      <DefaultTable\r\n        v-if=\"searchNameResult\"\r\n        :columns=\"columns\"\r\n        :data=\"data\"\r\n        :rowClick=\"(item) => openEditModal(item)\"\r\n        :ellipsisWidth=\"50\"\r\n      />\r\n\r\n      <PerformanceManagementCreateModal\r\n        :visible=\"createModalVisible\"\r\n        :formData=\"formData\"\r\n        @close=\"createModalVisible = false\"\r\n        @submit=\"submitPerformance\"\r\n      />\r\n\r\n      <!-- (2) 실적 수정/삭제 모달 컴포넌트 -->\r\n      <PerformanceManagementDeleteModifyModal\r\n        :visible=\"editModalVisible\"\r\n        :editDataProp=\"editData\"\r\n        @close=\"editModalVisible = false\"\r\n        @save=\"submitEdit\"\r\n        @delete=\"removeItem\"\r\n      />\r\n\r\n      <!-- 검색 실패 AlertModal -->\r\n      <AlertModal\r\n        :isVisible=\"resultModalVisible\"\r\n        :disableBackgroundClose=\"true\"\r\n        title=\"검색 실패\"\r\n        confirmText=\"확인\"\r\n        @confirm=\"resultModalVisible = false\"\r\n      >\r\n        <template #body>\r\n          <p>데이터를 가져오는 데 실패했습니다.</p>\r\n        </template>\r\n      </AlertModal>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport { ref, computed } from 'vue';\r\nimport axios from 'axios';\r\n\r\nimport PerformanceManagementCreateModal from '@/components/hrm/PerformanceManagementCreateModal.vue';\r\nimport PerformanceManagementDeleteModifyModal from '@/components/hrm/PerformanceManagementDeleteModifyModal.vue';\r\n\r\nimport AlertModal from '@/components/common/modal/AlertModal.vue';\r\nimport DefaultButton from '@/components/common/button/DefaultButton.vue';\r\nimport DefaultTable from '@/components/common/table/DefaultTable.vue';\r\n\r\n/** 상태 변수들 */\r\nconst resultModalVisible = ref(false);\r\n\r\n// 검색 관련\r\nconst searchName = ref('');\r\nconst searchNameResult = ref('');\r\n\r\n// 실적 목록\r\nconst data = ref([]); // 페이징 제거 (모든 데이터를 보여줌)\r\nconst editData = ref({}); // 수정 모달에서 쓸 데이터\r\n\r\n// 관리자 여부\r\nconst userRole = ref('admin');\r\nconst isAdmin = computed(() => userRole.value === 'admin');\r\n\r\n// \"실적 추가\" 모달 제어\r\nconst createModalVisible = ref(false);\r\nconst formData = ref({\r\n  fromDate: '',\r\n  toDate: '',\r\n  workType: '프로젝트',\r\n  performanceTitle: '',\r\n  performance: '',\r\n  status: '진행 중',\r\n});\r\n\r\n// 테이블 컬럼\r\nconst columns = [\r\n  { key: 'fromDate',  label: '시작일', useEllipsis: true,  ellipsisWidth: 50},\r\n  { key: 'toDate',    label: '종료일', useEllipsis: true,  ellipsisWidth: 50}, \r\n  { key: 'workType',  label: '유형', useEllipsis: true,  ellipsisWidth: 50 }, \r\n  { key: 'performanceTitle',  label: '성과주제', useEllipsis: true,  ellipsisWidth: 50 },\r\n  { key: 'performance', label: '성과', useEllipsis: true,  ellipsisWidth: 50 },\r\n  {\r\n    key: 'status',\r\n    label: '상태',\r\n    useEllipsis: true,\r\n    ellipsisWidth: 30,\r\n    // 상태값(value)에 따라 색상 클래스를 반환\r\n    customClass: (value) => {\r\n      if (value === '진행 중') return 'text-red';\r\n      if (value === '완료')   return 'text-green';\r\n      if (value === '대기 중') return 'text-blue';\r\n      return '';\r\n    }\r\n  },\r\n];\r\n\r\n// \"수정/삭제\" 모달 제어\r\nconst editModalVisible = ref(false);\r\n\r\n/** 검색 기능 */\r\nasync function filterData() {\r\n  if (!searchName.value.trim()) {\r\n    alert('이름을 입력해 주세요.');\r\n    data.value = [];\r\n    searchNameResult.value = '';\r\n    return;\r\n  }\r\n  // 예: '권범준'이면 더미데이터 세팅\r\n  if (searchName.value === '권범준') {\r\n    data.value = [\r\n      {\r\n        fromDate: '2024-05-01',\r\n        toDate: '2024-05-15',\r\n        workType: '프로젝트',\r\n        performanceTitle: '기업은행 프로젝트',\r\n        performance: '＊억 프로젝트 진행 완료',\r\n        status: '완료',\r\n      },\r\n      {\r\n        fromDate: '2024-07-15',\r\n        toDate: '2024-07-30',\r\n        workType: '프로젝트',\r\n        performanceTitle: '내부 포탈 프로젝트 개발',\r\n        performance: '내부 포탈로 ＊＊ 가치 창출',\r\n        status: '진행 중',\r\n      },\r\n      {\r\n        fromDate: '2024-07-15',\r\n        toDate: '2024-07-30',\r\n        workType: '프로젝트',\r\n        performanceTitle: '내부 포탈 프로젝트 개발',\r\n        performance: '내부 포탈로 ＊＊ 가치 창출',\r\n        status: '진행 중',\r\n      },\r\n      {\r\n        fromDate: '2024-07-15',\r\n        toDate: '2024-07-30',\r\n        workType: '프로젝트',\r\n        performanceTitle: '내부 포탈 프로젝트 개발',\r\n        performance: '내부 포탈로 ＊＊ 가치 창출',\r\n        status: '진행 중',\r\n      },\r\n      {\r\n        fromDate: '2024-07-15',\r\n        toDate: '2024-07-30',\r\n        workType: '프로젝트',\r\n        performanceTitle: '내부 포탈 프로젝트 개발',\r\n        performance: '내부 포탈로 ＊＊ 가치 창출',\r\n        status: '진행 중',\r\n      },\r\n      {\r\n        fromDate: '2024-07-15',\r\n        toDate: '2024-07-30',\r\n        workType: '프로젝트',\r\n        performanceTitle: '내부 포탈 프로젝트 개발',\r\n        performance: '내부 포탈로 ＊＊ 가치 창출',\r\n        status: '진행 중',\r\n      },\r\n      {\r\n        fromDate: '2024-07-15',\r\n        toDate: '2024-07-30',\r\n        workType: '프로젝트',\r\n        performanceTitle: '내부 포탈 프로젝트 개발',\r\n        performance: '내부 포탈로 ＊＊ 가치 창출',\r\n        status: '진행 중',\r\n      },\r\n      {\r\n        fromDate: '2024-07-15',\r\n        toDate: '2024-07-30',\r\n        workType: '프로젝트',\r\n        performanceTitle: '내부 포탈 프로젝트 개발',\r\n        performance: '내부 포탈로 ＊＊ 가치 창출',\r\n        status: '진행 중',\r\n      },\r\n      {\r\n        fromDate: '2024-07-15',\r\n        toDate: '2024-07-30',\r\n        workType: '프로젝트',\r\n        performanceTitle: '내부 포탈 프로젝트 개발',\r\n        performance: '내부 포탈로 ＊＊ 가치 창출',\r\n        status: '진행 중',\r\n      },\r\n      {\r\n        fromDate: '2024-07-15',\r\n        toDate: '2024-07-30',\r\n        workType: '프로젝트',\r\n        performanceTitle: '내부 포탈 프로젝트 개발',\r\n        performance: '내부 포탈로 ＊＊ 가치 창출',\r\n        status: '진행 중',\r\n      },\r\n      {\r\n        fromDate: '2024-07-15',\r\n        toDate: '2024-07-30',\r\n        workType: '프로젝트',\r\n        performanceTitle: '내부 포탈 프로젝트 개발',\r\n        performance: '내부 포탈로 ＊＊ 가치 창출',\r\n        status: '진행 중',\r\n      },\r\n      {\r\n        fromDate: '2024-07-15',\r\n        toDate: '2024-07-30',\r\n        workType: '프로젝트',\r\n        performanceTitle: '내부 포탈 프로젝트 개발',\r\n        performance: '내부 포탈로 ＊＊ 가치 창출',\r\n        status: '진행 중',\r\n      },\r\n      {\r\n        fromDate: '2024-07-15',\r\n        toDate: '2024-07-30',\r\n        workType: '프로젝트',\r\n        performanceTitle: '내부 포탈 프로젝트 개발',\r\n        performance: '내부 포탈로 ＊＊ 가치 창출',\r\n        status: '진행 중',\r\n      },\r\n      {\r\n        fromDate: '2024-07-15',\r\n        toDate: '2024-07-30',\r\n        workType: '프로젝트',\r\n        performanceTitle: '내부 포탈 프로젝트 개발',\r\n        performance: '내부 포탈로 ＊＊ 가치 창출',\r\n        status: '진행 중',\r\n      },\r\n    ];\r\n    searchNameResult.value = '권범준';\r\n  } else {\r\n    // 서버 요청\r\n    try {\r\n      const response = await axios.get('/api/performance', {\r\n        params: { name: searchName.value },\r\n      });\r\n      data.value = response.data;\r\n      searchNameResult.value = searchName.value;\r\n    } catch (error) {\r\n      console.error('에러 발생:', error);\r\n      resultModalVisible.value = true;\r\n    }\r\n  }\r\n}\r\n\r\n// (1) 실적 추가 모달 열기\r\nfunction openCreateModal() {\r\n  // 폼 초기화\r\n  formData.value = {\r\n    fromDate: '',\r\n    toDate: '',\r\n    workType: '프로젝트',\r\n    performanceTitle: '',\r\n    performance: '',\r\n    status: '진행 중',\r\n  };\r\n  createModalVisible.value = true;\r\n}\r\n\r\n// (1') 실적 추가 모달 \"저장\"\r\nfunction submitPerformance(newForm) {\r\n  console.log('Performance Submitted:', newForm);\r\n  // 실제 로직 => data.value.push(newForm);\r\n  createModalVisible.value = false;\r\n}\r\n\r\n// (2) 수정 모달 열기\r\nfunction openEditModal(item) {\r\n  editData.value = { ...item }; // 복사\r\n  editModalVisible.value = true;\r\n}\r\n// (2') 수정 모달 \"수정\"\r\nfunction submitEdit(updatedItem) {\r\n  console.log('Performance Edited:', updatedItem);\r\n  // 실제 로직 => 기존 데이터 수정\r\n  editModalVisible.value = false;\r\n}\r\n// (2'') 수정 모달 \"삭제\"\r\nfunction removeItem(deletedItem) {\r\n  console.log('Delete item:', deletedItem);\r\n  data.value = data.value.filter((x) => x !== deletedItem);\r\n  editModalVisible.value = false;\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n/* 테이블에 스크롤 추가 */\r\n.table-container {\r\n  max-height: 400px; /* 최대 높이 */\r\n  overflow-y: auto;  /* 스크롤 활성화 */\r\n}\r\n.modal-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n}\r\n\r\n.close {\r\n  font-size: 1.5rem;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.performance-save-button {\r\n  background-color: #375a7f;\r\n  font-size: 0.875rem;\r\n  padding: 0.4rem 0.75rem;\r\n}\r\n\r\n.bnt-search-name {\r\n  background-color: #375a7f;\r\n}\r\n\r\n#dataTable tbody tr:hover td {\r\n  background-color: #e7f1ff !important;\r\n}\r\n\r\n.placeholder-image {\r\n  width: 500px;\r\n  margin-bottom: 30px;\r\n  height: auto;\r\n  opacity: 0.8;\r\n}\r\n\r\n.align-items-start {\r\n  margin-bottom: 10px;\r\n}\r\n\r\n@media (max-width: 1200px) {\r\n  .close {\r\n    font-size: 1rem !important;\r\n  }\r\n\r\n  label {\r\n    font-size: 0.85rem;\r\n  }\r\n\r\n  .placeholder-image {\r\n    width: 400px;\r\n    margin-bottom: 30px;\r\n    margin-top: 50px;\r\n    height: auto;\r\n    opacity: 0.8;\r\n  }\r\n\r\n  .performance-save-button {\r\n    margin-bottom: 0;\r\n    font-size: 0.63rem;\r\n    padding: 0.3rem 0.6rem;\r\n  }\r\n\r\n  .align-items-center {\r\n    margin-bottom: 10px;\r\n  }\r\n\r\n  .text-muted {\r\n    font-size: 0.75rem;\r\n    margin-bottom: 7px;\r\n  }\r\n\r\n  .input-search-name {\r\n    font-size: 0.75rem;\r\n    padding: 0.3rem 0.6rem;\r\n    width: 150px !important;\r\n  }\r\n\r\n  @media (max-width: 401px) {\r\n    .placeholder-image {\r\n      max-width: 100%;\r\n      margin-bottom: 30px;\r\n      margin-top: 50px;\r\n      height: auto;\r\n      opacity: 0.8;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import script from \"./PerformanceManagement.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PerformanceManagement.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PerformanceManagement.vue?vue&type=style&index=0&id=e048e96a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-e048e96a\"]])\n\nexport default __exports__","<template>\r\n  <div class=\"content\">\r\n    <h2 class=\"content-title\">프로젝트별 권한 부여</h2>\r\n    <p class=\"content-sub-title\">각 프로젝트별 사용자 권한을 관리하세요.</p>\r\n\r\n    <!-- 부서, 팀, 프로젝트 선택 -->\r\n    <div class=\"grid-container\">\r\n      <div class=\"grid-item\">\r\n        <label for=\"departmentSelect\" class=\"form-label\">부서 선택</label>\r\n        <!-- <select id=\"departmentSelect\" v-model=\"selectedDepartment\" class=\"form-select\">\r\n          <option value=\"전체\">전체</option>\r\n          <option value=\"SI 사업본부\">SI 사업본부</option>\r\n          <option value=\"AI 사업본부\">AI 사업본부</option>\r\n          <option value=\"경영관리부\">경영관리부</option>\r\n        </select> -->\r\n        <DefaultSelect\r\n          id=\"departmentSelect\"\r\n          v-model=\"selectedDepartment\"\r\n          :options=\"departmentsOptions\"\r\n          placeholder=\"부서 선택\"\r\n          @change=\"updateTeams\"\r\n          size=\"full\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"grid-item\">\r\n        <label for=\"teamSelect\" class=\"form-label\">팀 선택</label>\r\n        <!-- <select id=\"teamSelect\" v-model=\"selectedTeam\" class=\"form-select\">\r\n          <option v-for=\"team in teams\" :key=\"team\" :value=\"team\">{{ team }}</option>\r\n        </select> -->\r\n        <DefaultSelect\r\n          id=\"teamSelect\"\r\n          v-model=\"selectedTeam\"\r\n          :options=\"teamsOptions\"\r\n          placeholder=\"팀 선택\"\r\n          size=\"full\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"grid-item\">\r\n        <label for=\"projectSelect\" class=\"form-label\">프로젝트 선택</label>\r\n        <!-- <select id=\"projectSelect\" v-model=\"selectedProject\" class=\"form-select\">\r\n          <option v-for=\"project in projects\" :key=\"project\" :value=\"project\">{{ project }}</option>\r\n        </select> -->\r\n        <DefaultSelect\r\n          id=\"projectSelect\"\r\n          v-model=\"selectedProject\"\r\n          :options=\"projectsOptions\"\r\n          placeholder=\"프로젝트 선택\"\r\n          size=\"full\"\r\n        />\r\n      </div>\r\n\r\n      <!-- 검색 입력 + 검색 버튼 -->\r\n      <div class=\"grid-item\">\r\n        <label for=\"userSearch\" class=\"form-label\">사용자 검색</label>\r\n        <div class=\"search-item\">\r\n          <input\r\n            type=\"text\"\r\n            id=\"userSearch\"\r\n            v-model=\"searchTerm\"\r\n            class=\"form-control\"\r\n            placeholder=\"이름을 입력하세요\"\r\n          />\r\n          <DefaultButton align=\"right\" @click=\"fetchUsersFromServer\">\r\n            검색\r\n          </DefaultButton>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- 권한 테이블 (검색 버튼을 눌렀을 때만 표시됨) -->\r\n    <div v-if=\"isTableVisible\" class=\"table-section\">\r\n      <table class=\"table table-bordered\">\r\n        <thead class=\"table-head\">\r\n          <tr>\r\n            <th>사용자</th>\r\n            <th>프로젝트</th>\r\n            <th>부서</th>\r\n            <th>팀</th>\r\n            <th>권한</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody class=\"table-body\">\r\n          <tr v-for=\"user in paginatedUsers\" :key=\"user.id\">\r\n            <td>{{ user.name }}</td>\r\n            <td>{{ user.project }}</td>\r\n            <td>{{ user.department }}</td>\r\n            <td>{{ user.team }}</td>\r\n            <td>\r\n              <select \r\n                v-model=\"user.permission\"\r\n                class=\"form-select permission-select\"\r\n                @change=\"onPermissionChange(user)\"\r\n              >\r\n                <option :value=\"null\" disabled>없음</option>\r\n                <option\r\n                  v-for=\"permission in getPermissionsFor(user.project)\"\r\n                  :key=\"permission\"\r\n                  :value=\"permission\"\r\n                >\r\n                  {{ permission }}\r\n                </option>\r\n              </select>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <DefaultButton\r\n        size=\"small\"\r\n        align=\"right\"\r\n        @click=\"savePermissions\"\r\n      >\r\n        저장\r\n      </DefaultButton>\r\n\r\n      <!-- 페이지네이션 컴포넌트 -->\r\n      <DefaultPagination\r\n        :currentPage=\"currentPage\"\r\n        :totalPages=\"totalPages\"\r\n        :visiblePageCount=\"5\"\r\n        @pageChange=\"onPageChange\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch, computed } from 'vue';\r\nimport DefaultButton from '@/components/common/button/DefaultButton.vue';\r\nimport DefaultPagination from '@/components/common/pagination/DefaultPagination.vue';\r\nimport DefaultSelect from '@/components/common/select/DefaultSelect.vue';\r\n// import axios from 'axios'; // 실제 백엔드 사용 시\r\n\r\n/**\r\n * 프로젝트 목록\r\n */\r\nconst projects = ref(['전체', '영수증 관리', '개인정보 관리']);\r\n\r\n/**\r\n * 부서 & 팀 목록\r\n */\r\nconst departmentTeams = {\r\n  '전체': ['전체'],\r\n  'SI 사업본부': ['전체', '프레임워크 팀'],\r\n  'AI 사업본부': ['전체', 'RPA', '클라우드', '빅데이터'],\r\n  '경영관리부': ['전체', '국내 영업팀', '해외 영업팀']\r\n};\r\n\r\n/**\r\n * 권한 레벨\r\n */\r\nconst permissionLevels = {\r\n  '영수증 관리': ['신청자', '승인자', '관리자'],\r\n  '개인정보 관리': ['사용자', '관리자']\r\n};\r\n\r\n/**\r\n * 사용자 목록 (백엔드에서 가져올 데이터)\r\n */\r\nconst paginatedUsers = ref([]);\r\n\r\n/**\r\n * 테이블 표시 여부 (검색 버튼 클릭 시 true)\r\n */\r\nconst isTableVisible = ref(false);\r\n\r\n/**\r\n * 선택 필터 상태\r\n */\r\nconst selectedProject = ref('전체');\r\nconst selectedDepartment = ref('전체');\r\nconst selectedTeam = ref('전체');\r\nconst searchTerm = ref('');\r\n\r\n/**\r\n * 페이지네이션 상태\r\n */\r\nconst currentPage = ref(1);\r\nconst totalPages = ref(1);\r\n// const itemsPerPage = ref(5); 추후 주석 제거\r\n\r\n/**\r\n * 사용자 권한 변경 기록용\r\n */\r\nconst changes = ref({}); \r\n/* 예: changes.value = {\r\n  1: \"관리자\",    // ID=1번 사용자의 최종 권한\r\n  7: \"승인자\",     // ID=7번 사용자의 최종 권한\r\n}\r\n*/\r\n\r\n/**\r\n * 사용자 권한 변경\r\n */\r\nfunction onPermissionChange(user) {\r\n  // 사용자가 Select로 권한 변경했을 때 \r\n  // changes 객체에 기록\r\n  changes.value[user.id] = user.permission;\r\n}\r\n\r\n/**\r\n * 부서 선택 변경 시 팀 목록 리셋\r\n */\r\nconst teams = ref(departmentTeams['전체']);\r\nwatch(selectedDepartment, (newDept) => {\r\n  teams.value = departmentTeams[newDept] || ['전체'];\r\n  selectedTeam.value = '전체';\r\n});\r\n\r\n/**\r\n * 부서 & 팀 더미 옵션 데이터\r\n */\r\nconst departmentsOptions = ref([\r\n  { value: '전체', label: '전체' },\r\n  { value: '미지정', label: '미지정' },\r\n  { value: 'SI 사업본부', label: 'SI 사업본부' },\r\n  { value: 'AI 사업본부', label: 'AI 사업본부' },\r\n  { value: '경영관리부', label: '경영관리부' }\r\n]);\r\n/* const teamsOptions = ref([\r\n  { value: '', label: '팀 선택' },\r\n  { value: '영업', label: '영업' },\r\n  { value: '프레임워크 팀', label: '프레임워크 팀' },\r\n  { value: 'RPA', label: 'RPA' },\r\n  { value: '클라우드', label: '클라우드' },\r\n  { value: '빅데이터', label: '빅데이터' },\r\n  { value: '국내 영업팀', label: '국내 영업팀' },\r\n  { value: '해외 영업팀', label: '해외 영업팀' }\r\n]); */\r\n/**\r\n * 팀 옵션: 원래는 teams(ref, 문자열 배열)을 사용하지만,\r\n * DefaultSelect는 객체 배열을 요구하므로, 이를 변환하는 computed 속성을 추가합니다.\r\n */\r\nconst teamsOptions = computed(() =>\r\n  teams.value.map(team => ({ value: team, label: team }))\r\n);\r\n\r\n/**\r\n * 프로젝트 옵션: projects (문자열 배열)을 객체 배열로 변환\r\n */\r\nconst projectsOptions = computed(() =>\r\n  projects.value.map(project => ({ value: project, label: project }))\r\n);\r\n\r\n/**\r\n * 프로젝트별 권한 목록\r\n */\r\nfunction getPermissionsFor(project) {\r\n  return permissionLevels[project] || [];\r\n}\r\n\r\n/**\r\n * 백엔드에서 사용자 데이터 가져오기 (검색 버튼 클릭 시 실행)\r\n */\r\nconst fetchUsersFromServer = async () => {\r\n  // isTableVisible을 true로 설정하여 테이블 표시\r\n  isTableVisible.value = true;\r\n\r\n  // 백엔드 요청 (현재 주석 처리)\r\n  /*\r\n  try {\r\n    const response = await axios.get('/api/users', {\r\n      params: {\r\n        project: selectedProject.value,\r\n        department: selectedDepartment.value,\r\n        team: selectedTeam.value,\r\n        search: searchTerm.value,\r\n        page: currentPage.value,\r\n        limit: itemsPerPage.value,\r\n      }\r\n    });\r\n\r\n    paginatedUsers.value = response.data.items;\r\n    totalPages.value = response.data.totalPages;\r\n  } catch (error) {\r\n    console.error('데이터 가져오기 실패:', error);\r\n  }\r\n  */\r\n\r\n  // 더미 데이터\r\n  totalPages.value = 3;\r\n  paginatedUsers.value = [\r\n    { id: 1, name: '홍길동', department: 'SI 사업본부', team: '프레임워크 팀', project: '영수증 관리', permission: null },\r\n    { id: 2, name: '이순신', department: 'AI 사업본부', team: '빅데이터', project: '개인정보 관리', permission: '관리자' },\r\n    { id: 3, name: '강감찬', department: '경영관리부', team: '국내 영업팀', project: '영수증 관리', permission: '신청자' },\r\n  ];\r\n\r\n  // 수정 목록 초기화\r\n  changes.value = {};\r\n};\r\n\r\n/**\r\n * 페이지 이동 이벤트 (DefaultPagination → @pageChange)\r\n * - newPage에 맞춰 currentPage 갱신 후 재조회\r\n */\r\nfunction onPageChange(newPage) {\r\n  currentPage.value = newPage;\r\n  fetchUsersFromServer();\r\n}\r\n\r\n/**\r\n * 저장 (권한 업데이트)\r\n */\r\nfunction savePermissions() {\r\n  // changes 객체에 기록된 ID별 최종 권한만 추출\r\n  // 예: { 1: '관리자', 7: '승인자' }\r\n  // 여기서만 서버로 보내기\r\n  console.log('변경된 사용자', changes.value);\r\n\r\n  // 실제 서버 전송 (예시)\r\n  /*\r\n  axios.post('/api/update-permissions', changes.value)\r\n    .then(...)\r\n    .catch(...);\r\n  */\r\n\r\n  // 만약 저장 성공 후 changes 초기화\r\n  // changes.value = {};\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.grid-container {\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  gap: 20px;\r\n}\r\n\r\n.grid-item {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.search-item {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.search-item input {\r\n  flex: 1; /* 입력 필드가 남은 공간을 모두 차지하도록 설정 */\r\n}\r\n\r\n.search-item button {\r\n  white-space: nowrap; /* 버튼 텍스트가 줄바꿈되지 않도록 설정 */\r\n}\r\n\r\n.form-control, .form-select {\r\n  width: 100%;\r\n}\r\n\r\n.table-section {\r\n  margin-top: 30px;\r\n  width: 100%;\r\n}\r\n\r\n.permission-select {\r\n  font-size: 0.75rem;\r\n  height: 25px;\r\n  padding: 0px 0px 0px 10px;\r\n}\r\n\r\n.table {\r\n  width: 100%;\r\n}\r\n\r\n.table th, \r\n.table td {\r\n  text-align: left;\r\n  height: 30px !important;\r\n  line-height: 30px !important;\r\n  vertical-align: middle !important; /* 수직 정렬 중앙 */\r\n  padding-top: 0 !important; \r\n  padding-bottom: 0 !important;\r\n}\r\n\r\n.text-end {\r\n  text-align: right;\r\n}\r\n\r\n.save-button {\r\n  margin-top: 0px !important;\r\n  margin-bottom: 50px;\r\n}\r\n\r\n@media (max-width: 1200px) {\r\n  .table-head {\r\n    font-size: 0.65rem !important;\r\n  }\r\n  .table-body {\r\n    font-size: 0.6rem !important;\r\n  }\r\n  .form-select {\r\n    font-size: 0.75rem !important;\r\n  }\r\n  .permission-select {\r\n    font-size: 0.6rem !important;\r\n  }\r\n  .grid-container {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n  .table {\r\n    font-size: 0.75rem;\r\n  }\r\n}\r\n</style>\r\n","import script from \"./UserPermissions.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UserPermissions.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UserPermissions.vue?vue&type=style&index=0&id=0e172a1f&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0e172a1f\"]])\n\nexport default __exports__","// src/router/hrm.js\r\nimport NoticeIntegrated from '@/views/hrm/NoticeIntegrated.vue';\r\nimport UserInformation from '@/views/hrm/UserInformation.vue';\r\nimport UserManagement from '@/views/hrm/UserManagement.vue';\r\nimport DeptTeamManager from '@/views/hrm/DeptTeamManager.vue';\r\nimport PerformanceHistory from '@/views/hrm/PerformanceHistory.vue';\r\nimport PerformanceManagement from '@/views/hrm/PerformanceManagement.vue';\r\nimport UserPermissions from '@/views/hrm/UserPermissions.vue';\r\n\r\n/**\r\n * 권한\r\n *   ROLE_EMPLOYEE  : 사원\r\n *   ROLE_MANAGER   : 관리자\r\n * \r\n * 로그인 확인 필요 없을 시 : meta에 requiresAuth=false 추가\r\n * menu는 백엔드에서 이력관리에서 사용\r\n * \r\n */\r\nconst hrmRoutes = [\r\n  {\r\n    // (공통) 공지 사항\r\n    path: 'notice-integrated',\r\n    name: 'NoticeIntegrated',\r\n    component: NoticeIntegrated,\r\n    meta: { \r\n      allowedRoles: ['ROLE_EMPLOYEE', 'ROLE_MANAGER'], // 사원 혹은 관리자 접근 가능\r\n      menu: '공지 사항'\r\n    },\r\n  },\r\n  {\r\n    // (공통) 사용자 정보\r\n    path: 'user-information',\r\n    name: 'UserInformation',\r\n    component: UserInformation,\r\n    meta: { \r\n      allowedRoles: ['ROLE_EMPLOYEE', 'ROLE_MANAGER'],\r\n      menu: '사용자 정보'\r\n    },\r\n  },\r\n  {\r\n    // (관리자) 유저의 정보 관리\r\n    path: 'user-management',\r\n    name: 'UserManagement',\r\n    component: UserManagement,\r\n    meta: {\r\n      allowedRoles: ['ROLE_MANAGER'],\r\n      menu: '유저의 정보 관리'\r\n    },\r\n  },\r\n  {\r\n    // (관리자) 부서 및 팀 관리\r\n    path: 'dept-team-manager',\r\n    name: 'DeptTeamManager',\r\n    component: DeptTeamManager,\r\n    meta: { \r\n      allowedRoles: ['ROLE_MANAGER'],\r\n      menu: '부서 및 팀 관리'\r\n    },\r\n  },\r\n  {\r\n    // (관리자) 유저 실적 확인\r\n    path: 'performance-history',\r\n    name: 'PerformanceHistory',\r\n    component: PerformanceHistory,\r\n    meta: { \r\n      allowedRoles: ['ROLE_MANAGER'],\r\n      menu: '유저 실적 확인'\r\n    },\r\n  },\r\n  {\r\n    // (관리자) 유저의 실적 등록\r\n    path: 'performance-management',\r\n    name: 'PerformanceManagement',\r\n    component: PerformanceManagement,\r\n    meta: { \r\n      allowedRoles: ['ROLE_MANAGER'],\r\n      menu: '유저의 실적 등록'\r\n    },\r\n  },\r\n  {\r\n    // (관리자) 권한 관리\r\n    path: 'user-permissions',\r\n    name: 'UserPermissions',\r\n    component: UserPermissions,\r\n    meta: { \r\n      allowedRoles: ['ROLE_MANAGER'],\r\n      menu: '권한 관리'\r\n    },\r\n  },\r\n];\r\n\r\nexport default hrmRoutes;\r\n","<template>\r\n  <label :for=\"forId\" :class=\"['default-label', 'mr-2', customClass]\" :style=\"labelStyle\">\r\n    <slot>{{ text }}</slot>\r\n    <span v-if=\"required\" class=\"required-asterisk\">*</span>\r\n  </label>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed, defineProps, ref, onMounted, onBeforeUnmount } from 'vue';\r\n\r\nconst props = defineProps({\r\n  text: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  forId: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  required: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  customClass: {\r\n    type: String,\r\n    default: ''\r\n  },\r\n  // 'small', 'medium', 'large' 옵션\r\n  size: {\r\n    type: String,\r\n    default: 'medium',\r\n    validator: (value) => ['small', 'medium', 'large'].includes(value)\r\n  },\r\n  color: {\r\n    type: String,\r\n    default: '#333'\r\n  }\r\n});\r\n\r\n// 반응형 윈도우 너비 감지\r\nconst windowWidth = ref(window.innerWidth);\r\nconst updateWidth = () => {\r\n  windowWidth.value = window.innerWidth;\r\n};\r\n\r\nonMounted(() => {\r\n  window.addEventListener('resize', updateWidth);\r\n});\r\nonBeforeUnmount(() => {\r\n  window.removeEventListener('resize', updateWidth);\r\n});\r\n\r\n// 기본 폰트 크기를 숫자(rem 단위)로 결정 (props.size에 따라)\r\nconst baseFontSize = computed(() => {\r\n  switch(props.size) {\r\n    case 'small':\r\n      return 0.8;\r\n    case 'large':\r\n      return 1.2;\r\n    case 'medium':\r\n    default:\r\n      return 1.0;\r\n  }\r\n});\r\n\r\n// 화면 너비가 1200px 이하이면 기본 크기의 90%로 줄임\r\nconst labelStyle = computed(() => {\r\n  const factor = windowWidth.value <= 1200 ? 0.9 : 1;\r\n  return {\r\n    fontSize: `${baseFontSize.value * factor}rem`,\r\n    color: props.color,\r\n    textAlign: 'center'\r\n  };\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.default-label {\r\n  display: inline-block;\r\n}\r\n\r\n.required-asterisk {\r\n  color: red;\r\n  margin-left: 0.25rem;\r\n}\r\n</style>\r\n","import script from \"./DefaultLabel.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DefaultLabel.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DefaultLabel.vue?vue&type=style&index=0&id=5193b651&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5193b651\"]])\n\nexport default __exports__","<template>\r\n  <div :class=\"rowClass\">\r\n    <slot></slot>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { computed, defineProps } from 'vue';\r\n\r\nconst props = defineProps({\r\n  // 정렬 옵션: 'left'(기본), 'center', 'right'\r\n  align: {\r\n    type: String,\r\n    default: 'left',\r\n    validator: value => ['left', 'center', 'right'].includes(value)\r\n  },\r\n  // 추가적으로 적용할 클래스\r\n  customClass: {\r\n    type: String,\r\n    default: ''\r\n  }\r\n});\r\n\r\n// align prop에 따라 정렬 클래스를 결정합니다.\r\nconst rowClass = computed(() => {\r\n  let alignmentClass = '';\r\n  switch (props.align) {\r\n    case 'center':\r\n      alignmentClass = 'justify-content-center';\r\n      break;\r\n    case 'right':\r\n      alignmentClass = 'justify-content-end';\r\n      break;\r\n    case 'left':\r\n    default:\r\n      alignmentClass = 'justify-content-start';\r\n  }\r\n  // 기본 클래스: d-flex, align-items-center, mt-2 등을 포함합니다.\r\n  return `default-form-row d-flex align-items-center mt-2 ${alignmentClass} ${props.customClass}`.trim();\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n.default-form-row {\r\n  width: 100%;\r\n}\r\n</style>\r\n","import script from \"./DefaultFormRow.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DefaultFormRow.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DefaultFormRow.vue?vue&type=style&index=0&id=27c7ffab&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-27c7ffab\"]])\n\nexport default __exports__","import { systemApi } from '@/api/apiConfig';\r\n\r\nexport default {\r\n  async getActivityLogs(params) {\r\n    try {\r\n      // 로그인 기능 쿠키 설정\r\n      document.cookie = \"X-Func-Vue=\" + encodeURIComponent(\"이력 조회\") + \"; path=/\";\r\n      return await systemApi.get('/activity-log', { params });\r\n    } catch (error) {\r\n      console.error('Login error:', error);\r\n      throw error; // 에러 처리\r\n    }\r\n  },\r\n};\r\n","<template>\r\n  <div>\r\n    <!-- 메인 콘텐츠 영역 -->\r\n    <div class=\"content\">\r\n      <h2 class=\"content-title\">이력 관리</h2>\r\n      <div class=\"content-sub-title\">\r\n        <p>사용자 이력을 관리 페이지 입니다</p>\r\n      </div>\r\n\r\n      <div class=\"search-controls\">\r\n        <!-- 이름 검색 그룹 -->\r\n        <DefaultFormRow align=\"right\">\r\n          <DefaultLabel text=\"이름(이메일) :\" forId=\"searchData\" size=\"small\" />\r\n          <DefaultTextfield\r\n            type=\"text\"\r\n            id=\"searchData\"\r\n            v-model=\"searchData\"\r\n            size=\"small\"\r\n            placeholder=\"이름(이메일) 입력\"\r\n          />\r\n          <DefaultButton \r\n            @click=\"search\"\r\n            size=\"small\"\r\n          >\r\n            조회\r\n          </DefaultButton>\r\n        </DefaultFormRow>\r\n        <!-- 시작, 종료일 그룹 -->\r\n        <DefaultFormRow align=\"right\">\r\n          <DefaultLabel text=\"시작 :\" forId=\"startDate\" size=\"small\" />\r\n          <DefaultTextfield\r\n            type=\"month\"\r\n            id=\"startDate\"\r\n            v-model=\"startDate\"\r\n            size=\"xsmall\"\r\n          />\r\n          <div class=\"gap-right\" />\r\n          <DefaultLabel text=\"종료 :\" forId=\"endDate\" size=\"small\" />\r\n          <DefaultTextfield\r\n            type=\"month\"\r\n            id=\"endDate\"\r\n            v-model=\"endDate\"\r\n            size=\"xsmall\"\r\n          />\r\n        </DefaultFormRow>\r\n      </div>\r\n\r\n      <!-- DefaultTable 컴포넌트 (큰 화면) -->\r\n      <DefaultTable\r\n        :columns=\"columns\"\r\n        :data=\"data\"\r\n        :showTable=\"viewMode\"\r\n        :bodyFontSize=\"'0.7rem'\"\r\n      />\r\n      \r\n      <!-- 페이지네이션 (공통 컴포넌트) -->\r\n      <DefaultPagination\r\n        :currentPage=\"currentPage\"\r\n        :totalPages=\"totalPages\"\r\n        :visiblePageCount=\"visiblePageCount\"\r\n        @pageChange=\"onPageChange\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue';\r\nimport DefaultTable from '@/components/common/table/DefaultTable.vue';\r\nimport DefaultButton from '@/components/common/button/DefaultButton.vue';\r\nimport DefaultPagination from '@/components/common/pagination/DefaultPagination.vue';\r\nimport DefaultTextfield from '@/components/common/textfield/DefaultTextfield.vue';\r\nimport DefaultLabel from '@/components/common/label/DefaultLabel.vue';\r\nimport DefaultFormRow from '@/components/common/DefaultFormRow.vue';\r\nimport ActivityLogApi from '@/api/system/ActivityLogApi';\r\n\r\n\r\n// import axios from 'axios'; // 실제 백엔드 호출 시 사용\r\n\r\n// ================ 상태 정의 ================\r\nconst today = new Date().toISOString().slice(0, 7);\r\nconst startDate = ref(today);\r\nconst endDate = ref(today);\r\nconst searchData = ref('');\r\n\r\n// 실제 서버에서 받아온 데이터\r\nconst data = ref([]);\r\n\r\n// 페이지네이션\r\nconst currentPage = ref(1);\r\nconst totalPages = ref(1);\r\nconst visiblePageCount = ref(5);  // 페이지네이션에서 보여줄 최대 페이지 버튼 수\r\n\r\n// 컬럼 정의\r\nconst columns = ref([\r\n  { key: 'username', label: '이름', width: 50 },\r\n  { key: 'userEmail', label: '이메일', width: 130 },\r\n  { key: 'menu', label: '메뉴', width: 100 },\r\n  { key: 'function', label: '기능', width: 120 },\r\n  { key: 'ip', label: 'IP(법적문제확인)', width: 120 },\r\n  { key: 'httpMethod', label: 'METHOD', width: 40 },\r\n  { key: 'httpBody', label: '본문', width: 120 },\r\n  { key: 'timestamp', label: '시간', width: 120 },\r\n]);\r\n\r\n/**\r\n * 서버에서 데이터 가져오기\r\n * 실제로는 axios 등을 사용하여 파라미터(startDate, endDate, searchData, currentPage 등)를 전송 후,\r\n * 응답에서 data, totalPages 등을 받아 세팅하시면 됩니다.\r\n */\r\n// async function fetchDataFromServer(currentPage = 1) {\r\nasync function fetchDataFromServer() {\r\n  try {\r\n    console.log(startDate.value);\r\n    console.log(endDate.value);\r\n    console.log(searchData.value);\r\n    console.log(currentPage.value);\r\n    const response = await ActivityLogApi.getActivityLogs(\r\n      {\r\n        startDate: startDate.value,\r\n        endDate: endDate.value,\r\n        searchData: searchData.value,\r\n        currentPage: currentPage.value,\r\n      }, \r\n    );\r\n    // const response = await axios.get('/api/searchReceipts', {\r\n    //   params: {\r\n    //     startDate: startDate.value,\r\n    //     endDate: endDate.value,\r\n    //     searchData: searchData.value,\r\n    //     currentPage: currentPage.vlaue,\r\n    //   },\r\n    // });\r\n    data.value = response.data.content;\r\n    totalPages.value = response.data.totalPages;\r\n\r\n    // 여기서는 mockData로 예시 구현\r\n    // const mockData = [\r\n    //   {\r\n    //     username: '시스템',\r\n    //     userEmail: 'system',\r\n    //     menu: '로그인',\r\n    //     function: '로그인',\r\n    //     ip: \"X.X.1.1\",\r\n    //     httpMethod: \"POST\",\r\n    //     httpBody: '{\"username\":\"test\",\"password\":\"1234\"}',\r\n    //     timestamp: \"2025-03-03 12:12:48\",\r\n    //   },\r\n    //   {\r\n    //     username: '시스템',\r\n    //     userEmail: 'system',\r\n    //     menu: '로그인',\r\n    //     function: '로그인',\r\n    //     ip: \"X.X.1.1\",\r\n    //     httpMethod: \"POST\",\r\n    //     httpBody: '{\"username\":\"test\",\"password\":\"1234\"}',\r\n    //     timestamp: \"2025-03-03 12:12:48\",\r\n    //   },\r\n    //   {\r\n    //     username: '시스템',\r\n    //     userEmail: 'system',\r\n    //     menu: '로그인',\r\n    //     function: '로그인',\r\n    //     ip: \"X.X.1.1\",\r\n    //     httpMethod: \"POST\",\r\n    //     httpBody: '{\"username\":\"test\",\"password\":\"1234\"}',\r\n    //     timestamp: \"2025-03-03 12:12:48\",\r\n    //   },\r\n    // ];\r\n    \r\n    // data.value = mockData;\r\n    // totalPages.value = 2; // 예시로 총 2페이지 있다고 가정\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\n/**\r\n * 검색 버튼 클릭 시 실행\r\n * - 검색 파라미터를 포함하여 페이지 1번으로 재조회\r\n */\r\nfunction search() {\r\n  currentPage.value = 1;\r\n  fetchDataFromServer(currentPage.value);\r\n}\r\n\r\n/**\r\n * 페이지 변경 시 (DefaultPagination에서 방출)\r\n * - 새 페이지를 받아서 currentPage를 갱신\r\n * - 백엔드 재조회\r\n */\r\nfunction onPageChange(newPage) {\r\n  currentPage.value = newPage;\r\n  fetchDataFromServer(currentPage.value);\r\n}\r\n\r\nonMounted(() => {\r\n  // 컴포넌트 초기 로드시 첫 페이지 조회\r\n  fetchDataFromServer(currentPage.value);\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n#dataTable tbody tr:hover td {\r\n  background-color: #e7f1ff !important;\r\n}\r\n\r\n.gap-right {\r\n  margin-right: 10px;\r\n}\r\n\r\n/* 상태별 색상 설정 */\r\n.status-complete {\r\n  color: blue; /* 완료 상태는 파란색 */\r\n}\r\n.status-in-progress {\r\n  color: red; /* 진행중 상태는 빨간색 */\r\n}\r\n.align-items-center {\r\n  margin-bottom: 0px !important;\r\n}\r\n.start-end-date-group label {\r\n  margin-left: 10px !important;\r\n}\r\n.bnt-search {\r\n  margin: 0 !important;\r\n}\r\n\r\n.search-controls {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n@media (min-width: 1151px) {\r\n}\r\n\r\n@media (min-width: 1920px) {\r\n}\r\n\r\n@media (max-width: 1200px) {\r\n}\r\n</style>\r\n","import script from \"./ActivityLog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ActivityLog.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ActivityLog.vue?vue&type=style&index=0&id=62e07f33&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-62e07f33\"]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <!-- 메인 콘텐츠 영역 -->\r\n    <div class=\"content\">\r\n      <h2 class=\"content-title\">권한 관리</h2>\r\n      <div class=\"content-sub-title\">\r\n        <p>사용자 권한을 관리하는 페이지 입니다</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n","import { render } from \"./RoleManagement.vue?vue&type=template&id=3c3b76c4\"\nconst script = {}\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// src/router/ststem.js\r\nimport ActivityLog from '@/views/system/ActivityLog.vue';\r\nimport RoleManagement from '@/views/system/RoleManagement.vue';\r\n\r\n/**\r\n * 권한\r\n *   ROLE_SYSTEM  : 모든 권한\r\n * \r\n * 로그인 확인 필요 없을 시 : meta에 requiresAuth=false 추가\r\n * menu는 백엔드에서 이력관리에서 사용\r\n * \r\n */\r\nconst systemRoutes = [\r\n  {\r\n    // 이력 관리\r\n    path: 'activity-log',\r\n    name: 'ActivityLog',\r\n    component: ActivityLog,\r\n    meta: { \r\n      allowedRoles: ['ROLE_SYSTEM'], // 사원 혹은 관리자 접근 가능\r\n      menu: '이력 관리'\r\n    },\r\n  },\r\n  {\r\n    // 권한 관리\r\n    path: 'role-management',\r\n    name: 'RoleManagement',\r\n    component: RoleManagement,\r\n    meta: { \r\n      allowedRoles: ['ROLE_SYSTEM'], // 사원 혹은 관리자 접근 가능\r\n      menu: '권한 관리'\r\n    },\r\n  },\r\n];\r\n\r\nexport default systemRoutes;\r\n","<template>\r\n  <div>\r\n    <!-- 메인 콘텐츠 영역 -->\r\n    <div class=\"content\">\r\n      <h2 class=\"content-title\">메인</h2>\r\n      <div class=\"content-sub-title\">\r\n        <p>메인 페이지 입니다</p>\r\n      </div>\r\n      <div class=\"navbar-text\">\r\n        <img src=\"/img_test/4.jpg\" class=\"main-image\" alt=\"from public folder\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\n</script>\r\n\r\n<style scoped>\r\n\r\n/* 이미지 크기 조정 */\r\n.main-image {\r\n  width: 100%; /* 부모 요소 기준 가득 채우기 */\r\n  max-width: 500px; /* 필요에 따라 최대 너비 지정 */\r\n  height: auto; /* 비율 유지 */\r\n  object-fit: cover; /* 이미지를 부모 크기에 맞추면서 비율 유지 */\r\n}\r\n\r\n/* 네비게이션 텍스트 및 아이콘 */\r\n.navbar-text {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 10px;\r\n  width: 100%;\r\n  max-width: 600px;\r\n}\r\n\r\n</style>\r\n","import { render } from \"./MainPage.vue?vue&type=template&id=e8deef62&scoped=true\"\nconst script = {}\n\nimport \"./MainPage.vue?vue&type=style&index=0&id=e8deef62&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-e8deef62\"]])\n\nexport default __exports__","<template>\n  <div class=\"centered-container\">\n    <div>\n      <v-card\n        class=\"mx-auto pa-12 pb-8\"\n        elevation=\"8\"\n        max-width=\"448\"\n        rounded=\"lg\"\n      >\n        <v-img\n          class=\"mx-auto my-6 header-logo\"\n          max-width=\"228\"\n          src=\"https://www.kpcnc.co.kr/src/img/logo.png\"\n        ></v-img><br>\n\n        <div class=\"text-subtitle-1 text-medium-emphasis\">Account</div>\n\n        <v-text-field\n          v-model=\"username\"\n          density=\"compact\"\n          placeholder=\"Email address\"\n          prepend-inner-icon=\"mdi-email-outline\"\n          variant=\"outlined\"\n        ></v-text-field>\n\n        <div class=\"text-subtitle-1 text-medium-emphasis d-flex align-center justify-space-between\">\n          Password\n          <a\n            class=\"text-caption text-decoration-none text-blue\"\n            href=\"#\"\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Forgot login password?\n          </a>\n        </div>\n\n        <v-text-field\n          v-model=\"password\"\n          :append-inner-icon=\"visible ? 'mdi-eye-off' : 'mdi-eye'\"\n          :type=\"visible ? 'text' : 'password'\"\n          density=\"compact\"\n          placeholder=\"Enter your password\"\n          prepend-inner-icon=\"mdi-lock-outline\"\n          variant=\"outlined\"\n          @click:append-inner=\"visible = !visible\"\n        ></v-text-field>\n\n        <v-card\n          class=\"mb-12 warning-text\"\n          color=\"surface-variant\"\n          variant=\"tonal\"\n        >\n          <v-card-text class=\"text-medium-emphasis text-caption\">\n            Warning: After 3 consecutive failed login attempts, your account will be temporarily locked for three hours. Unauthorized users accessing this system may be subject to penalties. Please use your account responsibly.\n          </v-card-text>\n        </v-card>\n        <v-btn\n          class=\"mb-8 btn-login\"\n          color=\"blue\"\n          size=\"large\"\n          variant=\"tonal\"\n          block\n          @click=\"login\"\n        >\n          Sign In\n        </v-btn>\n        <v-btn\n          class=\"mb-8 btn-join\"\n          color=\"blue\"\n          size=\"large\"\n          variant=\"tonal\"\n          block\n          @click=\"join\"\n        >\n          Sign Up\n        </v-btn>\n        <v-btn\n          class=\"mb-8 btn-google\"\n          color=\"red\"\n          size=\"large\"\n          variant=\"tonal\"\n          block\n          @click=\"oauth('google')\"\n        >\n          Google\n        </v-btn>\n        <v-btn\n          class=\"mb-8 btn-google\"\n          color=\"yellow\"\n          size=\"large\"\n          variant=\"tonal\"\n          block\n          @click=\"oauth('kakao')\"\n        >\n          Kakao\n        </v-btn>\n        <img class=\"footer-logo\" src=\"https://www.kpcnc.co.kr/src/img/logo.png\" alt=\"logo\">\n      </v-card>\n      <div class=\"footer-text\">\n        CENTRALLY SYSTEM. Copyright 2024 KPCNC. All rights reserved.\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, onBeforeMount } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nimport LoginApi from '@/api/auth/LoginApi';\nimport { useAuthStore } from '@/store/auth';\n\n// 상태 관리\nconst visible = ref(false);\n\n// 라우터 사용 설정\nconst router = useRouter()\nconst route = useRoute();\n\nconst username = ref('');\nconst password = ref('');\nconst authStore = useAuthStore();\n\n// 소셜 로그인/일반 로그인 후, 사용자 정보를 가져오는 함수\nconst fetchUserInfo = async () => {\n  try {\n\n    console.log('fetchUserInfo');\n\n    const response = await LoginApi.getMe(); // GET /me\n    // 예: response.data = { username: 'aaa', roles: ['ROLE_USER'] }\n\n    console.log('사용자 정보:', response.data);\n\n    // 피니아에 저장\n    authStore.login({\n      username: response.data.username,\n      roles: response.data.roles,\n    });\n\n    // 로그인 성공 후 원하는 페이지 이동\n    router.push('/');\n\n  } catch (error) {\n    console.error('사용자 정보를 가져오는 중 오류가 발생했습니다:', error);\n    alert('로그인에 실패했거나, 사용자 정보를 불러올 수 없습니다.');\n  }\n};\n\n// 로그인 함수\nconst login = async () => {\n  try {\n    const response = await LoginApi.login(username.value, password.value);\n    if (response.status === 200) {\n      await fetchUserInfo();\n    } else {\n      alert('로그인 실패! 아이디와 비밀번호를 확인하세요.');\n    }\n  } catch (error) {\n    alert('로그인 오류가 발생했습니다.');\n  }\n};\n\n// 소셜 종류(google, kakao)에 따라 다른 엔드포인트로 이동\nconst oauth = (social) => {\n  if (social === 'google') {\n    // (예) 구글 OAuth2 로그인 엔드포인트로 이동\n    // 스프링 백엔드(Security)에서 설정한 /oauth2/authorization/google\n    window.location.href = 'http://localhost:8080/auth/oauth2/authorization/google';\n  } else if (social === 'kakao') {\n    window.location.href = 'http://localhost:8080/auth/oauth2/authorization/kakao';\n  } else {\n    alert('알 수 없는 소셜 로그인 방식입니다.');\n  }\n};\n\n// 회원가입\nconst join = () => {\n  console.log('join clicked');\n  router.push('/join');\n};\n\n// 페이지 뜨기 전, 로그인 여부 확인 → 이미 로그인됐다면 / 로 이동\nonBeforeMount(() => {\n  const search = route.query.search;\n  if (search) {\n    alert('일반 가입 후 소셜 연동을 할 수 있습니다.');\n    return // 아래 로직은 더 이상 진행 X\n  }\n  if (authStore.isAuthenticated) {\n    router.push('/');\n  }\n});\n</script>\n\n<style scoped>\n.centered-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  min-height: 100vh; /* Full height */\n  padding: 16px; /* Padding for some space */\n  box-sizing: border-box; /* Include padding and border in element's total width and height */\n  background-color: #375a7f; /* Blue background color */\n}\n\n/* 새로운 스타일 추가 */\n.footer-text {\n  display: flex;\n  align-items: center;\n  justify-content: flex-end; /* 오른쪽 정렬 */\n  color: white;\n  font-size: 0.75rem; /* 작은 글씨 */\n  margin-top: 10px; /* 카드와 조금 띄움 */\n}\n\n.footer-logo {\n  width: 95px; /* 이미지 크기 설정 */\n  height: 20px;\n  margin-top: 20px;\n  margin-left: auto; /* 텍스트와 이미지 사이의 간격 */\n  display: block; /* 블록 요소로 설정 */\n}\n\n.mb-8 {\n  margin-bottom: 7px !important;\n}\n\n.btn-join {\n  margin-bottom: 10px !important;\n}\n\n.warning-text {\n  margin-bottom: 20px !important;\n}\n\n@media (max-width: 1200px) {\n  /* 모바일에서 특정 요소를 숨기고 공간을 없애는 CSS */\n  .footer-logo, .text-warning {\n    display: none !important; /* 숨기고 공간을 완전히 제거 */\n  }\n\n  .text-caption {\n    font-size: 0.5rem !important;\n  }\n\n  .v-input__details {\n    height: 0px !important;\n    width: 0px !important;\n    padding: 0px !important;\n  }\n\n  .header-logo {\n    margin-top: 0px !important;\n    margin-bottom: 0px !important;\n    width: 200px;\n  }\n}\n</style>\n","import script from \"./UserLogin.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UserLogin.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UserLogin.vue?vue&type=style&index=0&id=10f2d580&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-10f2d580\"]])\n\nexport default __exports__","<template>\n  <div class=\"container mt-5\">\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-8\">\n        <div class=\"card\">\n          <div class=\"card-header text-center\">\n            <img src=\"https://www.kpcnc.co.kr/src/img/logo.png\" class=\"logo mb-3\" alt=\"logo\">\n          </div>\n          <div class=\"card-body\">\n            <!--\n              렌더링 후 참조 설정\n                Vue는 컴포넌트가 마운트될 때 ref 속성이 붙은 DOM 요소를 찾아서, \n                해당 요소를 지정한 ref 변수(여기서는 formRef)에 할당\n                이때 formRef.value는 실제 <form> DOM 요소가 됨\n\n              DOM 요소의 내장 메서드 활용\n                HTML <form> 요소는 기본적으로 checkValidity()나 reportValidity() 같은\n                내장 메서드를 가지고 있음.\n                formRef.value를 통해 이 메서드들을 호출할 수 있게 되는 것\n            -->\n            <form ref=\"formRef\" @submit.prevent=\"handleSubmit\">\n\n              <!-- 이름과 핸드폰 번호 -->\n              <div class=\"form-group custom-grid\">\n                <div>\n                  <label for=\"userName\">이름</label>\n                  <DefaultTextfield\n                    id=\"userName\"\n                    v-model=\"userName\"\n                    size=\"full\"\n                    required\n                  />\n                </div>\n                <div>\n                  <label for=\"phone\">핸드폰 번호</label>\n                  <DefaultTextfield\n                    id=\"phone\"\n                    v-model=\"phone\"\n                    size=\"full\"\n                    placeholder=\"'-' 없이 입력하세요\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <!-- 이메일 + 인증코드 / 인증 메일 발송 -->\n              <div class=\"form-group\">\n                <div>\n                  <label for=\"email\">이메일</label>\n                  <div style=\"display: flex; align-items: center;\">\n                    <DefaultTextfield\n                      id=\"email\"\n                      v-model=\"email\"\n                      size=\"full\"\n                      validationType=\"email\"\n                      required\n                    />\n                    <DefaultButton\n                      color=\"gray\"\n                      @click=\"sendEmailVerification\"\n                    >\n                      인증 메일 발송\n                    </DefaultButton>\n                  </div>\n                </div>\n              </div>\n              <!-- 인증코드 입력 + 버튼 (한 줄 배치) -->\n              <div class=\"form-group\">\n                <div style=\"display: flex; align-items: center;\">\n                  <DefaultTextfield\n                    id=\"verificationCode\"\n                    v-model=\"verificationCode\"\n                    size=\"small\"\n                    :disabled=\"verificationCodeDisable\"\n                    placeholder=\"인증코드 입력\"\n                  />\n                  <DefaultButton\n                    color=\"yellow\"\n                    @click=\"sameVerification\"\n                  >\n                    인증 확인\n                  </DefaultButton>\n                </div>\n              </div>\n\n              <!-- 비밀번호와 비밀번호 확인 -->\n              <div class=\"form-group custom-grid mt-3\">\n                <div>\n                  <label for=\"password\">비밀번호</label>\n                  <!-- <input type=\"password\" class=\"form-control\" id=\"password\" v-model=\"password\" required> -->\n                  <DefaultTextfield\n                    type=\"password\"\n                    id=\"password\"\n                    v-model=\"password\"\n                    size=\"full\"\n                    required\n                  />\n                </div>\n                <div>\n                  <label for=\"confirmPassword\">비밀번호 확인</label>\n                  <DefaultTextfield\n                    type=\"password\"\n                    id=\"confirmPassword\"\n                    v-model=\"confirmPassword\"\n                    size=\"full\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <!-- 생년월일과 입사일 -->\n              <div class=\"form-group custom-grid mt-3\">\n                <div>\n                  <label for=\"dob\">생년월일</label>\n                  <DefaultTextfield\n                    type=\"date\"\n                    id=\"dob\"\n                    v-model=\"dob\"\n                    size=\"full\"\n                    required\n                  />\n                </div>\n                <div>\n                  <label for=\"joinDate\">입사일</label>\n                  <DefaultTextfield\n                    type=\"date\"\n                    id=\"joinDate\"\n                    v-model=\"joinDate\"\n                    size=\"full\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <!-- 부서, 팀, 직급 -->\n              <div class=\"form-group custom-grid-3 mt-3\">\n                <div>\n                  <label for=\"department\">부서</label>\n                  <select class=\"form-control\" id=\"department\" v-model=\"department\" required>\n                    <option value=\"\" disabled>부서 선택</option>\n                    <option value=\"IT\">IT</option>\n                    <option value=\"HR\">HR</option>\n                    <option value=\"Finance\">Finance</option>\n                  </select>\n                </div>\n                <div>\n                  <label for=\"team\">팀</label>\n                  <select class=\"form-control\" id=\"team\" v-model=\"team\" required>\n                    <option value=\"\" disabled>팀 선택</option>\n                    <option value=\"Team A\">Team A</option>\n                    <option value=\"Team B\">Team B</option>\n                    <option value=\"Team C\">Team C</option>\n                  </select>\n                </div>\n                <div>\n                  <label for=\"position\">직급</label>\n                  <DefaultTextfield\n                    id=\"position\"\n                    v-model=\"position\"\n                    size=\"full\"\n                    placeholder=\"직급 입력\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <!-- 우편번호와 주소 -->\n              <div class=\"form-group mt-3\">\n                <label for=\"zonecode\">우편번호</label>\n                <div class=\"input-group\">\n                  <DefaultTextfield\n                    id=\"zonecode\"\n                    v-model=\"zonecode\"\n                    size=\"full\"\n                    placeholder=\"우편번호\"\n                    :disabled=\"true\"\n                    required\n                  />\n                  <div class=\"input-group-append\">\n                    <DefaultButton\n                      color=\"gray\"\n                      @click=\"openModal\"\n                    >\n                      주소 검색\n                    </DefaultButton>\n                  </div>\n                </div>\n              </div>\n\n              <div class=\"form-group mt-3\">\n                <label for=\"address\">주소</label>\n                <DefaultTextfield\n                  id=\"address\"\n                  v-model=\"address\"\n                  size=\"full\"\n                  placeholder=\"주소를 입력하세요\"\n                  :disabled=\"true\"\n                  required\n                />\n              </div>\n\n              <!-- 상세주소 입력 -->\n              <div class=\"form-group mt-3\">\n                <label for=\"detailAddress\">상세 주소</label>\n                <DefaultTextfield\n                  id=\"detailAddress\"\n                  v-model=\"detailAddress\"\n                  size=\"full\"\n                  placeholder=\"상세 주소를 입력하세요\"\n                />\n              </div>\n\n              <!-- 저장 버튼 -->\n              <div class=\"form-group\">\n                <div class=\"btn-container\">\n                  <DefaultButton\n                    size=\"large\"\n                    @click=\"handleSubmit\">\n                    가입하기\n                  </DefaultButton>\n                  <DefaultButton\n                    size=\"large\"\n                    color=\"gray\"\n                    @click=\"onGoBack\">\n                    돌아가기\n                  </DefaultButton>\n                </div>\n              </div>\n\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n    <KakaoAddressModal\n      :visible=\"isModalOpen\"\n      @close=\"closeModal\"\n      @selectAddress=\"handleSelectAddress\"\n    />\n  </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport DefaultButton from '@/components/common/button/DefaultButton.vue';\nimport DefaultTextfield from '@/components/common/textfield/DefaultTextfield.vue';\nimport KakaoAddressModal from '@/components/common/kakao/address/KakaoAddressModal.vue';\n\n// 라우터 사용 설정\nconst router = useRouter();\n\nconst userName = ref('');\nconst email = ref('');\nconst phone = ref('');\nconst dob = ref('');\nconst joinDate = ref('');\nconst department = ref('');\nconst team = ref('');  // 팀을 위한 상태 추가\nconst position = ref('');\nconst password = ref('');\nconst confirmPassword = ref('');\n\n// 인증 코드 입력값\nconst verificationCode = ref('');\nconst verificationCodeDisable = ref(false);\n\n/**\n * 카카오 주소 API\n */\nconst zonecode = ref('');\nconst address = ref('');\nconst detailAddress = ref('');\nconst isModalOpen = ref(false);\n\nfunction openModal() {\n  isModalOpen.value = true;\n}\nfunction closeModal() {\n  isModalOpen.value = false;\n}\nfunction handleSelectAddress(payload) {\n  // payload = { address: ..., zonecode: ... }\n  address.value = payload.address;\n  zonecode.value = payload.zonecode;\n}\n\n/**\n * 인증 메일 발송 버튼 클릭 시\n *  - 백엔드에 email 보내서 인증코드 생성 & 메일 발송 요청\n */\nasync function sendEmailVerification() {\n  if (!email.value) {\n    alert('이메일을 입력하세요.');\n    return;\n  }\n\n  try {\n    // 백엔드 API 예시 (POST /api/auth/sendVerificationCode)\n    // 실제 로직은 프로젝트 API 경로에 맞춰 수정\n    const response = await fetch('/api/auth/sendVerificationCode', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ email: email.value })\n    });\n    if (response.ok) {\n      alert('인증 메일이 발송되었습니다. 메일함을 확인하세요!');\n    } else {\n      alert('인증 메일 발송에 실패했습니다.');\n    }\n  } catch (error) {\n    console.error('인증 메일 발송 에러:', error);\n  }\n}\n\n/**\n * 인증 확인 버튼 클릭 시\n *  - 백엔드에 인증코드 보내서 검증\n */\nasync function sameVerification() {\n  try {\n    // 백엔드 API 예시 (POST /api/auth/sendVerificationCode)\n    // 실제 로직은 프로젝트 API 경로에 맞춰 수정\n    const response = await fetch('/api/auth/sendVerificationCode', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ email: email.value })\n    });\n    if (response.ok) {\n      verificationCodeDisable.value = true;\n    } else {\n      alert('인증 코드 검증에 실패했습니다.');\n    }\n  } catch (error) {\n    console.error('인증 코드 검증 에러:', error);\n  }\n}\n\n/**\n * 회원 가입 벡엔드 호출\n *  - 폼 제출 시 호출되는 함수\n */\nconst formRef = ref(null);\nconst handleSubmit = () => {\n  // formRef를 통해 폼 요소의 유효성을 검사합니다.\n  if (!formRef.value.checkValidity()) {\n    formRef.value.reportValidity();\n    return;\n  }\n\n  if (password.value !== confirmPassword.value) {\n    alert('비밀번호가 일치하지 않습니다.');\n    return;\n  }\n\n  if (!verificationCode.value) {\n    alert('인증코드를 입력하세요.');\n    return;\n  }\n\n/**\n * \n * \n * \n * \n *  verificationCode는 백엔드에서 암호화 된 값으로 해줘야함\n *  이후 암호화 된 값을 백엔드에서 검증해야함\n * \n * \n * \n * \n */\n  // 서버로 데이터를 전송하는 로직을 추가하세요\n  console.log('회원가입 완료:', {\n    userName: userName.value,\n    email : email.value,\n    phone: phone.value,\n    dob: dob.value,\n    joinDate: joinDate.value,\n    department: department.value,\n    team: team.value, // 팀 정보 추가\n    position: position.value,\n    address: address.value,\n    detailAddress: detailAddress.value,\n    password: password.value,\n    verificationCode: verificationCode.value\n  });\n};\n\nconst onGoBack = () => {\n  router.push('login');\n};\n</script>\n\n<style scoped>\n.container {\n  margin-top: 50px;\n}\n\n.logo {\n  width: 150px;\n  margin: 10px 0 10px 0 !important;\n}\n\n.card-header {\n  background-color: #f8f9fa;\n  border-bottom: 1px solid #dee2e6;\n}\n\n.form-group {\n  margin-bottom: 20px;\n}\n\n.btn-container {\n  display: flex; /* 버튼을 가로로 정렬 */\n  justify-content: center; /* 자식 요소들을 가로로 중앙 정렬 */\n  gap: 0.5rem; /* 버튼 사이의 간격 설정 */\n  width: 100%; /* 부모 요소의 너비에 맞게 */\n}\n\n/* Custom Grid Layout */\n.custom-grid {\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  gap: 20px; /* 필드 간의 간격 */\n}\n\n#zonecode {\n  max-width: 30%; /* 우편번호 필드의 너비를 50%로 설정 */\n}\n\n/* 부서, 팀, 직급을 한 줄에 3개 배치 */\n.custom-grid-3 {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 20px; /* 필드 간의 간격 */\n}\n\n/* 모바일에서는 두 개의 필드가 한 줄에 나타나도록 강제 */\n@media (max-width: 1200px) {\n  label {\n    font-size: 0.7rem !important;\n  }\n  .custom-grid {\n    grid-template-columns: repeat(2, 1fr); /* 필드를 두 개씩 한 줄에 나타내도록 강제 */\n  }\n  .form-group {\n    margin-top: 10px !important;\n    margin-bottom: 0px !important;\n  }\n  .btn-save-back {\n    margin-top: 20px !important;\n  }\n  .form-control {\n    font-size: 0.65rem !important;\n  }\n  .btn-container {\n    margin-bottom: 20px;\n  }\n}\n</style>\n","import script from \"./UserJoin.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./UserJoin.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./UserJoin.vue?vue&type=style&index=0&id=b12c6cd2&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-b12c6cd2\"]])\n\nexport default __exports__","// src/router/index.js\n// import { createRouter, createWebHistory } from 'vue-router';\nimport { createRouter, createWebHashHistory } from 'vue-router';\nimport { useAuthStore } from '@/store/auth';  // Pinia 스토어\nimport { useLoadingStore } from '@/store/loading'; // Pinia 스토어\nimport authRoutes from './auth';\nimport receiptRoutes from './receipt';\nimport hrmRoutes from './hrm';\nimport systemRoutes from './system';\nimport MainPage from '@/views/MainPage.vue';\nimport UserLogin from '@/views/UserLogin.vue';\nimport UserJoin from '@/views/UserJoin.vue';\n\n/**\n * 로그인 확인 필요 없을 시 : meta에 requiresAuth=false 추가\n * menu는 백엔드에서 이력관리에서 사용\n */\nconst routes = [\n  {\n    path: '/',\n    name: 'MainPage',\n    component: MainPage,\n    meta: { \n      menu: '메인'\n    },\n  },\n  {\n    path: '/login',\n    name: 'UserLogin',\n    component: UserLogin,\n    meta: { \n      isLoginPage: true,\n      requiresAuth: false,\n      menu: '로그인'\n    },\n  },\n  {\n    path: '/join',\n    name: 'UserJoin',\n    component: UserJoin,\n    meta: {\n      isJoinPage: true,\n      requiresAuth: false,\n      menu: '회원가입'\n    },\n  },\n  {\n    path: '/auth',\n    name: 'Auth',\n    children: authRoutes,\n  },\n  {\n    path: '/receipt',\n    name: 'Receipt',\n    children: receiptRoutes,\n  },\n  {\n    path: '/hrm',\n    name: 'Hrm',\n    children: hrmRoutes,\n  },\n  {\n    path: '/system',\n    name: 'System',\n    children: systemRoutes,\n  },\n];\n\nconst router = createRouter({\n  // history: createWebHistory(),\n  history: createWebHashHistory(), // 해시모드(#) 사용\n  routes,\n});\n\n// 라우트 네비게이션 전역 가드 설정\n// 라우트 권한 확인\nrouter.beforeEach((to, from, next) => {\n\n  // .env에서 LOCALTEST가 true일 경우 인증 없이 통과\n  if (process.env.VUE_APP_LOCALTEST === 'true') {\n    return next();\n  }\n\n  const authStore = useAuthStore(); // Pinia\n  // 기본: 모든 라우트는 인증 필요로 가정\n  // 인증 불필요한 경우에만 requiresAuth: false가 명시되어 있음\n  const requiresAuth = !to.matched.some(record => record.meta.requiresAuth === false);\n\n  // (1) 인증이 필요한 라우트인지\n  if (requiresAuth) {\n\n    // 1-A) 로그인 여부 체크\n    if (!authStore.isAuthenticated) {\n      // 로그인 안 되어 있음 → 로그인 페이지로\n      alert('로그인이 필요합니다!');\n      return next({ name: 'UserLogin' });\n    }\n\n    // 1-B) 권한 체크 (allowedRoles가 있는 경우만 검사)\n    const routeAllowedRoles = to.meta.allowedRoles; // 예: ['ROLE_MANAGER', 'ROLE_EMPLOYEE']\n    if (routeAllowedRoles && routeAllowedRoles.length > 0) {\n      // 사용자 권한 배열\n      const userRoles = authStore.roles; // 예: ['ROLE_EMPLOYEE', 'ROLE_MANAGER']\n\n      // “하나라도 매칭되면 통과” 방식\n      const hasRole = userRoles.some(role => routeAllowedRoles.includes(role));\n      if (!hasRole) {\n        // 권한 없음 → 접근 불가\n        alert('해당 메뉴에 접근할 권한이 없습니다!');\n        return next(false); // 그냥 이전 페이지로 (또는 다른 경로로)\n      }\n    }\n  }\n  \n  // (2) 인증 불필요 or 권한 체크 통과\n  return next();\n});\n\n// 라우트 이동 완료 후 (혹은 중단 포함)\n// Axios 사용 중 라우터 이동 시 로딩 중단\nrouter.afterEach(() => {\n  // 라우트 이동 완료 시 로딩 종료\n  const loadingStore = useLoadingStore();\n  loadingStore.stopLoading();\n});\n\nexport default router;\n","import axios from 'axios';\nimport router from '@/router';\n// import { useLoadingStore } from '@/store/loading'; // <- 최상단 import 에러 발생\n\n/**\n *  예시\n        import { authApi } from '@/api/apiConfig';\n\n        export const login = (credentials) => {\n        return hrmApi.post('/login', credentials);\n        };\n */\n\n// SYSTEM API 인스턴스\nconst systemApi = axios.create({\n  baseURL: process.env.VUE_APP_SYSTEM_API_BASE_URL, // .env 파일에 설정된 RECEIPT API 기본 URL\n  withCredentials: true, // 쿠키 전송 허용(HttpOnly 쿠키로 JWT 관리)\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// AUTH API 인스턴스\nconst authApi = axios.create({\n  baseURL: process.env.VUE_APP_AUTH_API_BASE_URL, // .env 파일에 설정된 AUTH API 기본 URL\n  withCredentials: true, // 쿠키 전송 허용\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// HRM API 인스턴스\nconst hrmApi = axios.create({\n  baseURL: process.env.VUE_APP_HRM_API_BASE_URL, // .env 파일에 설정된 HRM API 기본 URL\n  withCredentials: true, // 쿠키 전송 허용\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// RECEIPT API 인스턴스\nconst receiptApi = axios.create({\n  baseURL: process.env.VUE_APP_RECEIPT_API_BASE_URL, // .env 파일에 설정된 RECEIPT API 기본 URL\n  withCredentials: true, // 쿠키 전송 허용(HttpOnly 쿠키로 JWT 관리)\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n\n// 인터셉터 등록을 지연시키기 위한 함수\n//    apiConfig.js에서 useLoadingStore()를 파일 최상단(모듈 스코프)에서 import해서 바로 호출하거나,\n//    addAuthInterceptor()를 import 시점에 즉시 실행하면 에러 발생 하므로 분리\n//    아직 Pinia가 main.js에서 app.use(createPinia())로 등록되지 않았는데 store를 쓰려고 해서 에러 발생\nexport function initInterceptors() {\n\n  // 로딩 PINIA\n  const { useLoadingStore } = require('@/store/loading'); \n  // 유저 PINIA\n  // const { useAuthStore } = require('@/store/auth');\n\n  const loadingStore = useLoadingStore();\n  // const authStore = useAuthStore();\n\n  // 공통으로 사용할 인터셉터 추가\n  const addAuthInterceptor = (apiInstance) => {\n\n    // ─────────────────────────────────────────────────────────────\n    // (1) Request Interceptor\n    // ─────────────────────────────────────────────────────────────\n    apiInstance.interceptors.request.use(\n      (config) => {\n        // 요청이 시작될 때 로딩 카운트를 올림\n        loadingStore.startLoading();\n\n        const currentRoute = router.currentRoute.value;\n        const menu = currentRoute?.meta?.menu || \"\";\n        // const user = authStore.user;\n\n        // config.headers['X-Menu-Vue'] = encodeURIComponent(menu);\n        // config.headers['X-User-Vue'] = encodeURIComponent(user);\n\n        // path=/ 는 쿠키의 유효 경로(path)를 지정\n        document.cookie = \"X-Menu-Vue=\" + encodeURIComponent(menu) + \"; path=/\";\n\n        // HttpOnly 쿠키 사용 시, 자바스크립트가 토큰을 넣어줄 필요가 없음\n        // 쿠키는 브라우저가 자동으로 전송합니다.\n        return config;\n      },\n      (error) => {\n        console.log('-----------------')\n        console.log(error);\n        console.log(error.response);\n        // 요청이 에러로 시작되면 (예외적인 케이스)\n        loadingStore.stopLoading();\n        /**\n         * \n         * \n         * \n         * 공통 에러 처리 추가하기\n         * \n         * \n         * \n         */\n        if (error.response && error.response.status === 401) {\n          alert(\"로그아웃 되었습니다 재로그인 해주세요\");\n          router.push('/login');\n        } else {\n          // 그 외 에러는 기본 에러 메시지 출력\n          console.log(error);\n          alert(error);\n        }\n        return Promise.reject(error);\n      }\n    );\n\n    // ─────────────────────────────────────────────────────────────\n    // (2) Response Interceptor: 응답 데이터만 반환\n    // ─────────────────────────────────────────────────────────────\n    apiInstance.interceptors.response.use(\n      (response) => {\n        // 응답이 정상적으로 왔을 때 로딩 카운트를 내림\n        loadingStore.stopLoading();\n        // response의 내부 데이터만 반환\n        // return response.data; // 상태값 추출을 못함\n        return response;\n      },\n      (error) => {\n        console.log(error);\n        alert(error);\n        // 응답이 에러일 경우에도 로딩 카운트를 내림\n        loadingStore.stopLoading();\n        /**\n         * \n         * \n         * \n         * 공통 에러 처리 추가하기\n         * \n         * \n         * \n         */\n        return Promise.reject(error);\n      }\n    );\n  };\n  \n  addAuthInterceptor(systemApi);\n  addAuthInterceptor(hrmApi);\n  addAuthInterceptor(receiptApi);\n  addAuthInterceptor(authApi);\n}\n\nexport { systemApi, hrmApi, receiptApi, authApi };\n","import { authApi } from '@/api/apiConfig';\n\nexport default {\n  async login(username, password) {\n    try {\n      // 로그인 기능 쿠키 설정\n      document.cookie = \"X-Func-Vue=\" + encodeURIComponent(\"로그인\") + \"; path=/\";\n      // const password = EncryptionUtil.encryptPassword(rawPassword, loginKey);\n      return await authApi.post('/login', {\n        username,\n        password\n      });\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error; // 에러 처리\n    }\n  },\n  \n  async logout() {\n    try {\n      // 로그아웃 기능 쿠키 설정\n      document.cookie = \"X-Func-Vue=\" + encodeURIComponent(\"로그아웃\") + \"; path=/\";\n      return await authApi.post('/logout');\n      // localStorage.removeItem('jwtToken');\n    } catch (error) {\n      console.error('Logout error:', error);\n    }\n  },\n\n  async getMe() {\n    // 서버에 GET /me 요청 -> JWT 쿠키 사용\n    return await authApi.get('/me');\n  },\n};\n","<template>\n  <nav class=\"navbar navbar-light\">\n    <router-link to=\"/\">\n      <a class=\"navbar-brand\" href=\"/hrm/user-information\">\n        <img src=\"https://www.kpcnc.co.kr/src/img/logo.png\" class=\"d-inline-block align-top\" alt=\"Logo\">\n      </a>\n    </router-link>\n    <div class=\"navbar-text\">\n      <router-link to=\"/hrm/user-information\" class=\"user-name\">\n        <img\n          src=\"https://avatars.githubusercontent.com/u/48048508?v=4\"\n          class=\"rounded-circle user-image\"\n          alt=\"User Image\"\n        >\n        권 범 준\n      </router-link>\n      <div>&nbsp;|&nbsp;</div>\n      <!-- 로그아웃 버튼 - 클릭 시 doLogout() 호출 -->\n      <a href=\"#\" class=\"user-name\" @click.prevent=\"doLogout\">\n        로그아웃\n      </a>\n      <i class=\"fas fa-caret-down user-icon\"></i> <!-- 아이콘 추가 -->\n    </div>\n  </nav>\n</template>\n\n<script setup>\nimport LoginApi from '@/api/auth/LoginApi';\nimport { useRouter } from 'vue-router'\nimport { useAuthStore } from '@/store/auth'\n\n// Vue Router, Pinia 스토어\nconst router = useRouter()\nconst authStore = useAuthStore()\n\n/**\n * 로그아웃 함수:\n * 1) 백엔드 /auth/logout 요청\n * 2) authStore.logout() → Pinia 스토어 상태 초기화\n * 3) 로그인 페이지로 라우팅\n */\nconst doLogout = async () => {\n  try {\n    // 백엔드에 로그아웃 요청\n    const response = await LoginApi.logout();\n    if (response.status === 200) {\n      alert('로그아웃 성공!!');\n    } else {\n      alert('로그아웃 실패!!');\n    }\n\n    // Pinia 스토어에서 사용자 상태 초기화\n    authStore.logout()\n\n    // 로그인 페이지 등 원하는 경로로 이동\n    router.push('/login')\n  } catch (error) {\n    console.error('로그아웃 요청 중 오류:', error)\n    alert('로그아웃 처리에 실패했습니다.')\n  }\n}\n</script>\n\n<style scoped>\n.navbar {\n  padding: 10px 20px 10px 10px;\n  background-color: #ffffff;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  position: sticky;\n  top: 0;\n  width: 100%;\n  z-index: 1000;\n  display: flex;\n  justify-content: space-between;\n}\n\n.navbar-brand img {\n  width: 160px;\n  height: 35px;\n}\n\n.navbar-text {\n  display: flex;\n  align-items: center;\n  font-weight: bold;\n  font-size: 1.25rem;\n  color: #333;\n  padding: 0px;\n}\n\n.user-image {\n  width: 40px;\n  height: 40px;\n  margin-right: 10px;\n  border: 2px solid #375a7f; /* 이미지 테두리 */\n}\n\n.user-name {\n  text-decoration: none; /* 링크 밑줄 제거 */\n  color: #375a7f; /* 텍스트 색상 */\n  margin-right: 8px; /* 아이콘과의 간격 조정 */\n}\n\n.user-name:hover {\n  color: #ff9f43; /* 호버 시 색상 변경 */\n}\n\n.user-icon {\n  color: #375a7f;\n  font-size: 1.2rem;\n}\n\n@media (max-width: 1200px) {\n  .navbar {\n    border-bottom: 1px solid #ddd;\n    position: sticky !important;\n  }\n\n  .navbar-brand img {\n    width: 140px;\n    height: 30px;\n  }\n\n  .navbar-text {\n    font-size: 1rem;\n  }\n\n  .user-image {\n    width: 30px;\n    height: 30px;\n  }\n\n  .user-icon {\n    font-size: 1rem;\n  }\n}\n\n@media (max-width: 500px) {\n  .navbar {\n    border-bottom: 1px solid #ddd;\n    position: sticky !important;\n  }\n\n  .navbar-brand img {\n    width: 120px;\n    height: 25px;\n  }\n\n  .navbar-text {\n    font-size: 0.8rem;\n  }\n\n  .user-image {\n    width: 30px;\n    height: 30px;\n  }\n\n  .user-icon {\n    font-size: 1rem;\n  }\n}\n</style>\n","import script from \"./HeaderLayout.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./HeaderLayout.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./HeaderLayout.vue?vue&type=style&index=0&id=0b76113b&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0b76113b\"]])\n\nexport default __exports__","<template>\n  <footer class=\"footer\">\n    <div class=\"container\">\n      <!-- Updated footer-info for right alignment -->\n      <div class=\"footer-info\">\n        <span>CENTRALLY SYSTEM. Copyright 2024 KPCNC. All rights reserved.</span>\n        <img src=\"https://www.kpcnc.co.kr/src/img/logo.png\" alt=\"Logo\" class=\"footer-logo\" />\n      </div>\n    </div>\n  </footer>\n</template>\n\n<script setup>\n</script>\n\n<style>\n.footer {\n  background-color: #ffffff;\n  text-align: center;\n  padding: 10px 0;\n  box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.1);\n  position: fixed;\n  width: calc(100% - 200px);\n  bottom: 0;\n  left: 250px;\n  z-index: 10 !important;\n}\n\n.footer-info {\n  align-items: center;\n  justify-content: flex-end;\n  color: black;\n  font-size: 0.75rem;\n  padding-right: 20px;\n}\n\n.footer-logo {\n  width: 100px;\n  height: 20px;\n  margin-left: 8px;\n}\n\n/* 반응형 스타일 */\n@media (max-width: 1200px) {\n  .footer-info {\n    font-size: 0.5rem; /* 모바일에서 글자 크기를 작게 */\n  }\n\n  .footer-logo {\n    width: 50px; /* 모바일에서 로고 크기 비율에 맞춰 작게 */\n    height: 10px; /* 모바일에서 로고 크기 비율에 맞춰 작게 */\n  }\n}\n</style>\n","import { render } from \"./FooterLayout.vue?vue&type=template&id=4b05d72b\"\nconst script = {}\n\nimport \"./FooterLayout.vue?vue&type=style&index=0&id=4b05d72b&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template> \n  <div>\n    <!-- 모바일 토글 버튼 -->\n    <button\n      v-if=\"isMobile\"\n      class=\"mobile-menu-toggle\"\n      @click=\"toggleSidebar\"\n      :class=\"{ 'top-zero': isSidebarOpen }\"\n    >\n      <span v-if=\"isSidebarOpen\" class=\"close-icon\">&times;</span>\n      <span v-else class=\"menu-icon\">&#9776;</span>\n    </button>\n\n    <!-- 사이드바 -->\n    <div class=\"sidebar\" :class=\"{ 'mobile-open': isSidebarOpen }\">\n      \n      <!-- 공지사항 메뉴 (HRM) - employee, manager -->\n      <div class=\"menu-item\" v-if=\"canShow(['ROLE_EMPLOYEE','ROLE_MANAGER'])\">\n        <router-link\n          to=\"/hrm/notice-integrated\"\n          @click=\"closeSidebar\"\n          class=\"main-menu\"\n        >\n          공지 사항\n        </router-link>\n      </div>\n\n      <!-- 영수증 관리 메뉴 (registrar, approver, closer) -->\n      <div class=\"menu-item\" v-if=\"canShow(['ROLE_REGISTRAR','ROLE_APPROVER','ROLE_CLOSER'])\">\n        <a href=\"#\" @click.prevent=\"toggleMenu('receipt')\" class=\"main-menu\">\n          <span class=\"arrow\">{{ menus.receipt ? '─' : '▶' }}</span>\n          <span>영수증</span>\n        </a>\n        <transition @before-enter=\"beforeEnter\" @enter=\"enter\" @leave=\"leave\">\n          <div v-if=\"menus.receipt\" class=\"submenu\">\n            <!-- (공통) registrar, approver, closer -->\n            <router-link\n              v-if=\"canShow(['ROLE_REGISTRAR','ROLE_APPROVER','ROLE_CLOSER'])\"\n              to=\"/receipt/receipt-submission\"\n              @click=\"handleMenuClick('receipt')\"\n              class=\"submenu-item\"\n            >\n              영수증 등록 (개인)\n            </router-link>\n            <router-link\n              v-if=\"canShow(['ROLE_REGISTRAR','ROLE_APPROVER','ROLE_CLOSER'])\"\n              to=\"/receipt/personal-receipt-history\"\n              @click=\"handleMenuClick('receipt')\"\n              class=\"submenu-item\"\n            >\n              영수증 신청내역 (개인)\n            </router-link>\n            <router-link\n              v-if=\"canShow(['ROLE_REGISTRAR','ROLE_APPROVER','ROLE_CLOSER'])\"\n              to=\"/receipt/annual-receipt-summary\"\n              @click=\"handleMenuClick('receipt')\"\n              class=\"submenu-item\"\n            >\n              영수증 년도별 요약 (개인)\n            </router-link>\n\n            <!-- (결재자, 마감자) approver, closer -->\n            <router-link\n              v-if=\"canShow(['ROLE_APPROVER','ROLE_CLOSER'])\"\n              to=\"/receipt/receipt-request-overview\"\n              @click=\"handleMenuClick('receipt')\"\n              class=\"submenu-item\"\n            >\n              영수증 신청 내역 현황 (결재)\n            </router-link>\n            <router-link\n              v-if=\"canShow(['ROLE_APPROVER','ROLE_CLOSER'])\"\n              to=\"/receipt/receipt-personal-request-details\"\n              @click=\"handleMenuClick('receipt')\"\n              class=\"submenu-item\"\n            >\n              영수증 신청 내역 상세페이지 (결재)\n            </router-link>\n            <router-link\n              v-if=\"canShow(['ROLE_APPROVER','ROLE_CLOSER'])\"\n              to=\"/receipt/receipt-search\"\n              @click=\"handleMenuClick('receipt')\"\n              class=\"submenu-item\"\n            >\n              영수증 내역 조회 (결재)\n            </router-link>\n            <router-link\n              v-if=\"canShow(['ROLE_APPROVER','ROLE_CLOSER'])\"\n              to=\"/receipt/receipt-search-detail\"\n              @click=\"handleMenuClick('receipt')\"\n              class=\"submenu-item\"\n            >\n              영수증 상세 내역 조회 (결재)\n            </router-link>\n            <router-link\n              v-if=\"canShow(['ROLE_APPROVER','ROLE_CLOSER'])\"\n              to=\"/receipt/receipt-closure-overview\"\n              @click=\"handleMenuClick('receipt')\"\n              class=\"submenu-item\"\n            >\n              영수증 결제 마감 확인 (결재|마감)\n            </router-link>\n\n            <!-- (마감자) closer -->\n            <router-link\n              v-if=\"canShow(['ROLE_CLOSER'])\"\n              to=\"/receipt/receipt-closure\"\n              @click=\"handleMenuClick('receipt')\"\n              class=\"submenu-item\"\n            >\n              영수증 마감 (마감자)\n            </router-link>\n          </div>\n        </transition>\n      </div>\n\n      <!-- 개인정보 관리 메뉴 (HRM) - employee, manager -->\n      <div class=\"menu-item\" v-if=\"canShow(['ROLE_EMPLOYEE','ROLE_MANAGER'])\">\n        <a href=\"#\" @click.prevent=\"toggleMenu('user')\" class=\"main-menu\">\n          <span class=\"arrow\">{{ menus.user ? '─' : '▶' }}</span>\n          <span>개인정보</span>\n        </a>\n        <transition @before-enter=\"beforeEnter\" @enter=\"enter\" @leave=\"leave\">\n          <div v-if=\"menus.user\" class=\"submenu\">\n            <router-link\n              to=\"/hrm/user-information\"\n              @click=\"handleMenuClick('user')\"\n              class=\"submenu-item\"\n            >\n              사용자 정보(공통)\n            </router-link>\n            <router-link\n              to=\"/hrm/\" \n              @click=\"handleMenuClick('user')\"\n              class=\"submenu-item\"\n            >\n              직원 일정(공통) <!-- (예시, 라우트 미정) -->\n            </router-link>\n          </div>\n        </transition>\n      </div>\n\n      <!-- 인적 자원 메뉴 (HRM) - manager -->\n      <div class=\"menu-item\" v-if=\"canShow(['ROLE_MANAGER'])\">\n        <a href=\"#\" @click.prevent=\"toggleMenu('management')\" class=\"main-menu\">\n          <span class=\"arrow\">{{ menus.management ? '─' : '▶' }}</span>\n          <span>인적 자원 관리</span>\n        </a>\n        <transition @before-enter=\"beforeEnter\" @enter=\"enter\" @leave=\"leave\">\n          <div v-if=\"menus.management\" class=\"submenu\">\n            <router-link\n              to=\"/hrm/user-management\"\n              @click=\"handleMenuClick('management')\"\n              class=\"submenu-item\"\n            >\n              사용자 관리(관리자)\n            </router-link>\n            <router-link\n              to=\"/hrm/performance-management\"\n              @click=\"handleMenuClick('management')\"\n              class=\"submenu-item\"\n            >\n              실적 관리(관리자)\n            </router-link>\n            <router-link\n              to=\"/hrm/user-permissions\"\n              @click=\"handleMenuClick('management')\"\n              class=\"submenu-item\"\n            >\n              권한 부여(관리자)\n            </router-link>\n            <router-link\n              to=\"/hrm/dept-team-manager\"\n              @click=\"handleMenuClick('management')\"\n              class=\"submenu-item\"\n            >\n              부서/직책 관리(관리자)\n            </router-link>\n          </div>\n        </transition>\n      </div>\n\n      <!-- 시스템 메뉴 (gateway) - manager -->\n      <div class=\"menu-item\" v-if=\"canShow(['ROLE_SYSTEM'])\">\n        <a href=\"#\" @click.prevent=\"toggleMenu('system')\" class=\"main-menu\">\n          <span class=\"arrow\">{{ menus.system ? '─' : '▶' }}</span>\n          <span>시스템 관리</span>\n        </a>\n        <transition @before-enter=\"beforeEnter\" @enter=\"enter\" @leave=\"leave\">\n          <div v-if=\"menus.system\" class=\"submenu\">\n            <router-link\n              to=\"/system/activity-log\"\n              @click=\"handleMenuClick('system')\"\n              class=\"submenu-item\"\n            >\n              이력 관리\n            </router-link>\n            <router-link\n              to=\"/system/role-management\"\n              @click=\"handleMenuClick('system')\"\n              class=\"submenu-item\"\n            >\n              권한 관리(인적관리로 이동해야함)\n            </router-link>\n          </div>\n        </transition>\n      </div>\n\n      <!-- 공통: 로그인, 회원가입 -->\n      <div class=\"menu-item\">\n        <router-link to=\"/login\" @click=\"closeSidebar\" class=\"main-menu\">\n          로그인 테스트(공통)\n        </router-link>\n        <router-link to=\"/join\" @click=\"closeSidebar\" class=\"main-menu\">\n          회원가입(공통)\n        </router-link>\n      </div>\n\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed } from 'vue';\nimport { useAuthStore } from '@/store/auth'; // Pinia 스토어\n\n// 1) Pinia에서 roles 가져오기\nconst authStore = useAuthStore();\nconst roles = computed(() => authStore.roles);\n\n// 2) Vue CLI 환경에서 .env의 VUE_APP_LOCALTEST 값 읽어오기\n//    => .env 파일에 VUE_APP_LOCALTEST=true 라고 되어 있으면 여기서 'true'로 인식\nconst isLocaltest = computed(() => process.env.VUE_APP_LOCALTEST === 'true');\n\n// 3) 헬퍼 함수 (권한 체크 + local test 옵션)\nconst hasAnyRole = (allowedRoles) => {\n  return allowedRoles.some((role) => roles.value.includes(role));\n};\n\n// localtest 모드 or ROLE_SYSTEM 이면 무조건 true, 아니면 기존 role 체크\nconst canShow = (allowedRoles) => {\n  if (isLocaltest.value) {\n    return true;\n  }\n  if (roles.value.includes('ROLE_SYSTEM')) {\n    return true;\n  }\n  return hasAnyRole(allowedRoles);\n};\n\n// 아래는 기존 사이드바 로직(모바일 토글 등)\nconst menus = ref({\n  receipt: false,\n  user: false,\n  management: false,\n  organization: false,\n});\n\nconst isMobile = ref(window.innerWidth <= 1200);\nconst isSidebarOpen = ref(false);\n\nconst updateIsMobile = () => {\n  isMobile.value = window.innerWidth <= 1200;\n};\n\nconst toggleSidebar = () => {\n  isSidebarOpen.value = !isSidebarOpen.value;\n  if (isSidebarOpen.value) {\n    document.querySelector('.mobile-menu-toggle').style.top = '85px';\n  } else {\n    document.querySelector('.mobile-menu-toggle').style.top = '90px';\n  }\n};\n\nconst closeSidebar = () => {\n  isSidebarOpen.value = false;\n  const menuToggleButton = document.querySelector('.mobile-menu-toggle');\n  if (menuToggleButton) {\n    menuToggleButton.style.top = '90px';\n  }\n};\n\nconst toggleMenu = (menu) => {\n  Object.keys(menus.value).forEach(key => {\n    if (key !== menu) {\n      menus.value[key] = false;\n    }\n  });\n  menus.value[menu] = !menus.value[menu];\n};\n\nconst handleMenuClick = () => {\n  if (isMobile.value) {\n    closeSidebar();\n  }\n};\n\n// JavaScript transition 훅\nconst beforeEnter = (el) => {\n  el.style.height = '0';\n  el.style.opacity = '0';\n};\nconst enter = (el, done) => {\n  const height = el.scrollHeight;\n  el.style.transition = 'all 0.3s ease';\n  el.style.height = height + 'px';\n  el.style.opacity = '1';\n  el.addEventListener('transitionend', done);\n};\nconst leave = (el, done) => {\n  el.style.transition = 'all 0.3s ease';\n  el.style.height = '0';\n  el.style.opacity = '0';\n  el.addEventListener('transitionend', done);\n};\n\nwindow.addEventListener('resize', updateIsMobile);\n</script>\n\n<style scoped>\n/* (기존 스타일 유지) */\n.sidebar {\n  background-color: #375a7f;\n  height: 100vh;\n  padding-top: 30px;\n  position: fixed;\n  top: 65px;\n  left: 0;\n  width: 250px;\n  transition: transform 0.3s ease;\n  z-index: 999;\n}\n.sidebar.mobile-open {\n  transform: translateX(0);\n}\n\n.menu-item {\n  padding-left: 15px;\n}\n.main-menu {\n  color: #fff;\n  text-decoration: none;\n  display: flex;\n  align-items: center;\n  padding: 10px 0;\n}\n\n.submenu {\n  padding-left: 12px;\n  font-size: 0.8rem;\n  overflow: hidden;\n}\n.submenu-item {\n  color: #fff;\n  text-decoration: none;\n  display: block;\n  padding: 6px 0 6px 10px;\n}\n.main-menu:hover,\n.submenu-item:hover {\n  background-color: #4f739b;\n  color: #fff;\n}\n.arrow {\n  margin-right: 5px;\n  font-size: 0.5rem;\n  font-weight: bold;\n}\n\n/* 모바일 대응 */\n@media (max-width: 1200px) {\n  .mobile-menu-toggle {\n    top: 90px;\n    font-size: 1.5rem;\n    margin-right: 10px;\n    padding: 0 8px;\n    border: none;\n    background-color: white;\n    border: 1px solid #ddd;\n    border-radius: 3px;\n    color: black;\n    position: fixed;\n    right: 10px;\n    z-index: 1000;\n    cursor: pointer;\n    opacity: 0.5;\n  }\n  .mobile-menu-toggle.top-zero {\n    background-color: transparent;\n    border: none;\n    opacity: 1;\n    margin-right: 10px;\n  }\n  .mobile-menu-toggle .close-icon {\n    color: white;\n    font-size: 2rem;\n  }\n  .mobile-menu-toggle .menu-icon {\n    color: black;\n  }\n  .sidebar {\n    transform: translateX(-100%);\n    width: 100%;\n    height: 100vh;\n    top: 65px;\n    position: fixed;\n    z-index: 999;\n  }\n  .sidebar.mobile-open {\n    transform: translateX(0);\n  }\n  .sidebar a {\n    padding: 10px 5px;\n    text-align: left;\n    border-right: none;\n    font-size: 0.75rem;\n  }\n  .submenu a {\n    padding-left: 20px;\n    font-size: 0.7rem;\n  }\n  .content {\n    margin-left: 0;\n    padding: 20px;\n    font-size: 0.875rem;\n  }\n  .content-title {\n    font-size: 1.25rem;\n    margin-bottom: 30px;\n  }\n  .submenu-item {\n    padding: 6px 0 6px 10px !important;\n  }\n}\n</style>\n","import script from \"./NavigationLayout.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./NavigationLayout.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./NavigationLayout.vue?vue&type=style&index=0&id=3e29f288&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3e29f288\"]])\n\nexport default __exports__","<template>\n  \n  <!--\n    Pinia에 useLoadingStore를 만들어 요청 카운트 기반으로 isLoading 여부를 관리합\n    Axios 인터셉터에 startLoading() / stopLoading()를 심어 모든 API 호출을 로딩 관리\n    Router 가드(beforeEach / afterEach)에도 동일하게 로딩 관리를 추가\n    메인 레이아웃 (App.vue 등) 에서 vue3-loading-overlay를 읽어 isLoading이 true면 스피너를 표시\n\n    :active=\"isLoading\"\n      true일 때 스피너 활성화, false면 숨김\n    opacity, backgroundColor\n      로딩 오버레이 배경 투명도와 배경색\n    loader, color\n      스피너 타입(spinner, dots, 등)과 색상\n    zIndex\n      오버레이가 다른 요소 위에 표시되도록 설정\n  -->\n  <!-- 로딩 오버레이 컴포넌트 -->\n  <LoadingOverlay\n    :active=\"isLoading\"\n    :opacity=\"0.8\"\n    :backgroundColor=\"'#ffffff'\"\n    :loader=\"'spinner'\"\n    :color=\"'#375a7f'\"\n    :zIndex=\"9999\"\n  />\n\n  <div>\n    <!-- v-if 조건을 사용하여 로그인 페이지가 아닐 때만 렌더링 -->\n    <Header v-if=\"!(isLoginPage || isJoinPage)\" />\n    <Navigation v-if=\"!(isLoginPage || isJoinPage)\" />\n    <router-view />\n    <Footer v-if=\"!(isLoginPage || isJoinPage)\" />\n  </div>\n</template>\n\n<script setup>\nimport { computed } from 'vue';\nimport { useRoute } from 'vue-router';\nimport Header from './components/HeaderLayout.vue';\nimport Footer from './components/FooterLayout.vue';\nimport Navigation from './components/NavigationLayout.vue';\n\nimport LoadingOverlay from 'vue3-loading-overlay';\nimport { useLoadingStore } from '@/store/loading';\nimport 'vue3-loading-overlay/dist/vue3-loading-overlay.css';\n\n// 로딩 스토어 사용\nconst loadingStore = useLoadingStore();\nconst isLoading = computed(() => loadingStore.isLoading);\n\nconst route = useRoute();\n\n// 현재 경로의 메타 정보를 확인하여 로그인 페이지 여부를 판별\nconst isLoginPage = computed(() => route.meta.isLoginPage);\nconst isJoinPage = computed(() => route.meta.isJoinPage);\n</script>\n\n<style scoped>\nbody {\n  font-family: 'Inter', sans-serif;\n  background-color: #F5F7FA;\n  padding-top: 56px;\n}\n\n.content {\n  padding: 30px 100px 0 100px;\n  margin-left: 220px;\n}\n\n.content-title {\n  margin-top: 30px;\n  margin-bottom: 60px;\n}\n\n#dataTable tbody tr:hover td {\n  background-color: #e7f1ff !important;\n}\n\n/* 날짜 선택 셀렉트 박스 크기 조정 */\n#yearSelect {\n  font-size: 0.8rem; /* 폰트 크기 줄이기 */\n  padding: 0.25rem 0.5rem; /* 패딩 줄이기 */\n  width: auto; /* 너비 자동 조정 */\n}\n\n/* 반응형 스타일 */\n@media (min-width: 1920px) {\n  .navbar-text {\n    font-size: 1.5rem; /* 더 큰 텍스트 크기 */\n  }\n}\n\n@media (max-width: 1200px) {\n  body {\n    padding-top: 0px;\n  }\n  h2 {\n    font-size: 1.25rem; /* 모바일 제목 글자 크기 조정 */\n  }\n  .mb-3 {\n    margin-bottom: 0.25rem !important; /* 하단 여백을 0.25rem으로 설정 */\n  }\n  .sidebar {\n    top: 0px;\n    width: 100%;\n    height: auto;\n    position: relative;\n    left: 0;\n    padding: 0;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n  }\n  .sidebar a {\n    padding: 10px 5px; /* 메뉴 항목의 상하 패딩을 줄여서 공간 절약 */\n    flex: 1;\n    text-align: center;\n    border-right: none; /* 우측 테두리 제거 */\n    font-size: 0.75rem; /* 모바일 사이드바 글자 크기 조정 */\n  }\n  .sidebar a:last-child {\n    border-right: none;\n  }\n  .submenu a {\n    padding: 5px 0; /* 하위 메뉴 항목의 상하 패딩을 줄여서 공간 절약 */\n    font-size: 0.7rem; /* 하위 메뉴 글자 크기 줄이기 */\n  }\n  .content {\n    margin-left: 0;\n    padding: 20px;\n    font-size: 0.875rem; /* 모바일 콘텐츠 글자 크기 조정 */\n  }\n  .content-title {\n    font-size: 1.25rem; /* 모바일 컨텐츠 제목 글자 크기 조정 */\n    margin-bottom: 30px;\n  }\n  .navbar {\n    position: static;\n    box-shadow: none;\n  }\n  .navbar-text {\n    justify-content: center;\n    font-size: 1rem; /* 모바일 네비게이션 텍스트 크기 조정 */\n  }\n  .footer {\n    width: 100%;\n    left: 0;\n    font-size: 0.875rem; /* 모바일 푸터 글자 크기 조정 */\n  }\n  .table {\n    font-size: 0.75rem; /* 모바일 테이블 글자 크기 조정 */\n  }\n}\n</style>\n","import script from \"./App.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./App.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=0df0ef98&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-0df0ef98\"]])\n\nexport default __exports__","// src/plugins/vuetify.js\nimport 'vuetify/styles'\nimport { createVuetify } from 'vuetify'\nimport * as components from 'vuetify/components'\nimport * as directives from 'vuetify/directives'\n\nexport default createVuetify({\n  components,\n  directives,\n  theme: {\n    defaultTheme: 'light',\n    themes: {\n      light: {\n        colors: {\n          primary: '#1976D2',\n          secondary: '#424242',\n          accent: '#82B1FF',\n          error: '#FF5252',\n          info: '#2196F3',\n          success: '#4CAF50',\n          warning: '#FB8C00'\n        },\n      },\n    },\n  },\n})\n","// src/main.js\nimport { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport vuetify from './plugins/vuetify'\nimport { BootstrapVue3 } from 'bootstrap-vue-3';\nimport { createPinia } from 'pinia';\nimport piniaPluginPersistedstate from 'pinia-plugin-persistedstate';\nimport { usePreviewModal } from './utils/preview-modal'; // Import the preview-modal composable\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap-vue-3/dist/bootstrap-vue-3.css';\nimport './assets/styles/common.css'; // 공통 CSS 임포트\nimport './assets/styles/card.css'; // 공통 CSS 임포트\nimport './assets/styles/preview-modal.css'; // 미리보기 CSS 임포트\nimport { initInterceptors } from '@/api/apiConfig';\n// import './assets/styles/font.css'; // 공통 Font CSS 임포트\n// import axios from 'axios';\n\n\n// 모바일 스타일 적용\n// import '@/styles/mobile.css'; \n\nconst app = createApp(App);\n\n// Register the preview modal globally\napp.config.globalProperties.$previewModal = usePreviewModal();\n\nconst pinia = createPinia();\npinia.use(piniaPluginPersistedstate);\napp.use(pinia);\n\napp.use(router);\napp.use(vuetify);\napp.use(BootstrapVue3);\n\ninitInterceptors();\n\napp.mount('#app');\n","import { defineStore } from 'pinia';\nimport { ref, computed } from 'vue';\n\nexport const useLoadingStore = defineStore('loading', () => {\n  // 현재 로딩 중인 요청(또는 동작)의 개수\n  const requestCount = ref(0);\n\n  // 로딩 상태: requestCount가 1 이상이면 로딩 중\n  const isLoading = computed(() => requestCount.value > 0);\n\n  // (1) 요청 시작 시 사용\n  function startLoading() {\n    requestCount.value++;\n  }\n\n  // (2) 요청 종료 시 사용\n  function stopLoading() {\n    if (requestCount.value > 0) {\n      requestCount.value--;\n    }\n  }\n\n  // (3) 로딩 강제 종료 (에러 등으로 꼬였을 때)\n  function resetLoading() {\n    requestCount.value = 0;\n  }\n\n  return {\n    isLoading,\n    startLoading,\n    stopLoading,\n    resetLoading,\n  };\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkcentrally_web\"] = self[\"webpackChunkcentrally_web\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(9395); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["useAuthStore","defineStore","state","isAuthenticated","user","userEmail","userProfileImgUrl","roles","getters","isLoggedIn","getUser","getUserEmail","getUserProfileImgUrl","getRoles","actions","login","userData","this","username","logout","persist","router","useRouter","route","useRoute","authStore","onBeforeMount","async","errorParam","query","error","alert","push","response","LoginApi","getMe","console","log","data","e","__exports__","authRoutes","path","name","component","OAuthCallback","meta","requiresAuth","menu","props","__props","columnStyles","column","style","fixedWidth","width","minWidth","maxWidth","handleRowClick","item","openSidebar","rowClick","selectedYear","ref","totalRequested","totalApproved","totalRejected","totalPending","isMobile","columns","key","label","dummyData","month","requested","approved","rejected","pending","fetchData","value","filter","reduce","sum","footerData","toLocaleString","onMounted","emits","__emit","handleClick","event","buttonClass","computed","sizeClass","size","colorClass","color","alignmentClass","align","emit","goToPage","page","totalPages","pageRange","half","Math","floor","visiblePageCount","start","currentPage","end","max","range","i","internalValue","get","modelValue","set","newValue","pattern","validationType","isValid","test","touched","startDate","endDate","nameSearch","viewMode","fetchDataFromServer","mockData","department","team","email","count","search","onPageChange","newPage","updateViewMode","window","innerWidth","addEventListener","isPreviewVisible","calculateAmountPerPerson","amount","parseInt","replace","peopleCount","people","length","getStatusClass","status","closeSidebar","closePreviewModal","closePreviewModalOnOutsideClick","target","classList","contains","previewImage","isZoomed","zoomedPosition","x","y","dragStart","isDragging","zoomOrigin","animationFrameId","lastTapTime","isTouchDevice","navigator","maxTouchPoints","openPreviewModal","imageUrl","toggleZoom","type","currentTime","Date","getTime","timeDifference","handleZoom","touches","clientX","clientY","rect","getBoundingClientRect","left","top","startDrag","includes","onDrag","preventDefault","deltaX","deltaY","image","document","querySelector","container","containerRect","imageRect","maxX","maxY","height","newX","newY","min","requestAnimationFrame","endDrag","removeEventListener","usePreviewModal","customClass","amountNum","date","reason","receiptName","receipt","rejectionReason","position","map","amountPerPerson","updateIsMobile","selectedItem","sidebarVisible","visiblePeopleLists","togglePeopleList","showPeopleList","selectedMonth","getCurrentMonth","now","getMonth","filterByMonth","handleBackgroundClick","disableBackgroundClose","closeModal","today","currentYear","getFullYear","currentMonth","confirmationModalVisible","resultModalVisible","closureResultTitle","closureResultBody","monthText","monthCloseLabel","isMonthCloseChecked","isButtonEnabled","handleCheckboxChange","currentDay","getDate","closureMonth","hasRejected","err","formatCurrency","computedStartDate","computedEndDate","printPDF","filteredStartDate","filteredEndDate","watch","newVal","customValue","goBack","back","decision","save","selectAllDecision","toggleApproveAll","forEach","toggleRejectAll","updateDecision","allApproved","every","allRejected","formatAmount","amountStr","formData","receiptImage","userSearch","searchResults","handleFileChange","files","searchUsers","exampleUsers","selectUser","openConfirmationModal","submitReceipt","modalInstance","openModal","modalElem","getElementById","bootstrap","backdrop","keyboard","show","hide","receiptRoutes","ReceiptSubmission","allowedRoles","PersonalReceiptHistory","AnnualReceiptSummary","ReceiptRequestOverview","ReceiptPersonalRequestDetails","ReceiptSearch","ReceiptSearchDetail","ReceiptClosureOverview","ReceiptClosure","localForm","form","newForm","deep","deleteConfirmVisible","saveNotice","showDeleteAlert","deleteNotice","id","modalElement","getNotices","cookie","encodeURIComponent","hrmApi","isAdmin","isModalVisible","isCreate","title","author","content","cookieConsent","NoticeIntegratedApi","items","showModal","mode","getLocalDate","setMinutes","getMinutes","getTimezoneOffset","toISOString","split","handleSave","updatedForm","idx","findIndex","d","handleDelete","idToDelete","postcodeContainer","openPostcodePopup","daum","Postcode","postcode","oncomplete","address","zonecode","onresize","embed","visible","nextTick","userName","phone","dob","joinDate","detailAddress","isModalOpen","handleSelectAddress","payload","handleSubmit","innerModalVisible","tempUser","passwordCheck","password","isPasswordMismatch","computedDate","leaveDate","handleChange","onSaveClick","isMismatch","isChanged","statusChangedFlag","original","JSON","stringify","current","onChange","selectedValue","modalVisible","saveCompleteModalVisible","noChangesModalVisible","saveCompleteMessageTitle","saveCompleteMessage","selectedUser","birthDate","employmentType","zipCode","location","originalUser","statusChanged","dataChanged","selectedDepartment","selectedTeam","departments","teams","availableTeams","fetchDepartments","departmentData","dep","acc","updateTeams","departmentsOptions","teamsOptions","BirthDate","filteredData","departmentMatch","teamMatch","nameMatch","handleSaveClick","saveUserDetails","axios","post","then","catch","closeNoChangesModal","closeSaveCompleteModal","inputValue","confirmEdit","newDepartment","newTeam","modalTitle","modalMessage","confirmationDepartmentModalVisible","confirmationTeamModalVisible","confirmSaveModalVisible","selectedDepartmentIndex","selectedTeamIndex","editTeamModalVisible","editingTeam","openDeleteDepartmentModal","index","addDepartment","trim","deleteDepartment","splice","addTeam","departmentIndex","openDeleteTeamModal","teamIndex","deleteTeam","openEditTeamModal","confirmEditTeam","saveDepartments","confirmSaveDepartments","beforeDate","afterDate","performanceName","performance","itemsPerPage","ceil","paginatedData","startIndex","slice","localFormData","submitForm","editData","editDataProp","submitEdit","searchName","searchNameResult","userRole","createModalVisible","fromDate","toDate","workType","performanceTitle","useEllipsis","ellipsisWidth","editModalVisible","filterData","params","openCreateModal","submitPerformance","openEditModal","updatedItem","removeItem","deletedItem","projects","departmentTeams","permissionLevels","paginatedUsers","isTableVisible","selectedProject","searchTerm","changes","onPermissionChange","permission","newDept","projectsOptions","project","getPermissionsFor","fetchUsersFromServer","savePermissions","hrmRoutes","NoticeIntegrated","UserInformation","UserManagement","DeptTeamManager","PerformanceHistory","PerformanceManagement","UserPermissions","windowWidth","updateWidth","onBeforeUnmount","baseFontSize","labelStyle","factor","fontSize","textAlign","rowClass","getActivityLogs","systemApi","searchData","ActivityLogApi","_createElementBlock","_cache","_createElementVNode","class","script","render","systemRoutes","ActivityLog","RoleManagement","_createStaticVNode","fetchUserInfo","oauth","social","href","join","confirmPassword","verificationCode","verificationCodeDisable","sendEmailVerification","fetch","method","headers","body","ok","sameVerification","formRef","checkValidity","reportValidity","onGoBack","routes","MainPage","UserLogin","isLoginPage","UserJoin","isJoinPage","children","createRouter","history","createWebHashHistory","beforeEach","to","from","next","afterEach","loadingStore","useLoadingStore","stopLoading","create","baseURL","process","withCredentials","authApi","receiptApi","initInterceptors","require","addAuthInterceptor","apiInstance","interceptors","request","use","config","startLoading","currentRoute","Promise","reject","doLogout","_hoisted_1","src","alt","isLocaltest","hasAnyRole","some","role","canShow","menus","management","organization","isSidebarOpen","toggleSidebar","menuToggleButton","toggleMenu","Object","keys","handleMenuClick","beforeEnter","el","opacity","enter","done","scrollHeight","transition","leave","isLoading","createVuetify","components","directives","theme","defaultTheme","themes","light","colors","primary","secondary","accent","info","success","warning","app","createApp","App","globalProperties","$previewModal","pinia","createPinia","piniaPluginPersistedstate","vuetify","BootstrapVue3","mount","requestCount","resetLoading","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","r","definition","o","defineProperty","enumerable","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}